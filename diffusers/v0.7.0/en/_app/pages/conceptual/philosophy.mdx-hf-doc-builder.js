import{S as Ae,i as Se,s as $e,e as i,k as M,w as ke,t as o,M as Le,c as n,d as t,m as N,a as r,x as Pe,h as a,b as l,G as e,g as O,y as De,L as Ie,q as Ge,o as Me,B as Ne,v as Re}from"../../chunks/vendor-hf-doc-builder.js";import{I as Te}from"../../chunks/IconCopyLink-hf-doc-builder.js";function qe(ce){let u,R,p,m,k,_,z,L,U,T,f,d,B,P,H,J,b,V,j,E,F,K,Q,h,W,D,X,Y,I,Z,ee,G,te,oe,ae,c,se,w,ie,ne,x,re,le,A,de,he,q;return _=new Te({}),{c(){u=i("meta"),R=M(),p=i("h1"),m=i("a"),k=i("span"),ke(_.$$.fragment),z=M(),L=i("span"),U=o("Philosophy"),T=M(),f=i("ul"),d=i("li"),B=o("Readability and clarity are preferred over highly optimized code. A strong importance is put on providing readable, intuitive and elementary code design. "),P=i("em"),H=o("E.g."),J=o(", the provided "),b=i("a"),V=o("schedulers"),j=o(" are separated from the provided "),E=i("a"),F=o("models"),K=o(" and use well-commented code that can be read alongside the original paper."),Q=M(),h=i("li"),W=o("Diffusers is "),D=i("strong"),X=o("modality independent"),Y=o(" and focuses on providing pretrained models and tools to build systems that generate "),I=i("strong"),Z=o("continuous outputs"),ee=o(", "),G=i("em"),te=o("e.g."),oe=o(" vision and audio. This is one of the guiding goals even if the initial pipelines are devoted to vision tasks."),ae=M(),c=i("li"),se=o("Diffusion models and schedulers are provided as concise, elementary building blocks. In contrast, diffusion pipelines are a collection of end-to-end diffusion systems that can be used out-of-the-box, should stay as close as possible to their original implementations and can include components of other libraries, such as text encoders. Examples of diffusion pipelines are "),w=i("a"),ie=o("Glide"),ne=o(", "),x=i("a"),re=o("Latent Diffusion"),le=o(" and "),A=i("a"),de=o("Stable Diffusion"),he=o("."),this.h()},l(s){const S=Le('[data-svelte="svelte-1phssyn"]',document.head);u=n(S,"META",{name:!0,content:!0}),S.forEach(t),R=N(s),p=n(s,"H1",{class:!0});var C=r(p);m=n(C,"A",{id:!0,class:!0,href:!0});var fe=r(m);k=n(fe,"SPAN",{});var ue=r(k);Pe(_.$$.fragment,ue),ue.forEach(t),fe.forEach(t),z=N(C),L=n(C,"SPAN",{});var pe=r(L);U=a(pe,"Philosophy"),pe.forEach(t),C.forEach(t),T=N(s),f=n(s,"UL",{});var $=r(f);d=n($,"LI",{});var g=r(d);B=a(g,"Readability and clarity are preferred over highly optimized code. A strong importance is put on providing readable, intuitive and elementary code design. "),P=n(g,"EM",{});var me=r(P);H=a(me,"E.g."),me.forEach(t),J=a(g,", the provided "),b=n(g,"A",{href:!0,rel:!0});var ge=r(b);V=a(ge,"schedulers"),ge.forEach(t),j=a(g," are separated from the provided "),E=n(g,"A",{href:!0,rel:!0});var ve=r(E);F=a(ve,"models"),ve.forEach(t),K=a(g," and use well-commented code that can be read alongside the original paper."),g.forEach(t),Q=N($),h=n($,"LI",{});var v=r(h);W=a(v,"Diffusers is "),D=n(v,"STRONG",{});var ye=r(D);X=a(ye,"modality independent"),ye.forEach(t),Y=a(v," and focuses on providing pretrained models and tools to build systems that generate "),I=n(v,"STRONG",{});var _e=r(I);Z=a(_e,"continuous outputs"),_e.forEach(t),ee=a(v,", "),G=n(v,"EM",{});var be=r(G);te=a(be,"e.g."),be.forEach(t),oe=a(v," vision and audio. This is one of the guiding goals even if the initial pipelines are devoted to vision tasks."),v.forEach(t),ae=N($),c=n($,"LI",{});var y=r(c);se=a(y,"Diffusion models and schedulers are provided as concise, elementary building blocks. In contrast, diffusion pipelines are a collection of end-to-end diffusion systems that can be used out-of-the-box, should stay as close as possible to their original implementations and can include components of other libraries, such as text encoders. Examples of diffusion pipelines are "),w=n(y,"A",{href:!0,rel:!0});var Ee=r(w);ie=a(Ee,"Glide"),Ee.forEach(t),ne=a(y,", "),x=n(y,"A",{href:!0,rel:!0});var we=r(x);re=a(we,"Latent Diffusion"),we.forEach(t),le=a(y," and "),A=n(y,"A",{href:!0,rel:!0});var xe=r(A);de=a(xe,"Stable Diffusion"),xe.forEach(t),he=a(y,"."),y.forEach(t),$.forEach(t),this.h()},h(){l(u,"name","hf:doc:metadata"),l(u,"content",JSON.stringify(Ce)),l(m,"id","philosophy"),l(m,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(m,"href","#philosophy"),l(p,"class","relative group"),l(b,"href","https://github.com/huggingface/diffusers/tree/main/src/diffusers/schedulers"),l(b,"rel","nofollow"),l(E,"href","https://github.com/huggingface/diffusers/tree/main/src/diffusers/models"),l(E,"rel","nofollow"),l(w,"href","https://github.com/openai/glide-text2im"),l(w,"rel","nofollow"),l(x,"href","https://github.com/CompVis/latent-diffusion"),l(x,"rel","nofollow"),l(A,"href","https://github.com/compvis/stable-diffusion"),l(A,"rel","nofollow")},m(s,S){e(document.head,u),O(s,R,S),O(s,p,S),e(p,m),e(m,k),De(_,k,null),e(p,z),e(p,L),e(L,U),O(s,T,S),O(s,f,S),e(f,d),e(d,B),e(d,P),e(P,H),e(d,J),e(d,b),e(b,V),e(d,j),e(d,E),e(E,F),e(d,K),e(f,Q),e(f,h),e(h,W),e(h,D),e(D,X),e(h,Y),e(h,I),e(I,Z),e(h,ee),e(h,G),e(G,te),e(h,oe),e(f,ae),e(f,c),e(c,se),e(c,w),e(w,ie),e(c,ne),e(c,x),e(x,re),e(c,le),e(c,A),e(A,de),e(c,he),q=!0},p:Ie,i(s){q||(Ge(_.$$.fragment,s),q=!0)},o(s){Me(_.$$.fragment,s),q=!1},d(s){t(u),s&&t(R),s&&t(p),Ne(_),s&&t(T),s&&t(f)}}}const Ce={local:"philosophy",title:"Philosophy"};function Oe(ce){return Re(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Be extends Ae{constructor(u){super();Se(this,u,Oe,qe,$e,{})}}export{Be as default,Ce as metadata};
