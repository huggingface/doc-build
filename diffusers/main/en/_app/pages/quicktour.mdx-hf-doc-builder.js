import{S as _n,i as wn,s as En,e as a,k as u,w as g,t as n,M as bn,c as o,d as i,m as p,a as s,x as v,h as l,b as h,G as t,g as f,y,L as kn,q as _,o as w,B as E,v as $n}from"../chunks/vendor-hf-doc-builder.js";import{I as yn}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as D}from"../chunks/CodeBlock-hf-doc-builder.js";function Pn(Vo){let q,Mt,S,R,at,J,Oi,ot,Gi,Lt,C,Ui,ke,Hi,Ri,Yt,$e,Ci,zt,Z,Ft,x,M,st,ee,Mi,nt,Li,Bt,T,Yi,Pe,zi,Fi,De,Bi,Ki,Kt,L,lt,I,rt,ft,Vi,Qi,ut,pt,Wi,Xi,ht,dt,Ji,Zi,P,N,ct,ea,ta,mt,ia,aa,gt,Te,oa,sa,O,vt,na,la,yt,ra,fa,_t,Ae,ua,pa,G,wt,ha,da,Et,ca,ma,bt,je,ga,va,U,kt,ya,_a,$t,wa,Ea,Pt,qe,ba,Vt,Y,ka,Se,Dt,$a,Pa,Qt,d,Da,xe,Ta,Aa,Ie,ja,qa,te,Sa,xa,Ne,Ia,Na,ie,Oa,Ga,Wt,ae,Xt,z,Ua,Oe,Ha,Ra,Jt,oe,Zt,F,Ca,Tt,Ma,La,ei,se,ti,B,Ya,ne,za,Fa,ii,Ge,Ba,ai,le,oi,c,Ka,re,Va,Qa,fe,Wa,Xa,At,Ja,Za,ue,jt,eo,to,pe,io,ao,si,he,ni,A,oo,de,qt,so,no,St,lo,ro,li,ce,ri,Ue,fo,fi,me,xt,uo,po,ui,ge,pi,K,ho,It,co,mo,hi,ve,di,He,go,ci,ye,mi,m,vo,Re,yo,_o,Ce,wo,Eo,Nt,bo,ko,Me,$o,Po,gi,_e,vi,V,Do,Le,To,Ao,yi,H,we,jo,qo,Ye,So,xo,_i,Q,Io,Ee,No,Oo,wi,b,Ot,ze,Go,Uo,Gt,Fe,Ho,Ro,Ut,Be,Co,Mo,Ht,Ke,Lo,Ei,be,Yo,Ve,Rt,zo,bi,Qe,Fo,ki;return J=new yn({}),Z=new D({props:{code:"pip install --upgrade diffusers",highlighted:"pip install --upgrade diffusers"}}),ee=new yn({}),ae=new D({props:{code:`from diffusers import DiffusionPipeline

pipeline = DiffusionPipeline.from_pretrained("CompVis/ldm-text2im-large-256")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> diffusers <span class="hljs-keyword">import</span> DiffusionPipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>pipeline = DiffusionPipeline.from_pretrained(<span class="hljs-string">&quot;CompVis/ldm-text2im-large-256&quot;</span>)`}}),oe=new D({props:{code:'pipeline.to("cuda")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>pipeline.to(<span class="hljs-string">&quot;cuda&quot;</span>)'}}),se=new D({props:{code:'image = pipeline("An image of a squirrel in Picasso style").images[0]',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>image = pipeline(<span class="hljs-string">&quot;An image of a squirrel in Picasso style&quot;</span>).images[<span class="hljs-number">0</span>]'}}),le=new D({props:{code:'image.save("image_of_squirrel_painting.png")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>image.save(<span class="hljs-string">&quot;image_of_squirrel_painting.png&quot;</span>)'}}),he=new D({props:{code:'AUTH_TOKEN = "<please-fill-with-your-token>"',highlighted:'AUTH_TOKEN = <span class="hljs-string">&quot;&lt;please-fill-with-your-token&gt;&quot;</span>'}}),ce=new D({props:{code:`from diffusers import DiffusionPipeline

pipeline = DiffusionPipeline.from_pretrained("runwayml/stable-diffusion-v1-5", use_auth_token=AUTH_TOKEN)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> diffusers <span class="hljs-keyword">import</span> DiffusionPipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>pipeline = DiffusionPipeline.from_pretrained(<span class="hljs-string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, use_auth_token=AUTH_TOKEN)`}}),ge=new D({props:{code:`git lfs install
git clone https://huggingface.co/runwayml/stable-diffusion-v1-5`,highlighted:`git lfs install
git clone https:<span class="hljs-regexp">//</span>huggingface.co<span class="hljs-regexp">/runwayml/</span>stable-diffusion-v1-<span class="hljs-number">5</span>`}}),ve=new D({props:{code:'pipeline = DiffusionPipeline.from_pretrained("./stable-diffusion-v1-5")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>pipeline = DiffusionPipeline.from_pretrained(<span class="hljs-string">&quot;./stable-diffusion-v1-5&quot;</span>)'}}),ye=new D({props:{code:`generator.to("cuda")
image = generator("An image of a squirrel in Picasso style").images[0]
image.save("image_of_squirrel_painting.png")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>generator.to(<span class="hljs-string">&quot;cuda&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>image = generator(<span class="hljs-string">&quot;An image of a squirrel in Picasso style&quot;</span>).images[<span class="hljs-number">0</span>]
<span class="hljs-meta">&gt;&gt;&gt; </span>image.save(<span class="hljs-string">&quot;image_of_squirrel_painting.png&quot;</span>)`}}),_e=new D({props:{code:`from diffusers import EulerDiscreteScheduler

pipeline = StableDiffusionPipeline.from_pretrained("runwayml/stable-diffusion-v1-5", use_auth_token=AUTH_TOKEN)

# change scheduler to Euler
pipeline.scheduler = EulerDiscreteScheduler.from_config(pipeline.scheduler.config)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> diffusers <span class="hljs-keyword">import</span> EulerDiscreteScheduler

<span class="hljs-meta">&gt;&gt;&gt; </span>pipeline = StableDiffusionPipeline.from_pretrained(<span class="hljs-string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, use_auth_token=AUTH_TOKEN)

<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-comment"># change scheduler to Euler</span>
<span class="hljs-meta">&gt;&gt;&gt; </span>pipeline.scheduler = EulerDiscreteScheduler.from_config(pipeline.scheduler.config)`}}),{c(){q=a("meta"),Mt=u(),S=a("h1"),R=a("a"),at=a("span"),g(J.$$.fragment),Oi=u(),ot=a("span"),Gi=n("Quicktour"),Lt=u(),C=a("p"),Ui=n(`Get up and running with \u{1F9E8} Diffusers quickly!
Whether you\u2019re a developer or an everyday user, this quick tour will help you get started and show you how to use `),ke=a("a"),Hi=n("DiffusionPipeline"),Ri=n(" for inference."),Yt=u(),$e=a("p"),Ci=n("Before you begin, make sure you have all the necessary libraries installed:"),zt=u(),g(Z.$$.fragment),Ft=u(),x=a("h2"),M=a("a"),st=a("span"),g(ee.$$.fragment),Mi=u(),nt=a("span"),Li=n("DiffusionPipeline"),Bt=u(),T=a("p"),Yi=n("The "),Pe=a("a"),zi=n("DiffusionPipeline"),Fi=n(" is the easiest way to use a pre-trained diffusion system for inference. You can use the "),De=a("a"),Bi=n("DiffusionPipeline"),Ki=n(" out-of-the-box for many tasks across different modalities. Take a look at the table below for some supported tasks:"),Kt=u(),L=a("table"),lt=a("thead"),I=a("tr"),rt=a("th"),ft=a("strong"),Vi=n("Task"),Qi=u(),ut=a("th"),pt=a("strong"),Wi=n("Description"),Xi=u(),ht=a("th"),dt=a("strong"),Ji=n("Pipeline"),Zi=u(),P=a("tbody"),N=a("tr"),ct=a("td"),ea=n("Unconditional Image Generation"),ta=u(),mt=a("td"),ia=n("generate an image from gaussian noise"),aa=u(),gt=a("td"),Te=a("a"),oa=n("unconditional_image_generation"),sa=u(),O=a("tr"),vt=a("td"),na=n("Text-Guided Image Generation"),la=u(),yt=a("td"),ra=n("generate an image given a text prompt"),fa=u(),_t=a("td"),Ae=a("a"),ua=n("conditional_image_generation"),pa=u(),G=a("tr"),wt=a("td"),ha=n("Text-Guided Image-to-Image Translation"),da=u(),Et=a("td"),ca=n("generate an image given an original image and a text prompt"),ma=u(),bt=a("td"),je=a("a"),ga=n("img2img"),va=u(),U=a("tr"),kt=a("td"),ya=n("Text-Guided Image-Inpainting"),_a=u(),$t=a("td"),wa=n("fill the masked part of an image given the image, the mask and a text prompt"),Ea=u(),Pt=a("td"),qe=a("a"),ba=n("inpaint"),Vt=u(),Y=a("p"),ka=n("For more in-detail information on how diffusion pipelines function for the different tasks, please have a look at the "),Se=a("a"),Dt=a("strong"),$a=n("Using Diffusers"),Pa=n(" section."),Qt=u(),d=a("p"),Da=n("As an example, start by creating an instance of "),xe=a("a"),Ta=n("DiffusionPipeline"),Aa=n(` and specify which pipeline checkpoint you would like to download.
You can use the `),Ie=a("a"),ja=n("DiffusionPipeline"),qa=n(" for any "),te=a("a"),Sa=n("Diffusers\u2019 checkpoint"),xa=n(`.
In this guide though, you\u2019ll use `),Ne=a("a"),Ia=n("DiffusionPipeline"),Na=n(" for text-to-image generation with "),ie=a("a"),Oa=n("Latent Diffusion"),Ga=n(":"),Wt=u(),g(ae.$$.fragment),Xt=u(),z=a("p"),Ua=n("The "),Oe=a("a"),Ha=n("DiffusionPipeline"),Ra=n(` downloads and caches all modeling, tokenization, and scheduling components.
Because the model consists of roughly 1.4 billion parameters, we strongly recommend running it on GPU.
You can move the generator object to GPU, just like you would in PyTorch.`),Jt=u(),g(oe.$$.fragment),Zt=u(),F=a("p"),Ca=n("Now you can use the "),Tt=a("code"),Ma=n("pipeline"),La=n(" on your text prompt:"),ei=u(),g(se.$$.fragment),ti=u(),B=a("p"),Ya=n("The output is by default wrapped into a "),ne=a("a"),za=n("PIL Image object"),Fa=n("."),ii=u(),Ge=a("p"),Ba=n("You can save the image by simply calling:"),ai=u(),g(le.$$.fragment),oi=u(),c=a("p"),Ka=n("More advanced models, like "),re=a("a"),Va=n("Stable Diffusion"),Qa=n(" require you to accept a "),fe=a("a"),Wa=n("license"),Xa=n(` before running the model.
This is due to the improved image generation capabilities of the model and the potentially harmful content that could be produced with it.
Please, head over to your stable diffusion model of choice, `),At=a("em"),Ja=n("e.g."),Za=u(),ue=a("a"),jt=a("code"),eo=n("runwayml/stable-diffusion-v1-5"),to=n(`, read the license carefully and tick the checkbox if you agree.
You have to be a registered user in \u{1F917} Hugging Face Hub, and you\u2019ll also need to use an access token for the code to work. For more information on access tokens, please refer to `),pe=a("a"),io=n("this section of the documentation"),ao=n(`.
Having \u201Cclick-accepted\u201D the license, you can save your token:`),si=u(),g(he.$$.fragment),ni=u(),A=a("p"),oo=n("You can then load "),de=a("a"),qt=a("code"),so=n("runwayml/stable-diffusion-v1-5"),no=n(`
just like we did before only that now you need to pass your `),St=a("code"),lo=n("AUTH_TOKEN"),ro=n(":"),li=u(),g(ce.$$.fragment),ri=u(),Ue=a("p"),fo=n(`If you do not pass your authentication token you will see that the diffusion system will not be correctly
downloaded. Forcing the user to pass an authentication token ensures that it can be verified that the
user has indeed read and accepted the license, which also means that an internet connection is required.`),fi=u(),me=a("p"),xt=a("strong"),uo=n("Note"),po=n(`: If you do not want to be forced to pass an authentication token, you can also simply download
the weights locally via:`),ui=u(),g(ge.$$.fragment),pi=u(),K=a("p"),ho=n(`and then load locally saved weights into the pipeline. This way, you do not need to pass an authentication
token. Assuming that `),It=a("code"),co=n('"./stable-diffusion-v1-5"'),mo=n(` is the local path to the cloned stable-diffusion-v1-5 repo,
you can also load the pipeline as follows:`),hi=u(),g(ve.$$.fragment),di=u(),He=a("p"),go=n("Running the pipeline is then identical to the code above as it\u2019s the same model architecture."),ci=u(),g(ye.$$.fragment),mi=u(),m=a("p"),vo=n("Diffusion systems can be used with multiple different "),Re=a("a"),yo=n("schedulers"),_o=n(` each with their
pros and cons. By default, Stable Diffusion runs with `),Ce=a("a"),wo=n("PNDMScheduler"),Eo=n(`, but it\u2019s very simple to
use a different scheduler. `),Nt=a("em"),bo=n("E.g."),ko=n(" if you would instead like to use the "),Me=a("a"),$o=n("EulerDiscreteScheduler"),Po=n(` scheduler,
you could use it as follows:`),gi=u(),g(_e.$$.fragment),vi=u(),V=a("p"),Do=n("For more in-detail information on how to change between schedulers, please refer to the "),Le=a("a"),To=n("Using Schedulers"),Ao=n(" guide."),yi=u(),H=a("p"),we=a("a"),jo=n("Stability AI\u2019s"),qo=n(` Stable Diffusion model is an impressive image generation model
and can do much more than just generating images from text. We have dedicated a whole documentation page,
just for Stable Diffusion `),Ye=a("a"),So=n("here"),xo=n("."),_i=u(),Q=a("p"),Io=n("If you want to know how to optimize Stable Diffusion to run on less memory, higher inference speeds, on specific hardware, such as Mac, or with "),Ee=a("a"),No=n("ONNX Runtime"),Oo=n(`, please have a look at our
optimization pages:`),wi=u(),b=a("ul"),Ot=a("li"),ze=a("a"),Go=n("Optimized PyTorch on GPU"),Uo=u(),Gt=a("li"),Fe=a("a"),Ho=n("Mac OS with PyTorch"),Ro=u(),Ut=a("li"),Be=a("a"),Co=n("ONNX"),Mo=u(),Ht=a("li"),Ke=a("a"),Lo=n("OpenVINO"),Ei=u(),be=a("p"),Yo=n("If you want to fine-tune or train your diffusion model, please have a look at the "),Ve=a("a"),Rt=a("strong"),zo=n("training section"),bi=u(),Qe=a("p"),Fo=n("Finally, please be considerate when distributing generated images publicly \u{1F917}."),this.h()},l(e){const r=bn('[data-svelte="svelte-1phssyn"]',document.head);q=o(r,"META",{name:!0,content:!0}),r.forEach(i),Mt=p(e),S=o(e,"H1",{class:!0});var $i=s(S);R=o($i,"A",{id:!0,class:!0,href:!0});var Qo=s(R);at=o(Qo,"SPAN",{});var Wo=s(at);v(J.$$.fragment,Wo),Wo.forEach(i),Qo.forEach(i),Oi=p($i),ot=o($i,"SPAN",{});var Xo=s(ot);Gi=l(Xo,"Quicktour"),Xo.forEach(i),$i.forEach(i),Lt=p(e),C=o(e,"P",{});var Pi=s(C);Ui=l(Pi,`Get up and running with \u{1F9E8} Diffusers quickly!
Whether you\u2019re a developer or an everyday user, this quick tour will help you get started and show you how to use `),ke=o(Pi,"A",{href:!0});var Jo=s(ke);Hi=l(Jo,"DiffusionPipeline"),Jo.forEach(i),Ri=l(Pi," for inference."),Pi.forEach(i),Yt=p(e),$e=o(e,"P",{});var Zo=s($e);Ci=l(Zo,"Before you begin, make sure you have all the necessary libraries installed:"),Zo.forEach(i),zt=p(e),v(Z.$$.fragment,e),Ft=p(e),x=o(e,"H2",{class:!0});var Di=s(x);M=o(Di,"A",{id:!0,class:!0,href:!0});var es=s(M);st=o(es,"SPAN",{});var ts=s(st);v(ee.$$.fragment,ts),ts.forEach(i),es.forEach(i),Mi=p(Di),nt=o(Di,"SPAN",{});var is=s(nt);Li=l(is,"DiffusionPipeline"),is.forEach(i),Di.forEach(i),Bt=p(e),T=o(e,"P",{});var We=s(T);Yi=l(We,"The "),Pe=o(We,"A",{href:!0});var as=s(Pe);zi=l(as,"DiffusionPipeline"),as.forEach(i),Fi=l(We," is the easiest way to use a pre-trained diffusion system for inference. You can use the "),De=o(We,"A",{href:!0});var os=s(De);Bi=l(os,"DiffusionPipeline"),os.forEach(i),Ki=l(We," out-of-the-box for many tasks across different modalities. Take a look at the table below for some supported tasks:"),We.forEach(i),Kt=p(e),L=o(e,"TABLE",{});var Ti=s(L);lt=o(Ti,"THEAD",{});var ss=s(lt);I=o(ss,"TR",{});var Xe=s(I);rt=o(Xe,"TH",{});var ns=s(rt);ft=o(ns,"STRONG",{});var ls=s(ft);Vi=l(ls,"Task"),ls.forEach(i),ns.forEach(i),Qi=p(Xe),ut=o(Xe,"TH",{});var rs=s(ut);pt=o(rs,"STRONG",{});var fs=s(pt);Wi=l(fs,"Description"),fs.forEach(i),rs.forEach(i),Xi=p(Xe),ht=o(Xe,"TH",{});var us=s(ht);dt=o(us,"STRONG",{});var ps=s(dt);Ji=l(ps,"Pipeline"),ps.forEach(i),us.forEach(i),Xe.forEach(i),ss.forEach(i),Zi=p(Ti),P=o(Ti,"TBODY",{});var W=s(P);N=o(W,"TR",{});var Je=s(N);ct=o(Je,"TD",{});var hs=s(ct);ea=l(hs,"Unconditional Image Generation"),hs.forEach(i),ta=p(Je),mt=o(Je,"TD",{});var ds=s(mt);ia=l(ds,"generate an image from gaussian noise"),ds.forEach(i),aa=p(Je),gt=o(Je,"TD",{});var cs=s(gt);Te=o(cs,"A",{href:!0});var ms=s(Te);oa=l(ms,"unconditional_image_generation"),ms.forEach(i),cs.forEach(i),Je.forEach(i),sa=p(W),O=o(W,"TR",{});var Ze=s(O);vt=o(Ze,"TD",{});var gs=s(vt);na=l(gs,"Text-Guided Image Generation"),gs.forEach(i),la=p(Ze),yt=o(Ze,"TD",{});var vs=s(yt);ra=l(vs,"generate an image given a text prompt"),vs.forEach(i),fa=p(Ze),_t=o(Ze,"TD",{});var ys=s(_t);Ae=o(ys,"A",{href:!0});var _s=s(Ae);ua=l(_s,"conditional_image_generation"),_s.forEach(i),ys.forEach(i),Ze.forEach(i),pa=p(W),G=o(W,"TR",{});var et=s(G);wt=o(et,"TD",{});var ws=s(wt);ha=l(ws,"Text-Guided Image-to-Image Translation"),ws.forEach(i),da=p(et),Et=o(et,"TD",{});var Es=s(Et);ca=l(Es,"generate an image given an original image and a text prompt"),Es.forEach(i),ma=p(et),bt=o(et,"TD",{});var bs=s(bt);je=o(bs,"A",{href:!0});var ks=s(je);ga=l(ks,"img2img"),ks.forEach(i),bs.forEach(i),et.forEach(i),va=p(W),U=o(W,"TR",{});var tt=s(U);kt=o(tt,"TD",{});var $s=s(kt);ya=l($s,"Text-Guided Image-Inpainting"),$s.forEach(i),_a=p(tt),$t=o(tt,"TD",{});var Ps=s($t);wa=l(Ps,"fill the masked part of an image given the image, the mask and a text prompt"),Ps.forEach(i),Ea=p(tt),Pt=o(tt,"TD",{});var Ds=s(Pt);qe=o(Ds,"A",{href:!0});var Ts=s(qe);ba=l(Ts,"inpaint"),Ts.forEach(i),Ds.forEach(i),tt.forEach(i),W.forEach(i),Ti.forEach(i),Vt=p(e),Y=o(e,"P",{});var Ai=s(Y);ka=l(Ai,"For more in-detail information on how diffusion pipelines function for the different tasks, please have a look at the "),Se=o(Ai,"A",{href:!0});var As=s(Se);Dt=o(As,"STRONG",{});var js=s(Dt);$a=l(js,"Using Diffusers"),js.forEach(i),As.forEach(i),Pa=l(Ai," section."),Ai.forEach(i),Qt=p(e),d=o(e,"P",{});var k=s(d);Da=l(k,"As an example, start by creating an instance of "),xe=o(k,"A",{href:!0});var qs=s(xe);Ta=l(qs,"DiffusionPipeline"),qs.forEach(i),Aa=l(k,` and specify which pipeline checkpoint you would like to download.
You can use the `),Ie=o(k,"A",{href:!0});var Ss=s(Ie);ja=l(Ss,"DiffusionPipeline"),Ss.forEach(i),qa=l(k," for any "),te=o(k,"A",{href:!0,rel:!0});var xs=s(te);Sa=l(xs,"Diffusers\u2019 checkpoint"),xs.forEach(i),xa=l(k,`.
In this guide though, you\u2019ll use `),Ne=o(k,"A",{href:!0});var Is=s(Ne);Ia=l(Is,"DiffusionPipeline"),Is.forEach(i),Na=l(k," for text-to-image generation with "),ie=o(k,"A",{href:!0,rel:!0});var Ns=s(ie);Oa=l(Ns,"Latent Diffusion"),Ns.forEach(i),Ga=l(k,":"),k.forEach(i),Wt=p(e),v(ae.$$.fragment,e),Xt=p(e),z=o(e,"P",{});var ji=s(z);Ua=l(ji,"The "),Oe=o(ji,"A",{href:!0});var Os=s(Oe);Ha=l(Os,"DiffusionPipeline"),Os.forEach(i),Ra=l(ji,` downloads and caches all modeling, tokenization, and scheduling components.
Because the model consists of roughly 1.4 billion parameters, we strongly recommend running it on GPU.
You can move the generator object to GPU, just like you would in PyTorch.`),ji.forEach(i),Jt=p(e),v(oe.$$.fragment,e),Zt=p(e),F=o(e,"P",{});var qi=s(F);Ca=l(qi,"Now you can use the "),Tt=o(qi,"CODE",{});var Gs=s(Tt);Ma=l(Gs,"pipeline"),Gs.forEach(i),La=l(qi," on your text prompt:"),qi.forEach(i),ei=p(e),v(se.$$.fragment,e),ti=p(e),B=o(e,"P",{});var Si=s(B);Ya=l(Si,"The output is by default wrapped into a "),ne=o(Si,"A",{href:!0,rel:!0});var Us=s(ne);za=l(Us,"PIL Image object"),Us.forEach(i),Fa=l(Si,"."),Si.forEach(i),ii=p(e),Ge=o(e,"P",{});var Hs=s(Ge);Ba=l(Hs,"You can save the image by simply calling:"),Hs.forEach(i),ai=p(e),v(le.$$.fragment,e),oi=p(e),c=o(e,"P",{});var $=s(c);Ka=l($,"More advanced models, like "),re=o($,"A",{href:!0,rel:!0});var Rs=s(re);Va=l(Rs,"Stable Diffusion"),Rs.forEach(i),Qa=l($," require you to accept a "),fe=o($,"A",{href:!0,rel:!0});var Cs=s(fe);Wa=l(Cs,"license"),Cs.forEach(i),Xa=l($,` before running the model.
This is due to the improved image generation capabilities of the model and the potentially harmful content that could be produced with it.
Please, head over to your stable diffusion model of choice, `),At=o($,"EM",{});var Ms=s(At);Ja=l(Ms,"e.g."),Ms.forEach(i),Za=p($),ue=o($,"A",{href:!0,rel:!0});var Ls=s(ue);jt=o(Ls,"CODE",{});var Ys=s(jt);eo=l(Ys,"runwayml/stable-diffusion-v1-5"),Ys.forEach(i),Ls.forEach(i),to=l($,`, read the license carefully and tick the checkbox if you agree.
You have to be a registered user in \u{1F917} Hugging Face Hub, and you\u2019ll also need to use an access token for the code to work. For more information on access tokens, please refer to `),pe=o($,"A",{href:!0,rel:!0});var zs=s(pe);io=l(zs,"this section of the documentation"),zs.forEach(i),ao=l($,`.
Having \u201Cclick-accepted\u201D the license, you can save your token:`),$.forEach(i),si=p(e),v(he.$$.fragment,e),ni=p(e),A=o(e,"P",{});var it=s(A);oo=l(it,"You can then load "),de=o(it,"A",{href:!0,rel:!0});var Fs=s(de);qt=o(Fs,"CODE",{});var Bs=s(qt);so=l(Bs,"runwayml/stable-diffusion-v1-5"),Bs.forEach(i),Fs.forEach(i),no=l(it,`
just like we did before only that now you need to pass your `),St=o(it,"CODE",{});var Ks=s(St);lo=l(Ks,"AUTH_TOKEN"),Ks.forEach(i),ro=l(it,":"),it.forEach(i),li=p(e),v(ce.$$.fragment,e),ri=p(e),Ue=o(e,"P",{});var Vs=s(Ue);fo=l(Vs,`If you do not pass your authentication token you will see that the diffusion system will not be correctly
downloaded. Forcing the user to pass an authentication token ensures that it can be verified that the
user has indeed read and accepted the license, which also means that an internet connection is required.`),Vs.forEach(i),fi=p(e),me=o(e,"P",{});var Bo=s(me);xt=o(Bo,"STRONG",{});var Qs=s(xt);uo=l(Qs,"Note"),Qs.forEach(i),po=l(Bo,`: If you do not want to be forced to pass an authentication token, you can also simply download
the weights locally via:`),Bo.forEach(i),ui=p(e),v(ge.$$.fragment,e),pi=p(e),K=o(e,"P",{});var xi=s(K);ho=l(xi,`and then load locally saved weights into the pipeline. This way, you do not need to pass an authentication
token. Assuming that `),It=o(xi,"CODE",{});var Ws=s(It);co=l(Ws,'"./stable-diffusion-v1-5"'),Ws.forEach(i),mo=l(xi,` is the local path to the cloned stable-diffusion-v1-5 repo,
you can also load the pipeline as follows:`),xi.forEach(i),hi=p(e),v(ve.$$.fragment,e),di=p(e),He=o(e,"P",{});var Xs=s(He);go=l(Xs,"Running the pipeline is then identical to the code above as it\u2019s the same model architecture."),Xs.forEach(i),ci=p(e),v(ye.$$.fragment,e),mi=p(e),m=o(e,"P",{});var j=s(m);vo=l(j,"Diffusion systems can be used with multiple different "),Re=o(j,"A",{href:!0});var Js=s(Re);yo=l(Js,"schedulers"),Js.forEach(i),_o=l(j,` each with their
pros and cons. By default, Stable Diffusion runs with `),Ce=o(j,"A",{href:!0});var Zs=s(Ce);wo=l(Zs,"PNDMScheduler"),Zs.forEach(i),Eo=l(j,`, but it\u2019s very simple to
use a different scheduler. `),Nt=o(j,"EM",{});var en=s(Nt);bo=l(en,"E.g."),en.forEach(i),ko=l(j," if you would instead like to use the "),Me=o(j,"A",{href:!0});var tn=s(Me);$o=l(tn,"EulerDiscreteScheduler"),tn.forEach(i),Po=l(j,` scheduler,
you could use it as follows:`),j.forEach(i),gi=p(e),v(_e.$$.fragment,e),vi=p(e),V=o(e,"P",{});var Ii=s(V);Do=l(Ii,"For more in-detail information on how to change between schedulers, please refer to the "),Le=o(Ii,"A",{href:!0});var an=s(Le);To=l(an,"Using Schedulers"),an.forEach(i),Ao=l(Ii," guide."),Ii.forEach(i),yi=p(e),H=o(e,"P",{});var Ct=s(H);we=o(Ct,"A",{href:!0,rel:!0});var on=s(we);jo=l(on,"Stability AI\u2019s"),on.forEach(i),qo=l(Ct,` Stable Diffusion model is an impressive image generation model
and can do much more than just generating images from text. We have dedicated a whole documentation page,
just for Stable Diffusion `),Ye=o(Ct,"A",{href:!0});var sn=s(Ye);So=l(sn,"here"),sn.forEach(i),xo=l(Ct,"."),Ct.forEach(i),_i=p(e),Q=o(e,"P",{});var Ni=s(Q);Io=l(Ni,"If you want to know how to optimize Stable Diffusion to run on less memory, higher inference speeds, on specific hardware, such as Mac, or with "),Ee=o(Ni,"A",{href:!0,rel:!0});var nn=s(Ee);No=l(nn,"ONNX Runtime"),nn.forEach(i),Oo=l(Ni,`, please have a look at our
optimization pages:`),Ni.forEach(i),wi=p(e),b=o(e,"UL",{});var X=s(b);Ot=o(X,"LI",{});var ln=s(Ot);ze=o(ln,"A",{href:!0});var rn=s(ze);Go=l(rn,"Optimized PyTorch on GPU"),rn.forEach(i),ln.forEach(i),Uo=p(X),Gt=o(X,"LI",{});var fn=s(Gt);Fe=o(fn,"A",{href:!0});var un=s(Fe);Ho=l(un,"Mac OS with PyTorch"),un.forEach(i),fn.forEach(i),Ro=p(X),Ut=o(X,"LI",{});var pn=s(Ut);Be=o(pn,"A",{href:!0});var hn=s(Be);Co=l(hn,"ONNX"),hn.forEach(i),pn.forEach(i),Mo=p(X),Ht=o(X,"LI",{});var dn=s(Ht);Ke=o(dn,"A",{href:!0});var cn=s(Ke);Lo=l(cn,"OpenVINO"),cn.forEach(i),dn.forEach(i),X.forEach(i),Ei=p(e),be=o(e,"P",{});var Ko=s(be);Yo=l(Ko,"If you want to fine-tune or train your diffusion model, please have a look at the "),Ve=o(Ko,"A",{href:!0});var mn=s(Ve);Rt=o(mn,"STRONG",{});var gn=s(Rt);zo=l(gn,"training section"),gn.forEach(i),mn.forEach(i),Ko.forEach(i),bi=p(e),Qe=o(e,"P",{});var vn=s(Qe);Fo=l(vn,"Finally, please be considerate when distributing generated images publicly \u{1F917}."),vn.forEach(i),this.h()},h(){h(q,"name","hf:doc:metadata"),h(q,"content",JSON.stringify(Dn)),h(R,"id","quicktour"),h(R,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(R,"href","#quicktour"),h(S,"class","relative group"),h(ke,"href","/docs/diffusers/main/en/using-diffusers/loading#diffusers.DiffusionPipeline"),h(M,"id","diffusionpipeline"),h(M,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(M,"href","#diffusionpipeline"),h(x,"class","relative group"),h(Pe,"href","/docs/diffusers/main/en/using-diffusers/loading#diffusers.DiffusionPipeline"),h(De,"href","/docs/diffusers/main/en/using-diffusers/loading#diffusers.DiffusionPipeline"),h(Te,"href","./using-diffusers/unconditional_image_generation%60"),h(Ae,"href","./using-diffusers/conditional_image_generation"),h(je,"href","./using-diffusers/img2img"),h(qe,"href","./using-diffusers/inpaint"),h(Se,"href","./using-diffusers/overview"),h(xe,"href","/docs/diffusers/main/en/using-diffusers/loading#diffusers.DiffusionPipeline"),h(Ie,"href","/docs/diffusers/main/en/using-diffusers/loading#diffusers.DiffusionPipeline"),h(te,"href","https://huggingface.co/models?library=diffusers&sort=downloads"),h(te,"rel","nofollow"),h(Ne,"href","/docs/diffusers/main/en/using-diffusers/loading#diffusers.DiffusionPipeline"),h(ie,"href","https://huggingface.co/CompVis/ldm-text2im-large-256"),h(ie,"rel","nofollow"),h(Oe,"href","/docs/diffusers/main/en/using-diffusers/loading#diffusers.DiffusionPipeline"),h(ne,"href","https://pillow.readthedocs.io/en/stable/reference/Image.html?highlight=image#the-image-class"),h(ne,"rel","nofollow"),h(re,"href","https://huggingface.co/CompVis/stable-diffusion"),h(re,"rel","nofollow"),h(fe,"href","https://huggingface.co/spaces/CompVis/stable-diffusion-license"),h(fe,"rel","nofollow"),h(ue,"href","https://huggingface.co/runwayml/stable-diffusion-v1-5"),h(ue,"rel","nofollow"),h(pe,"href","https://huggingface.co/docs/hub/security-tokens"),h(pe,"rel","nofollow"),h(de,"href","https://huggingface.co/runwayml/stable-diffusion-v1-5"),h(de,"rel","nofollow"),h(Re,"href","./api/schedulers"),h(Ce,"href","/docs/diffusers/main/en/api/schedulers#diffusers.PNDMScheduler"),h(Me,"href","/docs/diffusers/main/en/api/schedulers#diffusers.EulerDiscreteScheduler"),h(Le,"href","./using-diffusers/schedulers"),h(we,"href","https://stability.ai/"),h(we,"rel","nofollow"),h(Ye,"href","./conceptual/stable_diffusion"),h(Ee,"href","https://onnxruntime.ai/"),h(Ee,"rel","nofollow"),h(ze,"href","./optimization/fp16"),h(Fe,"href","./optimization/mps"),h(Be,"href","./optimization/onnx"),h(Ke,"href","./optimization/open_vino"),h(Ve,"href","./training/overview")},m(e,r){t(document.head,q),f(e,Mt,r),f(e,S,r),t(S,R),t(R,at),y(J,at,null),t(S,Oi),t(S,ot),t(ot,Gi),f(e,Lt,r),f(e,C,r),t(C,Ui),t(C,ke),t(ke,Hi),t(C,Ri),f(e,Yt,r),f(e,$e,r),t($e,Ci),f(e,zt,r),y(Z,e,r),f(e,Ft,r),f(e,x,r),t(x,M),t(M,st),y(ee,st,null),t(x,Mi),t(x,nt),t(nt,Li),f(e,Bt,r),f(e,T,r),t(T,Yi),t(T,Pe),t(Pe,zi),t(T,Fi),t(T,De),t(De,Bi),t(T,Ki),f(e,Kt,r),f(e,L,r),t(L,lt),t(lt,I),t(I,rt),t(rt,ft),t(ft,Vi),t(I,Qi),t(I,ut),t(ut,pt),t(pt,Wi),t(I,Xi),t(I,ht),t(ht,dt),t(dt,Ji),t(L,Zi),t(L,P),t(P,N),t(N,ct),t(ct,ea),t(N,ta),t(N,mt),t(mt,ia),t(N,aa),t(N,gt),t(gt,Te),t(Te,oa),t(P,sa),t(P,O),t(O,vt),t(vt,na),t(O,la),t(O,yt),t(yt,ra),t(O,fa),t(O,_t),t(_t,Ae),t(Ae,ua),t(P,pa),t(P,G),t(G,wt),t(wt,ha),t(G,da),t(G,Et),t(Et,ca),t(G,ma),t(G,bt),t(bt,je),t(je,ga),t(P,va),t(P,U),t(U,kt),t(kt,ya),t(U,_a),t(U,$t),t($t,wa),t(U,Ea),t(U,Pt),t(Pt,qe),t(qe,ba),f(e,Vt,r),f(e,Y,r),t(Y,ka),t(Y,Se),t(Se,Dt),t(Dt,$a),t(Y,Pa),f(e,Qt,r),f(e,d,r),t(d,Da),t(d,xe),t(xe,Ta),t(d,Aa),t(d,Ie),t(Ie,ja),t(d,qa),t(d,te),t(te,Sa),t(d,xa),t(d,Ne),t(Ne,Ia),t(d,Na),t(d,ie),t(ie,Oa),t(d,Ga),f(e,Wt,r),y(ae,e,r),f(e,Xt,r),f(e,z,r),t(z,Ua),t(z,Oe),t(Oe,Ha),t(z,Ra),f(e,Jt,r),y(oe,e,r),f(e,Zt,r),f(e,F,r),t(F,Ca),t(F,Tt),t(Tt,Ma),t(F,La),f(e,ei,r),y(se,e,r),f(e,ti,r),f(e,B,r),t(B,Ya),t(B,ne),t(ne,za),t(B,Fa),f(e,ii,r),f(e,Ge,r),t(Ge,Ba),f(e,ai,r),y(le,e,r),f(e,oi,r),f(e,c,r),t(c,Ka),t(c,re),t(re,Va),t(c,Qa),t(c,fe),t(fe,Wa),t(c,Xa),t(c,At),t(At,Ja),t(c,Za),t(c,ue),t(ue,jt),t(jt,eo),t(c,to),t(c,pe),t(pe,io),t(c,ao),f(e,si,r),y(he,e,r),f(e,ni,r),f(e,A,r),t(A,oo),t(A,de),t(de,qt),t(qt,so),t(A,no),t(A,St),t(St,lo),t(A,ro),f(e,li,r),y(ce,e,r),f(e,ri,r),f(e,Ue,r),t(Ue,fo),f(e,fi,r),f(e,me,r),t(me,xt),t(xt,uo),t(me,po),f(e,ui,r),y(ge,e,r),f(e,pi,r),f(e,K,r),t(K,ho),t(K,It),t(It,co),t(K,mo),f(e,hi,r),y(ve,e,r),f(e,di,r),f(e,He,r),t(He,go),f(e,ci,r),y(ye,e,r),f(e,mi,r),f(e,m,r),t(m,vo),t(m,Re),t(Re,yo),t(m,_o),t(m,Ce),t(Ce,wo),t(m,Eo),t(m,Nt),t(Nt,bo),t(m,ko),t(m,Me),t(Me,$o),t(m,Po),f(e,gi,r),y(_e,e,r),f(e,vi,r),f(e,V,r),t(V,Do),t(V,Le),t(Le,To),t(V,Ao),f(e,yi,r),f(e,H,r),t(H,we),t(we,jo),t(H,qo),t(H,Ye),t(Ye,So),t(H,xo),f(e,_i,r),f(e,Q,r),t(Q,Io),t(Q,Ee),t(Ee,No),t(Q,Oo),f(e,wi,r),f(e,b,r),t(b,Ot),t(Ot,ze),t(ze,Go),t(b,Uo),t(b,Gt),t(Gt,Fe),t(Fe,Ho),t(b,Ro),t(b,Ut),t(Ut,Be),t(Be,Co),t(b,Mo),t(b,Ht),t(Ht,Ke),t(Ke,Lo),f(e,Ei,r),f(e,be,r),t(be,Yo),t(be,Ve),t(Ve,Rt),t(Rt,zo),f(e,bi,r),f(e,Qe,r),t(Qe,Fo),ki=!0},p:kn,i(e){ki||(_(J.$$.fragment,e),_(Z.$$.fragment,e),_(ee.$$.fragment,e),_(ae.$$.fragment,e),_(oe.$$.fragment,e),_(se.$$.fragment,e),_(le.$$.fragment,e),_(he.$$.fragment,e),_(ce.$$.fragment,e),_(ge.$$.fragment,e),_(ve.$$.fragment,e),_(ye.$$.fragment,e),_(_e.$$.fragment,e),ki=!0)},o(e){w(J.$$.fragment,e),w(Z.$$.fragment,e),w(ee.$$.fragment,e),w(ae.$$.fragment,e),w(oe.$$.fragment,e),w(se.$$.fragment,e),w(le.$$.fragment,e),w(he.$$.fragment,e),w(ce.$$.fragment,e),w(ge.$$.fragment,e),w(ve.$$.fragment,e),w(ye.$$.fragment,e),w(_e.$$.fragment,e),ki=!1},d(e){i(q),e&&i(Mt),e&&i(S),E(J),e&&i(Lt),e&&i(C),e&&i(Yt),e&&i($e),e&&i(zt),E(Z,e),e&&i(Ft),e&&i(x),E(ee),e&&i(Bt),e&&i(T),e&&i(Kt),e&&i(L),e&&i(Vt),e&&i(Y),e&&i(Qt),e&&i(d),e&&i(Wt),E(ae,e),e&&i(Xt),e&&i(z),e&&i(Jt),E(oe,e),e&&i(Zt),e&&i(F),e&&i(ei),E(se,e),e&&i(ti),e&&i(B),e&&i(ii),e&&i(Ge),e&&i(ai),E(le,e),e&&i(oi),e&&i(c),e&&i(si),E(he,e),e&&i(ni),e&&i(A),e&&i(li),E(ce,e),e&&i(ri),e&&i(Ue),e&&i(fi),e&&i(me),e&&i(ui),E(ge,e),e&&i(pi),e&&i(K),e&&i(hi),E(ve,e),e&&i(di),e&&i(He),e&&i(ci),E(ye,e),e&&i(mi),e&&i(m),e&&i(gi),E(_e,e),e&&i(vi),e&&i(V),e&&i(yi),e&&i(H),e&&i(_i),e&&i(Q),e&&i(wi),e&&i(b),e&&i(Ei),e&&i(be),e&&i(bi),e&&i(Qe)}}}const Dn={local:"quicktour",sections:[{local:"diffusionpipeline",title:"DiffusionPipeline"}],title:"Quicktour"};function Tn(Vo){return $n(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Sn extends _n{constructor(q){super();wn(this,q,Tn,Pn,En,{})}}export{Sn as default,Dn as metadata};
