import{S as dn,i as hn,s as pn,e as i,k as u,w as g,t as n,M as cn,c as s,d as a,m as d,a as o,x as v,h as r,b as h,G as t,g as f,y as _,L as mn,q as y,o as w,B as b,v as gn}from"../chunks/vendor-hf-doc-builder.js";import{I as un}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as D}from"../chunks/CodeBlock-hf-doc-builder.js";function vn(Us){let S,Lt,q,L,tt,X,qa,at,xa,Ut,U,Ia,Ee,Na,Oa,Rt,ke,Ga,Ct,J,Yt,x,R,it,Z,Ma,st,Ha,zt,T,La,$e,Ua,Ra,Pe,Ca,Ya,Bt,C,ot,I,nt,rt,za,Ba,lt,ft,Fa,Ka,ut,dt,Va,Qa,P,N,ht,Wa,Xa,pt,Ja,Za,ct,De,ei,ti,O,mt,ai,ii,gt,si,oi,vt,Te,ni,ri,G,_t,li,fi,yt,ui,di,wt,Ae,hi,pi,M,bt,ci,mi,Et,gi,vi,kt,je,_i,Ft,Y,yi,Se,$t,wi,bi,Kt,p,Ei,qe,ki,$i,xe,Pi,Di,ee,Ti,Ai,Ie,ji,Si,te,qi,xi,Vt,ae,Qt,z,Ii,Ne,Ni,Oi,Wt,ie,Xt,B,Gi,Pt,Mi,Hi,Jt,se,Zt,F,Li,oe,Ui,Ri,ea,Oe,Ci,ta,ne,aa,c,Yi,re,zi,Bi,le,Fi,Ki,Dt,Vi,Qi,fe,Tt,Wi,Xi,ue,Ji,Zi,ia,de,sa,A,es,he,At,ts,as,jt,is,ss,oa,pe,na,Ge,os,ra,ce,St,ns,rs,la,me,fa,K,ls,qt,fs,us,ua,ge,da,Me,ds,ha,ve,pa,m,hs,He,ps,cs,Le,ms,gs,xt,vs,_s,Ue,ys,ws,ca,_e,ma,H,ye,bs,Es,Re,ks,$s,ga,V,Ps,we,Ds,Ts,va,E,It,Ce,As,js,Nt,Ye,Ss,qs,Ot,ze,xs,Is,Gt,Be,Ns,_a,be,Os,Fe,Mt,Gs,ya,Ke,Ms,wa;return X=new un({}),J=new D({props:{code:"pip install --upgrade diffusers",highlighted:"pip install --upgrade diffusers"}}),Z=new un({}),ae=new D({props:{code:`from diffusers import DiffusionPipeline

generator = DiffusionPipeline.from_pretrained("CompVis/ldm-text2im-large-256")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> diffusers <span class="hljs-keyword">import</span> DiffusionPipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>generator = DiffusionPipeline.from_pretrained(<span class="hljs-string">&quot;CompVis/ldm-text2im-large-256&quot;</span>)`}}),ie=new D({props:{code:'generator.to("cuda")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>generator.to(<span class="hljs-string">&quot;cuda&quot;</span>)'}}),se=new D({props:{code:'image = generator("An image of a squirrel in Picasso style").images[0]',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>image = generator(<span class="hljs-string">&quot;An image of a squirrel in Picasso style&quot;</span>).images[<span class="hljs-number">0</span>]'}}),ne=new D({props:{code:'image.save("image_of_squirrel_painting.png")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>image.save(<span class="hljs-string">&quot;image_of_squirrel_painting.png&quot;</span>)'}}),de=new D({props:{code:'AUTH_TOKEN = "<please-fill-with-your-token>"',highlighted:'AUTH_TOKEN = <span class="hljs-string">&quot;&lt;please-fill-with-your-token&gt;&quot;</span>'}}),pe=new D({props:{code:`from diffusers import DiffusionPipeline

generator = DiffusionPipeline.from_pretrained("runwayml/stable-diffusion-v1-5", use_auth_token=AUTH_TOKEN)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> diffusers <span class="hljs-keyword">import</span> DiffusionPipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>generator = DiffusionPipeline.from_pretrained(<span class="hljs-string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, use_auth_token=AUTH_TOKEN)`}}),me=new D({props:{code:`git lfs install
git clone https://huggingface.co/runwayml/stable-diffusion-v1-5`,highlighted:`git lfs install
git clone https:<span class="hljs-regexp">//</span>huggingface.co<span class="hljs-regexp">/runwayml/</span>stable-diffusion-v1-<span class="hljs-number">5</span>`}}),ge=new D({props:{code:'generator = DiffusionPipeline.from_pretrained("./stable-diffusion-v1-5")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>generator = DiffusionPipeline.from_pretrained(<span class="hljs-string">&quot;./stable-diffusion-v1-5&quot;</span>)'}}),ve=new D({props:{code:`generator.to("cuda")
image = generator("An image of a squirrel in Picasso style").images[0]
image.save("image_of_squirrel_painting.png")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>generator.to(<span class="hljs-string">&quot;cuda&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>image = generator(<span class="hljs-string">&quot;An image of a squirrel in Picasso style&quot;</span>).images[<span class="hljs-number">0</span>]
<span class="hljs-meta">&gt;&gt;&gt; </span>image.save(<span class="hljs-string">&quot;image_of_squirrel_painting.png&quot;</span>)`}}),_e=new D({props:{code:`from diffusers import LMSDiscreteScheduler

scheduler = LMSDiscreteScheduler(beta_start=0.00085, beta_end=0.012, beta_schedule="scaled_linear")

generator = StableDiffusionPipeline.from_pretrained(
    "runwayml/stable-diffusion-v1-5", scheduler=scheduler, use_auth_token=AUTH_TOKEN
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> diffusers <span class="hljs-keyword">import</span> LMSDiscreteScheduler

<span class="hljs-meta">&gt;&gt;&gt; </span>scheduler = LMSDiscreteScheduler(beta_start=<span class="hljs-number">0.00085</span>, beta_end=<span class="hljs-number">0.012</span>, beta_schedule=<span class="hljs-string">&quot;scaled_linear&quot;</span>)

<span class="hljs-meta">&gt;&gt;&gt; </span>generator = StableDiffusionPipeline.from_pretrained(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;runwayml/stable-diffusion-v1-5&quot;</span>, scheduler=scheduler, use_auth_token=AUTH_TOKEN
<span class="hljs-meta">... </span>)`}}),{c(){S=i("meta"),Lt=u(),q=i("h1"),L=i("a"),tt=i("span"),g(X.$$.fragment),qa=u(),at=i("span"),xa=n("Quicktour"),Ut=u(),U=i("p"),Ia=n(`Get up and running with \u{1F9E8} Diffusers quickly!
Whether you\u2019re a developer or an everyday user, this quick tour will help you get started and show you how to use `),Ee=i("a"),Na=n("DiffusionPipeline"),Oa=n(" for inference."),Rt=u(),ke=i("p"),Ga=n("Before you begin, make sure you have all the necessary libraries installed:"),Ct=u(),g(J.$$.fragment),Yt=u(),x=i("h2"),R=i("a"),it=i("span"),g(Z.$$.fragment),Ma=u(),st=i("span"),Ha=n("DiffusionPipeline"),zt=u(),T=i("p"),La=n("The "),$e=i("a"),Ua=n("DiffusionPipeline"),Ra=n(" is the easiest way to use a pre-trained diffusion system for inference. You can use the "),Pe=i("a"),Ca=n("DiffusionPipeline"),Ya=n(" out-of-the-box for many tasks across different modalities. Take a look at the table below for some supported tasks:"),Bt=u(),C=i("table"),ot=i("thead"),I=i("tr"),nt=i("th"),rt=i("strong"),za=n("Task"),Ba=u(),lt=i("th"),ft=i("strong"),Fa=n("Description"),Ka=u(),ut=i("th"),dt=i("strong"),Va=n("Pipeline"),Qa=u(),P=i("tbody"),N=i("tr"),ht=i("td"),Wa=n("Unconditional Image Generation"),Xa=u(),pt=i("td"),Ja=n("generate an image from gaussian noise"),Za=u(),ct=i("td"),De=i("a"),ei=n("unconditional_image_generation"),ti=u(),O=i("tr"),mt=i("td"),ai=n("Text-Guided Image Generation"),ii=u(),gt=i("td"),si=n("generate an image given a text prompt"),oi=u(),vt=i("td"),Te=i("a"),ni=n("conditional_image_generation"),ri=u(),G=i("tr"),_t=i("td"),li=n("Text-Guided Image-to-Image Translation"),fi=u(),yt=i("td"),ui=n("generate an image given an original image and a text prompt"),di=u(),wt=i("td"),Ae=i("a"),hi=n("img2img"),pi=u(),M=i("tr"),bt=i("td"),ci=n("Text-Guided Image-Inpainting"),mi=u(),Et=i("td"),gi=n("fill the masked part of an image given the image, the mask and a text prompt"),vi=u(),kt=i("td"),je=i("a"),_i=n("inpaint"),Ft=u(),Y=i("p"),yi=n("For more in-detail information on how diffusion pipelines function for the different tasks, please have a look at the "),Se=i("a"),$t=i("strong"),wi=n("Using Diffusers"),bi=n(" section."),Kt=u(),p=i("p"),Ei=n("As an example, start by creating an instance of "),qe=i("a"),ki=n("DiffusionPipeline"),$i=n(` and specify which pipeline checkpoint you would like to download.
You can use the `),xe=i("a"),Pi=n("DiffusionPipeline"),Di=n(" for any "),ee=i("a"),Ti=n("Diffusers\u2019 checkpoint"),Ai=n(`.
In this guide though, you\u2019ll use `),Ie=i("a"),ji=n("DiffusionPipeline"),Si=n(" for text-to-image generation with "),te=i("a"),qi=n("Latent Diffusion"),xi=n(":"),Vt=u(),g(ae.$$.fragment),Qt=u(),z=i("p"),Ii=n("The "),Ne=i("a"),Ni=n("DiffusionPipeline"),Oi=n(` downloads and caches all modeling, tokenization, and scheduling components.
Because the model consists of roughly 1.4 billion parameters, we strongly recommend running it on GPU.
You can move the generator object to GPU, just like you would in PyTorch.`),Wt=u(),g(ie.$$.fragment),Xt=u(),B=i("p"),Gi=n("Now you can use the "),Pt=i("code"),Mi=n("generator"),Hi=n(" on your text prompt:"),Jt=u(),g(se.$$.fragment),Zt=u(),F=i("p"),Li=n("The output is by default wrapped into a "),oe=i("a"),Ui=n("PIL Image object"),Ri=n("."),ea=u(),Oe=i("p"),Ci=n("You can save the image by simply calling:"),ta=u(),g(ne.$$.fragment),aa=u(),c=i("p"),Yi=n("More advanced models, like "),re=i("a"),zi=n("Stable Diffusion"),Bi=n(" require you to accept a "),le=i("a"),Fi=n("license"),Ki=n(` before running the model.
This is due to the improved image generation capabilities of the model and the potentially harmful content that could be produced with it.
Please, head over to your stable diffusion model of choice, `),Dt=i("em"),Vi=n("e.g."),Qi=u(),fe=i("a"),Tt=i("code"),Wi=n("runwayml/stable-diffusion-v1-5"),Xi=n(`, read the license carefully and tick the checkbox if you agree.
You have to be a registered user in \u{1F917} Hugging Face Hub, and you\u2019ll also need to use an access token for the code to work. For more information on access tokens, please refer to `),ue=i("a"),Ji=n("this section of the documentation"),Zi=n(`.
Having \u201Cclick-accepted\u201D the license, you can save your token:`),ia=u(),g(de.$$.fragment),sa=u(),A=i("p"),es=n("You can then load "),he=i("a"),At=i("code"),ts=n("runwayml/stable-diffusion-v1-5"),as=n(`
just like we did before only that now you need to pass your `),jt=i("code"),is=n("AUTH_TOKEN"),ss=n(":"),oa=u(),g(pe.$$.fragment),na=u(),Ge=i("p"),os=n(`If you do not pass your authentication token you will see that the diffusion system will not be correctly
downloaded. Forcing the user to pass an authentication token ensures that it can be verified that the
user has indeed read and accepted the license, which also means that an internet connection is required.`),ra=u(),ce=i("p"),St=i("strong"),ns=n("Note"),rs=n(`: If you do not want to be forced to pass an authentication token, you can also simply download
the weights locally via:`),la=u(),g(me.$$.fragment),fa=u(),K=i("p"),ls=n(`and then load locally saved weights into the pipeline. This way, you do not need to pass an authentication
token. Assuming that `),qt=i("code"),fs=n('"./stable-diffusion-v1-5"'),us=n(` is the local path to the cloned stable-diffusion-v1-5 repo,
you can also load the pipeline as follows:`),ua=u(),g(ge.$$.fragment),da=u(),Me=i("p"),ds=n("Running the pipeline is then identical to the code above as it\u2019s the same model architecture."),ha=u(),g(ve.$$.fragment),pa=u(),m=i("p"),hs=n("Diffusion systems can be used with multiple different "),He=i("a"),ps=n("schedulers"),cs=n(` each with their
pros and cons. By default, Stable Diffusion runs with `),Le=i("a"),ms=n("PNDMScheduler"),gs=n(`, but it\u2019s very simple to
use a different scheduler. `),xt=i("em"),vs=n("E.g."),_s=n(" if you would instead like to use the "),Ue=i("a"),ys=n("LMSDiscreteScheduler"),ws=n(` scheduler,
you could use it as follows:`),ca=u(),g(_e.$$.fragment),ma=u(),H=i("p"),ye=i("a"),bs=n("Stability AI\u2019s"),Es=n(` Stable Diffusion model is an impressive image generation model
and can do much more than just generating images from text. We have dedicated a whole documentation page,
just for Stable Diffusion `),Re=i("a"),ks=n("here"),$s=n("."),ga=u(),V=i("p"),Ps=n("If you want to know how to optimize Stable Diffusion to run on less memory, higher inference speeds, on specific hardware, such as Mac, or with "),we=i("a"),Ds=n("ONNX Runtime"),Ts=n(`, please have a look at our
optimization pages:`),va=u(),E=i("ul"),It=i("li"),Ce=i("a"),As=n("Optimized PyTorch on GPU"),js=u(),Nt=i("li"),Ye=i("a"),Ss=n("Mac OS with PyTorch"),qs=u(),Ot=i("li"),ze=i("a"),xs=n("ONNX"),Is=u(),Gt=i("li"),Be=i("a"),Ns=n("OpenVINO"),_a=u(),be=i("p"),Os=n("If you want to fine-tune or train your diffusion model, please have a look at the "),Fe=i("a"),Mt=i("strong"),Gs=n("training section"),ya=u(),Ke=i("p"),Ms=n("Finally, please be considerate when distributing generated images publicly \u{1F917}."),this.h()},l(e){const l=cn('[data-svelte="svelte-1phssyn"]',document.head);S=s(l,"META",{name:!0,content:!0}),l.forEach(a),Lt=d(e),q=s(e,"H1",{class:!0});var ba=o(q);L=s(ba,"A",{id:!0,class:!0,href:!0});var Rs=o(L);tt=s(Rs,"SPAN",{});var Cs=o(tt);v(X.$$.fragment,Cs),Cs.forEach(a),Rs.forEach(a),qa=d(ba),at=s(ba,"SPAN",{});var Ys=o(at);xa=r(Ys,"Quicktour"),Ys.forEach(a),ba.forEach(a),Ut=d(e),U=s(e,"P",{});var Ea=o(U);Ia=r(Ea,`Get up and running with \u{1F9E8} Diffusers quickly!
Whether you\u2019re a developer or an everyday user, this quick tour will help you get started and show you how to use `),Ee=s(Ea,"A",{href:!0});var zs=o(Ee);Na=r(zs,"DiffusionPipeline"),zs.forEach(a),Oa=r(Ea," for inference."),Ea.forEach(a),Rt=d(e),ke=s(e,"P",{});var Bs=o(ke);Ga=r(Bs,"Before you begin, make sure you have all the necessary libraries installed:"),Bs.forEach(a),Ct=d(e),v(J.$$.fragment,e),Yt=d(e),x=s(e,"H2",{class:!0});var ka=o(x);R=s(ka,"A",{id:!0,class:!0,href:!0});var Fs=o(R);it=s(Fs,"SPAN",{});var Ks=o(it);v(Z.$$.fragment,Ks),Ks.forEach(a),Fs.forEach(a),Ma=d(ka),st=s(ka,"SPAN",{});var Vs=o(st);Ha=r(Vs,"DiffusionPipeline"),Vs.forEach(a),ka.forEach(a),zt=d(e),T=s(e,"P",{});var Ve=o(T);La=r(Ve,"The "),$e=s(Ve,"A",{href:!0});var Qs=o($e);Ua=r(Qs,"DiffusionPipeline"),Qs.forEach(a),Ra=r(Ve," is the easiest way to use a pre-trained diffusion system for inference. You can use the "),Pe=s(Ve,"A",{href:!0});var Ws=o(Pe);Ca=r(Ws,"DiffusionPipeline"),Ws.forEach(a),Ya=r(Ve," out-of-the-box for many tasks across different modalities. Take a look at the table below for some supported tasks:"),Ve.forEach(a),Bt=d(e),C=s(e,"TABLE",{});var $a=o(C);ot=s($a,"THEAD",{});var Xs=o(ot);I=s(Xs,"TR",{});var Qe=o(I);nt=s(Qe,"TH",{});var Js=o(nt);rt=s(Js,"STRONG",{});var Zs=o(rt);za=r(Zs,"Task"),Zs.forEach(a),Js.forEach(a),Ba=d(Qe),lt=s(Qe,"TH",{});var eo=o(lt);ft=s(eo,"STRONG",{});var to=o(ft);Fa=r(to,"Description"),to.forEach(a),eo.forEach(a),Ka=d(Qe),ut=s(Qe,"TH",{});var ao=o(ut);dt=s(ao,"STRONG",{});var io=o(dt);Va=r(io,"Pipeline"),io.forEach(a),ao.forEach(a),Qe.forEach(a),Xs.forEach(a),Qa=d($a),P=s($a,"TBODY",{});var Q=o(P);N=s(Q,"TR",{});var We=o(N);ht=s(We,"TD",{});var so=o(ht);Wa=r(so,"Unconditional Image Generation"),so.forEach(a),Xa=d(We),pt=s(We,"TD",{});var oo=o(pt);Ja=r(oo,"generate an image from gaussian noise"),oo.forEach(a),Za=d(We),ct=s(We,"TD",{});var no=o(ct);De=s(no,"A",{href:!0});var ro=o(De);ei=r(ro,"unconditional_image_generation"),ro.forEach(a),no.forEach(a),We.forEach(a),ti=d(Q),O=s(Q,"TR",{});var Xe=o(O);mt=s(Xe,"TD",{});var lo=o(mt);ai=r(lo,"Text-Guided Image Generation"),lo.forEach(a),ii=d(Xe),gt=s(Xe,"TD",{});var fo=o(gt);si=r(fo,"generate an image given a text prompt"),fo.forEach(a),oi=d(Xe),vt=s(Xe,"TD",{});var uo=o(vt);Te=s(uo,"A",{href:!0});var ho=o(Te);ni=r(ho,"conditional_image_generation"),ho.forEach(a),uo.forEach(a),Xe.forEach(a),ri=d(Q),G=s(Q,"TR",{});var Je=o(G);_t=s(Je,"TD",{});var po=o(_t);li=r(po,"Text-Guided Image-to-Image Translation"),po.forEach(a),fi=d(Je),yt=s(Je,"TD",{});var co=o(yt);ui=r(co,"generate an image given an original image and a text prompt"),co.forEach(a),di=d(Je),wt=s(Je,"TD",{});var mo=o(wt);Ae=s(mo,"A",{href:!0});var go=o(Ae);hi=r(go,"img2img"),go.forEach(a),mo.forEach(a),Je.forEach(a),pi=d(Q),M=s(Q,"TR",{});var Ze=o(M);bt=s(Ze,"TD",{});var vo=o(bt);ci=r(vo,"Text-Guided Image-Inpainting"),vo.forEach(a),mi=d(Ze),Et=s(Ze,"TD",{});var _o=o(Et);gi=r(_o,"fill the masked part of an image given the image, the mask and a text prompt"),_o.forEach(a),vi=d(Ze),kt=s(Ze,"TD",{});var yo=o(kt);je=s(yo,"A",{href:!0});var wo=o(je);_i=r(wo,"inpaint"),wo.forEach(a),yo.forEach(a),Ze.forEach(a),Q.forEach(a),$a.forEach(a),Ft=d(e),Y=s(e,"P",{});var Pa=o(Y);yi=r(Pa,"For more in-detail information on how diffusion pipelines function for the different tasks, please have a look at the "),Se=s(Pa,"A",{href:!0});var bo=o(Se);$t=s(bo,"STRONG",{});var Eo=o($t);wi=r(Eo,"Using Diffusers"),Eo.forEach(a),bo.forEach(a),bi=r(Pa," section."),Pa.forEach(a),Kt=d(e),p=s(e,"P",{});var k=o(p);Ei=r(k,"As an example, start by creating an instance of "),qe=s(k,"A",{href:!0});var ko=o(qe);ki=r(ko,"DiffusionPipeline"),ko.forEach(a),$i=r(k,` and specify which pipeline checkpoint you would like to download.
You can use the `),xe=s(k,"A",{href:!0});var $o=o(xe);Pi=r($o,"DiffusionPipeline"),$o.forEach(a),Di=r(k," for any "),ee=s(k,"A",{href:!0,rel:!0});var Po=o(ee);Ti=r(Po,"Diffusers\u2019 checkpoint"),Po.forEach(a),Ai=r(k,`.
In this guide though, you\u2019ll use `),Ie=s(k,"A",{href:!0});var Do=o(Ie);ji=r(Do,"DiffusionPipeline"),Do.forEach(a),Si=r(k," for text-to-image generation with "),te=s(k,"A",{href:!0,rel:!0});var To=o(te);qi=r(To,"Latent Diffusion"),To.forEach(a),xi=r(k,":"),k.forEach(a),Vt=d(e),v(ae.$$.fragment,e),Qt=d(e),z=s(e,"P",{});var Da=o(z);Ii=r(Da,"The "),Ne=s(Da,"A",{href:!0});var Ao=o(Ne);Ni=r(Ao,"DiffusionPipeline"),Ao.forEach(a),Oi=r(Da,` downloads and caches all modeling, tokenization, and scheduling components.
Because the model consists of roughly 1.4 billion parameters, we strongly recommend running it on GPU.
You can move the generator object to GPU, just like you would in PyTorch.`),Da.forEach(a),Wt=d(e),v(ie.$$.fragment,e),Xt=d(e),B=s(e,"P",{});var Ta=o(B);Gi=r(Ta,"Now you can use the "),Pt=s(Ta,"CODE",{});var jo=o(Pt);Mi=r(jo,"generator"),jo.forEach(a),Hi=r(Ta," on your text prompt:"),Ta.forEach(a),Jt=d(e),v(se.$$.fragment,e),Zt=d(e),F=s(e,"P",{});var Aa=o(F);Li=r(Aa,"The output is by default wrapped into a "),oe=s(Aa,"A",{href:!0,rel:!0});var So=o(oe);Ui=r(So,"PIL Image object"),So.forEach(a),Ri=r(Aa,"."),Aa.forEach(a),ea=d(e),Oe=s(e,"P",{});var qo=o(Oe);Ci=r(qo,"You can save the image by simply calling:"),qo.forEach(a),ta=d(e),v(ne.$$.fragment,e),aa=d(e),c=s(e,"P",{});var $=o(c);Yi=r($,"More advanced models, like "),re=s($,"A",{href:!0,rel:!0});var xo=o(re);zi=r(xo,"Stable Diffusion"),xo.forEach(a),Bi=r($," require you to accept a "),le=s($,"A",{href:!0,rel:!0});var Io=o(le);Fi=r(Io,"license"),Io.forEach(a),Ki=r($,` before running the model.
This is due to the improved image generation capabilities of the model and the potentially harmful content that could be produced with it.
Please, head over to your stable diffusion model of choice, `),Dt=s($,"EM",{});var No=o(Dt);Vi=r(No,"e.g."),No.forEach(a),Qi=d($),fe=s($,"A",{href:!0,rel:!0});var Oo=o(fe);Tt=s(Oo,"CODE",{});var Go=o(Tt);Wi=r(Go,"runwayml/stable-diffusion-v1-5"),Go.forEach(a),Oo.forEach(a),Xi=r($,`, read the license carefully and tick the checkbox if you agree.
You have to be a registered user in \u{1F917} Hugging Face Hub, and you\u2019ll also need to use an access token for the code to work. For more information on access tokens, please refer to `),ue=s($,"A",{href:!0,rel:!0});var Mo=o(ue);Ji=r(Mo,"this section of the documentation"),Mo.forEach(a),Zi=r($,`.
Having \u201Cclick-accepted\u201D the license, you can save your token:`),$.forEach(a),ia=d(e),v(de.$$.fragment,e),sa=d(e),A=s(e,"P",{});var et=o(A);es=r(et,"You can then load "),he=s(et,"A",{href:!0,rel:!0});var Ho=o(he);At=s(Ho,"CODE",{});var Lo=o(At);ts=r(Lo,"runwayml/stable-diffusion-v1-5"),Lo.forEach(a),Ho.forEach(a),as=r(et,`
just like we did before only that now you need to pass your `),jt=s(et,"CODE",{});var Uo=o(jt);is=r(Uo,"AUTH_TOKEN"),Uo.forEach(a),ss=r(et,":"),et.forEach(a),oa=d(e),v(pe.$$.fragment,e),na=d(e),Ge=s(e,"P",{});var Ro=o(Ge);os=r(Ro,`If you do not pass your authentication token you will see that the diffusion system will not be correctly
downloaded. Forcing the user to pass an authentication token ensures that it can be verified that the
user has indeed read and accepted the license, which also means that an internet connection is required.`),Ro.forEach(a),ra=d(e),ce=s(e,"P",{});var Hs=o(ce);St=s(Hs,"STRONG",{});var Co=o(St);ns=r(Co,"Note"),Co.forEach(a),rs=r(Hs,`: If you do not want to be forced to pass an authentication token, you can also simply download
the weights locally via:`),Hs.forEach(a),la=d(e),v(me.$$.fragment,e),fa=d(e),K=s(e,"P",{});var ja=o(K);ls=r(ja,`and then load locally saved weights into the pipeline. This way, you do not need to pass an authentication
token. Assuming that `),qt=s(ja,"CODE",{});var Yo=o(qt);fs=r(Yo,'"./stable-diffusion-v1-5"'),Yo.forEach(a),us=r(ja,` is the local path to the cloned stable-diffusion-v1-5 repo,
you can also load the pipeline as follows:`),ja.forEach(a),ua=d(e),v(ge.$$.fragment,e),da=d(e),Me=s(e,"P",{});var zo=o(Me);ds=r(zo,"Running the pipeline is then identical to the code above as it\u2019s the same model architecture."),zo.forEach(a),ha=d(e),v(ve.$$.fragment,e),pa=d(e),m=s(e,"P",{});var j=o(m);hs=r(j,"Diffusion systems can be used with multiple different "),He=s(j,"A",{href:!0});var Bo=o(He);ps=r(Bo,"schedulers"),Bo.forEach(a),cs=r(j,` each with their
pros and cons. By default, Stable Diffusion runs with `),Le=s(j,"A",{href:!0});var Fo=o(Le);ms=r(Fo,"PNDMScheduler"),Fo.forEach(a),gs=r(j,`, but it\u2019s very simple to
use a different scheduler. `),xt=s(j,"EM",{});var Ko=o(xt);vs=r(Ko,"E.g."),Ko.forEach(a),_s=r(j," if you would instead like to use the "),Ue=s(j,"A",{href:!0});var Vo=o(Ue);ys=r(Vo,"LMSDiscreteScheduler"),Vo.forEach(a),ws=r(j,` scheduler,
you could use it as follows:`),j.forEach(a),ca=d(e),v(_e.$$.fragment,e),ma=d(e),H=s(e,"P",{});var Ht=o(H);ye=s(Ht,"A",{href:!0,rel:!0});var Qo=o(ye);bs=r(Qo,"Stability AI\u2019s"),Qo.forEach(a),Es=r(Ht,` Stable Diffusion model is an impressive image generation model
and can do much more than just generating images from text. We have dedicated a whole documentation page,
just for Stable Diffusion `),Re=s(Ht,"A",{href:!0});var Wo=o(Re);ks=r(Wo,"here"),Wo.forEach(a),$s=r(Ht,"."),Ht.forEach(a),ga=d(e),V=s(e,"P",{});var Sa=o(V);Ps=r(Sa,"If you want to know how to optimize Stable Diffusion to run on less memory, higher inference speeds, on specific hardware, such as Mac, or with "),we=s(Sa,"A",{href:!0,rel:!0});var Xo=o(we);Ds=r(Xo,"ONNX Runtime"),Xo.forEach(a),Ts=r(Sa,`, please have a look at our
optimization pages:`),Sa.forEach(a),va=d(e),E=s(e,"UL",{});var W=o(E);It=s(W,"LI",{});var Jo=o(It);Ce=s(Jo,"A",{href:!0});var Zo=o(Ce);As=r(Zo,"Optimized PyTorch on GPU"),Zo.forEach(a),Jo.forEach(a),js=d(W),Nt=s(W,"LI",{});var en=o(Nt);Ye=s(en,"A",{href:!0});var tn=o(Ye);Ss=r(tn,"Mac OS with PyTorch"),tn.forEach(a),en.forEach(a),qs=d(W),Ot=s(W,"LI",{});var an=o(Ot);ze=s(an,"A",{href:!0});var sn=o(ze);xs=r(sn,"ONNX"),sn.forEach(a),an.forEach(a),Is=d(W),Gt=s(W,"LI",{});var on=o(Gt);Be=s(on,"A",{href:!0});var nn=o(Be);Ns=r(nn,"OpenVINO"),nn.forEach(a),on.forEach(a),W.forEach(a),_a=d(e),be=s(e,"P",{});var Ls=o(be);Os=r(Ls,"If you want to fine-tune or train your diffusion model, please have a look at the "),Fe=s(Ls,"A",{href:!0});var rn=o(Fe);Mt=s(rn,"STRONG",{});var ln=o(Mt);Gs=r(ln,"training section"),ln.forEach(a),rn.forEach(a),Ls.forEach(a),ya=d(e),Ke=s(e,"P",{});var fn=o(Ke);Ms=r(fn,"Finally, please be considerate when distributing generated images publicly \u{1F917}."),fn.forEach(a),this.h()},h(){h(S,"name","hf:doc:metadata"),h(S,"content",JSON.stringify(_n)),h(L,"id","quicktour"),h(L,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(L,"href","#quicktour"),h(q,"class","relative group"),h(Ee,"href","/docs/diffusers/main/en/using-diffusers/loading#diffusers.DiffusionPipeline"),h(R,"id","diffusionpipeline"),h(R,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(R,"href","#diffusionpipeline"),h(x,"class","relative group"),h($e,"href","/docs/diffusers/main/en/using-diffusers/loading#diffusers.DiffusionPipeline"),h(Pe,"href","/docs/diffusers/main/en/using-diffusers/loading#diffusers.DiffusionPipeline"),h(De,"href","./using-diffusers/unconditional_image_generation%60"),h(Te,"href","./using-diffusers/conditional_image_generation"),h(Ae,"href","./using-diffusers/img2img"),h(je,"href","./using-diffusers/inpaint"),h(Se,"href","./using-diffusers/overview"),h(qe,"href","/docs/diffusers/main/en/using-diffusers/loading#diffusers.DiffusionPipeline"),h(xe,"href","/docs/diffusers/main/en/using-diffusers/loading#diffusers.DiffusionPipeline"),h(ee,"href","https://huggingface.co/models?library=diffusers&sort=downloads"),h(ee,"rel","nofollow"),h(Ie,"href","/docs/diffusers/main/en/using-diffusers/loading#diffusers.DiffusionPipeline"),h(te,"href","https://huggingface.co/CompVis/ldm-text2im-large-256"),h(te,"rel","nofollow"),h(Ne,"href","/docs/diffusers/main/en/using-diffusers/loading#diffusers.DiffusionPipeline"),h(oe,"href","https://pillow.readthedocs.io/en/stable/reference/Image.html?highlight=image#the-image-class"),h(oe,"rel","nofollow"),h(re,"href","https://huggingface.co/CompVis/stable-diffusion"),h(re,"rel","nofollow"),h(le,"href","https://huggingface.co/spaces/CompVis/stable-diffusion-license"),h(le,"rel","nofollow"),h(fe,"href","https://huggingface.co/runwayml/stable-diffusion-v1-5"),h(fe,"rel","nofollow"),h(ue,"href","https://huggingface.co/docs/hub/security-tokens"),h(ue,"rel","nofollow"),h(he,"href","https://huggingface.co/runwayml/stable-diffusion-v1-5"),h(he,"rel","nofollow"),h(He,"href","./api/schedulers"),h(Le,"href","/docs/diffusers/main/en/api/schedulers#diffusers.PNDMScheduler"),h(Ue,"href","/docs/diffusers/main/en/api/schedulers#diffusers.LMSDiscreteScheduler"),h(ye,"href","https://stability.ai/"),h(ye,"rel","nofollow"),h(Re,"href","./conceptual/stable_diffusion"),h(we,"href","https://onnxruntime.ai/"),h(we,"rel","nofollow"),h(Ce,"href","./optimization/fp16"),h(Ye,"href","./optimization/mps"),h(ze,"href","./optimization/onnx"),h(Be,"href","./optimization/open_vino"),h(Fe,"href","./training/overview")},m(e,l){t(document.head,S),f(e,Lt,l),f(e,q,l),t(q,L),t(L,tt),_(X,tt,null),t(q,qa),t(q,at),t(at,xa),f(e,Ut,l),f(e,U,l),t(U,Ia),t(U,Ee),t(Ee,Na),t(U,Oa),f(e,Rt,l),f(e,ke,l),t(ke,Ga),f(e,Ct,l),_(J,e,l),f(e,Yt,l),f(e,x,l),t(x,R),t(R,it),_(Z,it,null),t(x,Ma),t(x,st),t(st,Ha),f(e,zt,l),f(e,T,l),t(T,La),t(T,$e),t($e,Ua),t(T,Ra),t(T,Pe),t(Pe,Ca),t(T,Ya),f(e,Bt,l),f(e,C,l),t(C,ot),t(ot,I),t(I,nt),t(nt,rt),t(rt,za),t(I,Ba),t(I,lt),t(lt,ft),t(ft,Fa),t(I,Ka),t(I,ut),t(ut,dt),t(dt,Va),t(C,Qa),t(C,P),t(P,N),t(N,ht),t(ht,Wa),t(N,Xa),t(N,pt),t(pt,Ja),t(N,Za),t(N,ct),t(ct,De),t(De,ei),t(P,ti),t(P,O),t(O,mt),t(mt,ai),t(O,ii),t(O,gt),t(gt,si),t(O,oi),t(O,vt),t(vt,Te),t(Te,ni),t(P,ri),t(P,G),t(G,_t),t(_t,li),t(G,fi),t(G,yt),t(yt,ui),t(G,di),t(G,wt),t(wt,Ae),t(Ae,hi),t(P,pi),t(P,M),t(M,bt),t(bt,ci),t(M,mi),t(M,Et),t(Et,gi),t(M,vi),t(M,kt),t(kt,je),t(je,_i),f(e,Ft,l),f(e,Y,l),t(Y,yi),t(Y,Se),t(Se,$t),t($t,wi),t(Y,bi),f(e,Kt,l),f(e,p,l),t(p,Ei),t(p,qe),t(qe,ki),t(p,$i),t(p,xe),t(xe,Pi),t(p,Di),t(p,ee),t(ee,Ti),t(p,Ai),t(p,Ie),t(Ie,ji),t(p,Si),t(p,te),t(te,qi),t(p,xi),f(e,Vt,l),_(ae,e,l),f(e,Qt,l),f(e,z,l),t(z,Ii),t(z,Ne),t(Ne,Ni),t(z,Oi),f(e,Wt,l),_(ie,e,l),f(e,Xt,l),f(e,B,l),t(B,Gi),t(B,Pt),t(Pt,Mi),t(B,Hi),f(e,Jt,l),_(se,e,l),f(e,Zt,l),f(e,F,l),t(F,Li),t(F,oe),t(oe,Ui),t(F,Ri),f(e,ea,l),f(e,Oe,l),t(Oe,Ci),f(e,ta,l),_(ne,e,l),f(e,aa,l),f(e,c,l),t(c,Yi),t(c,re),t(re,zi),t(c,Bi),t(c,le),t(le,Fi),t(c,Ki),t(c,Dt),t(Dt,Vi),t(c,Qi),t(c,fe),t(fe,Tt),t(Tt,Wi),t(c,Xi),t(c,ue),t(ue,Ji),t(c,Zi),f(e,ia,l),_(de,e,l),f(e,sa,l),f(e,A,l),t(A,es),t(A,he),t(he,At),t(At,ts),t(A,as),t(A,jt),t(jt,is),t(A,ss),f(e,oa,l),_(pe,e,l),f(e,na,l),f(e,Ge,l),t(Ge,os),f(e,ra,l),f(e,ce,l),t(ce,St),t(St,ns),t(ce,rs),f(e,la,l),_(me,e,l),f(e,fa,l),f(e,K,l),t(K,ls),t(K,qt),t(qt,fs),t(K,us),f(e,ua,l),_(ge,e,l),f(e,da,l),f(e,Me,l),t(Me,ds),f(e,ha,l),_(ve,e,l),f(e,pa,l),f(e,m,l),t(m,hs),t(m,He),t(He,ps),t(m,cs),t(m,Le),t(Le,ms),t(m,gs),t(m,xt),t(xt,vs),t(m,_s),t(m,Ue),t(Ue,ys),t(m,ws),f(e,ca,l),_(_e,e,l),f(e,ma,l),f(e,H,l),t(H,ye),t(ye,bs),t(H,Es),t(H,Re),t(Re,ks),t(H,$s),f(e,ga,l),f(e,V,l),t(V,Ps),t(V,we),t(we,Ds),t(V,Ts),f(e,va,l),f(e,E,l),t(E,It),t(It,Ce),t(Ce,As),t(E,js),t(E,Nt),t(Nt,Ye),t(Ye,Ss),t(E,qs),t(E,Ot),t(Ot,ze),t(ze,xs),t(E,Is),t(E,Gt),t(Gt,Be),t(Be,Ns),f(e,_a,l),f(e,be,l),t(be,Os),t(be,Fe),t(Fe,Mt),t(Mt,Gs),f(e,ya,l),f(e,Ke,l),t(Ke,Ms),wa=!0},p:mn,i(e){wa||(y(X.$$.fragment,e),y(J.$$.fragment,e),y(Z.$$.fragment,e),y(ae.$$.fragment,e),y(ie.$$.fragment,e),y(se.$$.fragment,e),y(ne.$$.fragment,e),y(de.$$.fragment,e),y(pe.$$.fragment,e),y(me.$$.fragment,e),y(ge.$$.fragment,e),y(ve.$$.fragment,e),y(_e.$$.fragment,e),wa=!0)},o(e){w(X.$$.fragment,e),w(J.$$.fragment,e),w(Z.$$.fragment,e),w(ae.$$.fragment,e),w(ie.$$.fragment,e),w(se.$$.fragment,e),w(ne.$$.fragment,e),w(de.$$.fragment,e),w(pe.$$.fragment,e),w(me.$$.fragment,e),w(ge.$$.fragment,e),w(ve.$$.fragment,e),w(_e.$$.fragment,e),wa=!1},d(e){a(S),e&&a(Lt),e&&a(q),b(X),e&&a(Ut),e&&a(U),e&&a(Rt),e&&a(ke),e&&a(Ct),b(J,e),e&&a(Yt),e&&a(x),b(Z),e&&a(zt),e&&a(T),e&&a(Bt),e&&a(C),e&&a(Ft),e&&a(Y),e&&a(Kt),e&&a(p),e&&a(Vt),b(ae,e),e&&a(Qt),e&&a(z),e&&a(Wt),b(ie,e),e&&a(Xt),e&&a(B),e&&a(Jt),b(se,e),e&&a(Zt),e&&a(F),e&&a(ea),e&&a(Oe),e&&a(ta),b(ne,e),e&&a(aa),e&&a(c),e&&a(ia),b(de,e),e&&a(sa),e&&a(A),e&&a(oa),b(pe,e),e&&a(na),e&&a(Ge),e&&a(ra),e&&a(ce),e&&a(la),b(me,e),e&&a(fa),e&&a(K),e&&a(ua),b(ge,e),e&&a(da),e&&a(Me),e&&a(ha),b(ve,e),e&&a(pa),e&&a(m),e&&a(ca),b(_e,e),e&&a(ma),e&&a(H),e&&a(ga),e&&a(V),e&&a(va),e&&a(E),e&&a(_a),e&&a(be),e&&a(ya),e&&a(Ke)}}}const _n={local:"quicktour",sections:[{local:"diffusionpipeline",title:"DiffusionPipeline"}],title:"Quicktour"};function yn(Us){return gn(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class kn extends dn{constructor(S){super();hn(this,S,yn,vn,pn,{})}}export{kn as default,_n as metadata};
