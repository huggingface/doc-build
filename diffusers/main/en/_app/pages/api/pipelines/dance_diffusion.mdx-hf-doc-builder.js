import{S as zt,i as Bt,s as Rt,e as i,k as c,w as Z,t as l,M as Ft,c as r,d as n,m as d,a as o,x as J,h as f,b as a,G as t,g as h,y as Y,L as Vt,q as j,o as K,B as Q,v as Wt}from"../../../chunks/vendor-hf-doc-builder.js";import{D as qt}from"../../../chunks/Docstring-hf-doc-builder.js";import{I as He}from"../../../chunks/IconCopyLink-hf-doc-builder.js";function Zt(ht){let p,pe,m,$,X,x,Me,ee,Oe,me,v,w,te,k,Ce,ne,Ge,ve,N,S,Le,Ue,_e,E,Ie,H,qe,ze,ge,y,Be,M,Re,Fe,be,_,P,ie,O,Ve,re,We,De,A,oe,g,ae,Ze,Je,se,Ye,je,q,Ke,Qe,le,b,fe,C,Xe,et,ce,de,tt,nt,z,it,$e,D,T,he,G,rt,ue,ot,we,u,L,at,U,st,B,lt,ft,ct,R,I,Ee;return x=new He({}),k=new He({}),O=new He({}),G=new He({}),L=new qt({props:{name:"class diffusers.DanceDiffusionPipeline",anchor:"diffusers.DanceDiffusionPipeline",parameters:[{name:"unet",val:""},{name:"scheduler",val:""}],parametersDescription:[{anchor:"diffusers.DanceDiffusionPipeline.unet",description:'<strong>unet</strong> (<a href="/docs/diffusers/main/en/api/models#diffusers.UNet1DModel">UNet1DModel</a>) &#x2014; U-Net architecture to denoise the encoded image.',name:"unet"},{anchor:"diffusers.DanceDiffusionPipeline.scheduler",description:`<strong>scheduler</strong> (<a href="/docs/diffusers/main/en/api/schedulers#diffusers.SchedulerMixin">SchedulerMixin</a>) &#x2014;
A scheduler to be used in combination with <code>unet</code> to denoise the encoded image. Can be one of
<code>IPNDMScheduler</code>.`,name:"scheduler"}],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/pipelines/dance_diffusion/pipeline_dance_diffusion.py#L28"}}),I=new qt({props:{name:"__call__",anchor:"diffusers.DanceDiffusionPipeline.__call__",parameters:[{name:"batch_size",val:": int = 1"},{name:"num_inference_steps",val:": int = 100"},{name:"generator",val:": typing.Optional[torch._C.Generator] = None"},{name:"sample_length_in_s",val:": typing.Optional[float] = None"},{name:"return_dict",val:": bool = True"}],parametersDescription:[{anchor:"diffusers.DanceDiffusionPipeline.__call__.batch_size",description:`<strong>batch_size</strong> (<code>int</code>, <em>optional</em>, defaults to 1) &#x2014;
The number of audio samples to generate.`,name:"batch_size"},{anchor:"diffusers.DanceDiffusionPipeline.__call__.num_inference_steps",description:`<strong>num_inference_steps</strong> (<code>int</code>, <em>optional</em>, defaults to 50) &#x2014;
The number of denoising steps. More denoising steps usually lead to a higher quality audio sample at
the expense of slower inference.`,name:"num_inference_steps"},{anchor:"diffusers.DanceDiffusionPipeline.__call__.generator",description:`<strong>generator</strong> (<code>torch.Generator</code>, <em>optional</em>) &#x2014;
A <a href="https://pytorch.org/docs/stable/generated/torch.Generator.html" rel="nofollow">torch generator</a> to make generation
deterministic.`,name:"generator"},{anchor:"diffusers.DanceDiffusionPipeline.__call__.return_dict",description:`<strong>return_dict</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not to return a <code>AudioPipelineOutput</code> instead of a plain tuple.`,name:"return_dict"}],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/pipelines/dance_diffusion/pipeline_dance_diffusion.py#L44",returnDescription:`
<p><code>~pipelines.utils.AudioPipelineOutput</code> if
<code>return_dict</code> is True, otherwise a \`tuple. When returning a tuple, the first element is a list with the
generated images.</p>
`,returnType:`
<p><code>AudioPipelineOutput</code> or <code>tuple</code></p>
`}}),{c(){p=i("meta"),pe=c(),m=i("h1"),$=i("a"),X=i("span"),Z(x.$$.fragment),Me=c(),ee=i("span"),Oe=l("Dance Diffusion"),me=c(),v=i("h2"),w=i("a"),te=i("span"),Z(k.$$.fragment),Ce=c(),ne=i("span"),Ge=l("Overview"),ve=c(),N=i("p"),S=i("a"),Le=l("Dance Diffusion"),Ue=l(" by Zach Evans."),_e=c(),E=i("p"),Ie=l(`Dance Diffusion is the first in a suite of generative audio tools for producers and musicians to be released by Harmonai.
For more info or to get involved in the development of these tools, please visit `),H=i("a"),qe=l("https://harmonai.org"),ze=l(" and fill out the form on the front page."),ge=c(),y=i("p"),Be=l("The original codebase of this implementation can be found "),M=i("a"),Re=l("here"),Fe=l("."),be=c(),_=i("h2"),P=i("a"),ie=i("span"),Z(O.$$.fragment),Ve=c(),re=i("span"),We=l("Available Pipelines:"),De=c(),A=i("table"),oe=i("thead"),g=i("tr"),ae=i("th"),Ze=l("Pipeline"),Je=c(),se=i("th"),Ye=l("Tasks"),je=c(),q=i("th"),Ke=l("Colab"),Qe=c(),le=i("tbody"),b=i("tr"),fe=i("td"),C=i("a"),Xe=l("pipeline_dance_diffusion.py"),et=c(),ce=i("td"),de=i("em"),tt=l("Unconditional Audio Generation"),nt=c(),z=i("td"),it=l("-"),$e=c(),D=i("h2"),T=i("a"),he=i("span"),Z(G.$$.fragment),rt=c(),ue=i("span"),ot=l("DanceDiffusionPipeline"),we=c(),u=i("div"),Z(L.$$.fragment),at=c(),U=i("p"),st=l("This model inherits from "),B=i("a"),lt=l("DiffusionPipeline"),ft=l(`. Check the superclass documentation for the generic methods the
library implements for all the pipelines (such as downloading or saving, running on a particular device, etc.)`),ct=c(),R=i("div"),Z(I.$$.fragment),this.h()},l(e){const s=Ft('[data-svelte="svelte-1phssyn"]',document.head);p=r(s,"META",{name:!0,content:!0}),s.forEach(n),pe=d(e),m=r(e,"H1",{class:!0});var ye=o(m);$=r(ye,"A",{id:!0,class:!0,href:!0});var ut=o($);X=r(ut,"SPAN",{});var pt=o(X);J(x.$$.fragment,pt),pt.forEach(n),ut.forEach(n),Me=d(ye),ee=r(ye,"SPAN",{});var mt=o(ee);Oe=f(mt,"Dance Diffusion"),mt.forEach(n),ye.forEach(n),me=d(e),v=r(e,"H2",{class:!0});var Pe=o(v);w=r(Pe,"A",{id:!0,class:!0,href:!0});var vt=o(w);te=r(vt,"SPAN",{});var _t=o(te);J(k.$$.fragment,_t),_t.forEach(n),vt.forEach(n),Ce=d(Pe),ne=r(Pe,"SPAN",{});var gt=o(ne);Ge=f(gt,"Overview"),gt.forEach(n),Pe.forEach(n),ve=d(e),N=r(e,"P",{});var dt=o(N);S=r(dt,"A",{href:!0,rel:!0});var bt=o(S);Le=f(bt,"Dance Diffusion"),bt.forEach(n),Ue=f(dt," by Zach Evans."),dt.forEach(n),_e=d(e),E=r(e,"P",{});var Ae=o(E);Ie=f(Ae,`Dance Diffusion is the first in a suite of generative audio tools for producers and musicians to be released by Harmonai.
For more info or to get involved in the development of these tools, please visit `),H=r(Ae,"A",{href:!0,rel:!0});var Dt=o(H);qe=f(Dt,"https://harmonai.org"),Dt.forEach(n),ze=f(Ae," and fill out the form on the front page."),Ae.forEach(n),ge=d(e),y=r(e,"P",{});var Te=o(y);Be=f(Te,"The original codebase of this implementation can be found "),M=r(Te,"A",{href:!0,rel:!0});var $t=o(M);Re=f($t,"here"),$t.forEach(n),Fe=f(Te,"."),Te.forEach(n),be=d(e),_=r(e,"H2",{class:!0});var xe=o(_);P=r(xe,"A",{id:!0,class:!0,href:!0});var wt=o(P);ie=r(wt,"SPAN",{});var Et=o(ie);J(O.$$.fragment,Et),Et.forEach(n),wt.forEach(n),Ve=d(xe),re=r(xe,"SPAN",{});var yt=o(re);We=f(yt,"Available Pipelines:"),yt.forEach(n),xe.forEach(n),De=d(e),A=r(e,"TABLE",{});var ke=o(A);oe=r(ke,"THEAD",{});var Pt=o(oe);g=r(Pt,"TR",{});var F=o(g);ae=r(F,"TH",{});var At=o(ae);Ze=f(At,"Pipeline"),At.forEach(n),Je=d(F),se=r(F,"TH",{});var Tt=o(se);Ye=f(Tt,"Tasks"),Tt.forEach(n),je=d(F),q=r(F,"TH",{align:!0});var xt=o(q);Ke=f(xt,"Colab"),xt.forEach(n),F.forEach(n),Pt.forEach(n),Qe=d(ke),le=r(ke,"TBODY",{});var kt=o(le);b=r(kt,"TR",{});var V=o(b);fe=r(V,"TD",{});var Nt=o(fe);C=r(Nt,"A",{href:!0,rel:!0});var St=o(C);Xe=f(St,"pipeline_dance_diffusion.py"),St.forEach(n),Nt.forEach(n),et=d(V),ce=r(V,"TD",{});var Ht=o(ce);de=r(Ht,"EM",{});var Mt=o(de);tt=f(Mt,"Unconditional Audio Generation"),Mt.forEach(n),Ht.forEach(n),nt=d(V),z=r(V,"TD",{align:!0});var Ot=o(z);it=f(Ot,"-"),Ot.forEach(n),V.forEach(n),kt.forEach(n),ke.forEach(n),$e=d(e),D=r(e,"H2",{class:!0});var Ne=o(D);T=r(Ne,"A",{id:!0,class:!0,href:!0});var Ct=o(T);he=r(Ct,"SPAN",{});var Gt=o(he);J(G.$$.fragment,Gt),Gt.forEach(n),Ct.forEach(n),rt=d(Ne),ue=r(Ne,"SPAN",{});var Lt=o(ue);ot=f(Lt,"DanceDiffusionPipeline"),Lt.forEach(n),Ne.forEach(n),we=d(e),u=r(e,"DIV",{class:!0});var W=o(u);J(L.$$.fragment,W),at=d(W),U=r(W,"P",{});var Se=o(U);st=f(Se,"This model inherits from "),B=r(Se,"A",{href:!0});var Ut=o(B);lt=f(Ut,"DiffusionPipeline"),Ut.forEach(n),ft=f(Se,`. Check the superclass documentation for the generic methods the
library implements for all the pipelines (such as downloading or saving, running on a particular device, etc.)`),Se.forEach(n),ct=d(W),R=r(W,"DIV",{class:!0});var It=o(R);J(I.$$.fragment,It),It.forEach(n),W.forEach(n),this.h()},h(){a(p,"name","hf:doc:metadata"),a(p,"content",JSON.stringify(Jt)),a($,"id","dance-diffusion"),a($,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),a($,"href","#dance-diffusion"),a(m,"class","relative group"),a(w,"id","overview"),a(w,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),a(w,"href","#overview"),a(v,"class","relative group"),a(S,"href","https://github.com/Harmonai-org/sample-generator"),a(S,"rel","nofollow"),a(H,"href","https://harmonai.org"),a(H,"rel","nofollow"),a(M,"href","https://github.com/Harmonai-org/sample-generator"),a(M,"rel","nofollow"),a(P,"id","available-pipelines"),a(P,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),a(P,"href","#available-pipelines"),a(_,"class","relative group"),a(q,"align","center"),a(C,"href","https://github.com/huggingface/diffusers/blob/main/src/diffusers/pipelines/dance_diffusion/pipeline_dance_diffusion.py"),a(C,"rel","nofollow"),a(z,"align","center"),a(T,"id","diffusers.DanceDiffusionPipeline"),a(T,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),a(T,"href","#diffusers.DanceDiffusionPipeline"),a(D,"class","relative group"),a(B,"href","/docs/diffusers/main/en/using-diffusers/loading#diffusers.DiffusionPipeline"),a(R,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),a(u,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(e,s){t(document.head,p),h(e,pe,s),h(e,m,s),t(m,$),t($,X),Y(x,X,null),t(m,Me),t(m,ee),t(ee,Oe),h(e,me,s),h(e,v,s),t(v,w),t(w,te),Y(k,te,null),t(v,Ce),t(v,ne),t(ne,Ge),h(e,ve,s),h(e,N,s),t(N,S),t(S,Le),t(N,Ue),h(e,_e,s),h(e,E,s),t(E,Ie),t(E,H),t(H,qe),t(E,ze),h(e,ge,s),h(e,y,s),t(y,Be),t(y,M),t(M,Re),t(y,Fe),h(e,be,s),h(e,_,s),t(_,P),t(P,ie),Y(O,ie,null),t(_,Ve),t(_,re),t(re,We),h(e,De,s),h(e,A,s),t(A,oe),t(oe,g),t(g,ae),t(ae,Ze),t(g,Je),t(g,se),t(se,Ye),t(g,je),t(g,q),t(q,Ke),t(A,Qe),t(A,le),t(le,b),t(b,fe),t(fe,C),t(C,Xe),t(b,et),t(b,ce),t(ce,de),t(de,tt),t(b,nt),t(b,z),t(z,it),h(e,$e,s),h(e,D,s),t(D,T),t(T,he),Y(G,he,null),t(D,rt),t(D,ue),t(ue,ot),h(e,we,s),h(e,u,s),Y(L,u,null),t(u,at),t(u,U),t(U,st),t(U,B),t(B,lt),t(U,ft),t(u,ct),t(u,R),Y(I,R,null),Ee=!0},p:Vt,i(e){Ee||(j(x.$$.fragment,e),j(k.$$.fragment,e),j(O.$$.fragment,e),j(G.$$.fragment,e),j(L.$$.fragment,e),j(I.$$.fragment,e),Ee=!0)},o(e){K(x.$$.fragment,e),K(k.$$.fragment,e),K(O.$$.fragment,e),K(G.$$.fragment,e),K(L.$$.fragment,e),K(I.$$.fragment,e),Ee=!1},d(e){n(p),e&&n(pe),e&&n(m),Q(x),e&&n(me),e&&n(v),Q(k),e&&n(ve),e&&n(N),e&&n(_e),e&&n(E),e&&n(ge),e&&n(y),e&&n(be),e&&n(_),Q(O),e&&n(De),e&&n(A),e&&n($e),e&&n(D),Q(G),e&&n(we),e&&n(u),Q(L),Q(I)}}}const Jt={local:"dance-diffusion",sections:[{local:"overview",title:"Overview"},{local:"available-pipelines",title:"Available Pipelines:"},{local:"diffusers.DanceDiffusionPipeline",title:"DanceDiffusionPipeline"}],title:"Dance Diffusion"};function Yt(ht){return Wt(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Xt extends zt{constructor(p){super();Bt(this,p,Yt,Zt,Rt,{})}}export{Xt as default,Jt as metadata};
