import{S as ze,i as Ie,s as $e,e as i,k as m,w as fe,t as p,M as Ee,c as r,d as o,m as c,a as n,x as ve,h as u,b as I,G as t,g as v,y as he,L as ke,q as _e,o as be,B as ge,v as we}from"../../chunks/vendor-hf-doc-builder.js";import{I as ye}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{C as Le}from"../../chunks/CourseFloatingBanner-hf-doc-builder.js";import"../../chunks/DocNotebookDropdown-hf-doc-builder.js";function Pe(te){let d,T,f,h,$,_,H,E,M,A,b,S,g,O,U,a,k,B,F,w,G,J,y,R,j,L,K,Q,P,V,W,q,X,Y,x,Z,C,z,ee,D;return _=new ye({}),b=new Le({props:{chapter:2,classNames:"absolute z-10 right-0 top-0"}}),{c(){d=i("meta"),T=m(),f=i("h1"),h=i("a"),$=i("span"),fe(_.$$.fragment),H=m(),E=i("span"),M=p("Uso di base completato!"),A=m(),fe(b.$$.fragment),S=m(),g=i("p"),O=p("Ottimo lavoro per aver seguito il corso fino a questo punto! Per fare un riassunto, in questo capitolo abbiamo visto:"),U=m(),a=i("ul"),k=i("li"),B=p("Imparare gli elementi di base di un modello Transformer."),F=m(),w=i("li"),G=p("Imparare a conoscere gli elementi che compongono una pipeline di tokenizzazione."),J=m(),y=i("li"),R=p("Hai visto come utilizzare un modello Transformer nella pratica."),j=m(),L=i("li"),K=p("Imparare a sfruttare un tokenizer per convertire il testo in tensori comprensibili dal modello."),Q=m(),P=i("li"),V=p("Impostare un tokenizer e un modello insieme per passare dal testo alle previsioni."),W=m(),q=i("li"),X=p("Imparare i limiti degli ID di input e conoscere le maschere di attenzione."),Y=m(),x=i("li"),Z=p("Abbiamo giocato con metodi di tokenizzazione versatili e configurabili."),C=m(),z=i("p"),ee=p("D\u2019ora in poi, dovreste essere in grado di navigare liberamente nella documentazione di Transformers \u{1F917}: il vocabolario vi suoner\xE0 familiare e avrete gi\xE0 visto i metodi che userete la maggior parte delle volte."),this.h()},l(e){const s=Ee('[data-svelte="svelte-1phssyn"]',document.head);d=r(s,"META",{name:!0,content:!0}),s.forEach(o),T=c(e),f=r(e,"H1",{class:!0});var N=n(f);h=r(N,"A",{id:!0,class:!0,href:!0});var oe=n(h);$=r(oe,"SPAN",{});var ae=n($);ve(_.$$.fragment,ae),ae.forEach(o),oe.forEach(o),H=c(N),E=r(N,"SPAN",{});var ie=n(E);M=u(ie,"Uso di base completato!"),ie.forEach(o),N.forEach(o),A=c(e),ve(b.$$.fragment,e),S=c(e),g=r(e,"P",{});var re=n(g);O=u(re,"Ottimo lavoro per aver seguito il corso fino a questo punto! Per fare un riassunto, in questo capitolo abbiamo visto:"),re.forEach(o),U=c(e),a=r(e,"UL",{});var l=n(a);k=r(l,"LI",{});var le=n(k);B=u(le,"Imparare gli elementi di base di un modello Transformer."),le.forEach(o),F=c(l),w=r(l,"LI",{});var ne=n(w);G=u(ne,"Imparare a conoscere gli elementi che compongono una pipeline di tokenizzazione."),ne.forEach(o),J=c(l),y=r(l,"LI",{});var se=n(y);R=u(se,"Hai visto come utilizzare un modello Transformer nella pratica."),se.forEach(o),j=c(l),L=r(l,"LI",{});var me=n(L);K=u(me,"Imparare a sfruttare un tokenizer per convertire il testo in tensori comprensibili dal modello."),me.forEach(o),Q=c(l),P=r(l,"LI",{});var ce=n(P);V=u(ce,"Impostare un tokenizer e un modello insieme per passare dal testo alle previsioni."),ce.forEach(o),W=c(l),q=r(l,"LI",{});var pe=n(q);X=u(pe,"Imparare i limiti degli ID di input e conoscere le maschere di attenzione."),pe.forEach(o),Y=c(l),x=r(l,"LI",{});var ue=n(x);Z=u(ue,"Abbiamo giocato con metodi di tokenizzazione versatili e configurabili."),ue.forEach(o),l.forEach(o),C=c(e),z=r(e,"P",{});var de=n(z);ee=u(de,"D\u2019ora in poi, dovreste essere in grado di navigare liberamente nella documentazione di Transformers \u{1F917}: il vocabolario vi suoner\xE0 familiare e avrete gi\xE0 visto i metodi che userete la maggior parte delle volte."),de.forEach(o),this.h()},h(){I(d,"name","hf:doc:metadata"),I(d,"content",JSON.stringify(qe)),I(h,"id","uso-di-base-completato"),I(h,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),I(h,"href","#uso-di-base-completato"),I(f,"class","relative group")},m(e,s){t(document.head,d),v(e,T,s),v(e,f,s),t(f,h),t(h,$),he(_,$,null),t(f,H),t(f,E),t(E,M),v(e,A,s),he(b,e,s),v(e,S,s),v(e,g,s),t(g,O),v(e,U,s),v(e,a,s),t(a,k),t(k,B),t(a,F),t(a,w),t(w,G),t(a,J),t(a,y),t(y,R),t(a,j),t(a,L),t(L,K),t(a,Q),t(a,P),t(P,V),t(a,W),t(a,q),t(q,X),t(a,Y),t(a,x),t(x,Z),v(e,C,s),v(e,z,s),t(z,ee),D=!0},p:ke,i(e){D||(_e(_.$$.fragment,e),_e(b.$$.fragment,e),D=!0)},o(e){be(_.$$.fragment,e),be(b.$$.fragment,e),D=!1},d(e){o(d),e&&o(T),e&&o(f),ge(_),e&&o(A),ge(b,e),e&&o(S),e&&o(g),e&&o(U),e&&o(a),e&&o(C),e&&o(z)}}}const qe={local:"uso-di-base-completato",title:"Uso di base completato!"};function xe(te){return we(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ce extends ze{constructor(d){super();Ie(this,d,xe,Pe,$e,{})}}export{Ce as default,qe as metadata};
