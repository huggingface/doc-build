import{S as Je,i as Re,s as je,e as n,k as o,w as $,t as w,M as Ke,c as s,d as a,m as i,a as l,x as M,h as N,b as c,G as t,g as m,y as L,L as Qe,q as D,o as T,B as P,v as We}from"../../chunks/vendor-hf-doc-builder.js";import{D as E}from"../../chunks/Docstring-hf-doc-builder.js";import{I as Xe}from"../../chunks/IconCopyLink-hf-doc-builder.js";function Ye(ke){let p,W,g,x,C,S,_e,G,fe,X,u,A,ve,U,he,Y,d,k,be,F,ye,Z,_,z,$e,H,we,ee,f,I,Me,J,Ne,ae,v,q,Le,R,De,te,h,O,Te,j,Pe,re,b,V,xe,K,Ee,ne,y,B,Se,Q,Ae,se;return S=new Xe({}),A=new E({props:{name:"class accelerate.utils.MegatronLMPlugin",anchor:"accelerate.utils.MegatronLMPlugin",parameters:[{name:"tp_degree",val:": int = None"},{name:"pp_degree",val:": int = None"},{name:"num_micro_batches",val:": int = None"},{name:"gradient_clipping",val:": float = None"},{name:"sequence_parallelism",val:": bool = None"},{name:"recompute_activation",val:": bool = None"},{name:"use_distributed_optimizer",val:": bool = None"},{name:"pipeline_model_parallel_split_rank",val:": int = None"},{name:"num_layers_per_virtual_pipeline_stage",val:": int = None"},{name:"is_train_batch_min",val:": str = True"},{name:"train_iters",val:": int = None"},{name:"train_samples",val:": int = None"},{name:"weight_decay_incr_style",val:": str = 'constant'"},{name:"start_weight_decay",val:": float = None"},{name:"end_weight_decay",val:": float = None"},{name:"lr_decay_style",val:": str = 'linear'"},{name:"lr_decay_iters",val:": int = None"},{name:"lr_decay_samples",val:": int = None"},{name:"lr_warmup_iters",val:": int = None"},{name:"lr_warmup_samples",val:": int = None"},{name:"lr_warmup_fraction",val:": float = None"},{name:"min_lr",val:": float = 0"},{name:"consumed_samples",val:": typing.List[int] = None"},{name:"no_wd_decay_cond",val:": typing.Optional[typing.Callable] = None"},{name:"scale_lr_cond",val:": typing.Optional[typing.Callable] = None"},{name:"lr_mult",val:": float = 1.0"},{name:"megatron_dataset_flag",val:": bool = False"},{name:"seq_length",val:": int = None"},{name:"encoder_seq_length",val:": int = None"},{name:"decoder_seq_length",val:": int = None"},{name:"tensorboard_dir",val:": str = None"},{name:"set_all_logging_options",val:": bool = False"},{name:"eval_iters",val:": int = 100"},{name:"eval_interval",val:": int = 1000"},{name:"return_logits",val:": bool = False"},{name:"custom_train_step_class",val:": typing.Optional[typing.Any] = None"},{name:"custom_train_step_kwargs",val:": typing.Union[typing.Dict[str, typing.Any], NoneType] = None"},{name:"custom_model_provider_function",val:": typing.Optional[typing.Callable] = None"},{name:"custom_prepare_model_function",val:": typing.Optional[typing.Callable] = None"},{name:"other_megatron_args",val:": typing.Union[typing.Dict[str, typing.Any], NoneType] = None"}],source:"https://github.com/huggingface/accelerate/blob/main/src/accelerate/utils/dataclasses.py#L654"}}),k=new E({props:{name:"class accelerate.utils.MegatronLMDummyScheduler",anchor:"accelerate.utils.MegatronLMDummyScheduler",parameters:[{name:"optimizer",val:""},{name:"total_num_steps",val:" = None"},{name:"warmup_num_steps",val:" = 0"},{name:"**kwargs",val:""}],parametersDescription:[{anchor:"accelerate.utils.MegatronLMDummyScheduler.optimizer",description:`<strong>optimizer</strong> (<code>torch.optim.optimizer.Optimizer</code>) &#x2014;
The optimizer to wrap.`,name:"optimizer"},{anchor:"accelerate.utils.MegatronLMDummyScheduler.total_num_steps",description:`<strong>total_num_steps</strong> (int) &#x2014;
Total number of steps.`,name:"total_num_steps"},{anchor:"accelerate.utils.MegatronLMDummyScheduler.warmup_num_steps",description:`<strong>warmup_num_steps</strong> (int) &#x2014;
Number of steps for warmup.
**kwargs &#x2014;
Other arguments.`,name:"warmup_num_steps"}],source:"https://github.com/huggingface/accelerate/blob/main/src/accelerate/utils/megatron_lm.py#L417"}}),z=new E({props:{name:"class accelerate.utils.MegatronLMDummyDataLoader",anchor:"accelerate.utils.MegatronLMDummyDataLoader",parameters:[{name:"**dataset_kwargs",val:""}],source:"https://github.com/huggingface/accelerate/blob/main/src/accelerate/utils/megatron_lm.py#L146"}}),I=new E({props:{name:"class accelerate.utils.AbstractTrainStep",anchor:"accelerate.utils.AbstractTrainStep",parameters:[{name:"name",val:""}],source:"https://github.com/huggingface/accelerate/blob/main/src/accelerate/utils/megatron_lm.py#L454"}}),q=new E({props:{name:"class accelerate.utils.GPTTrainStep",anchor:"accelerate.utils.GPTTrainStep",parameters:[{name:"args",val:""}],parametersDescription:[{anchor:"accelerate.utils.GPTTrainStep.args",description:"<strong>args</strong> (<code>argparse.Namespace</code>) &#x2014; Megatron-LM arguments.",name:"args"}],source:"https://github.com/huggingface/accelerate/blob/main/src/accelerate/utils/megatron_lm.py#L600"}}),O=new E({props:{name:"class accelerate.utils.BertTrainStep",anchor:"accelerate.utils.BertTrainStep",parameters:[{name:"args",val:""}],parametersDescription:[{anchor:"accelerate.utils.BertTrainStep.args",description:"<strong>args</strong> (<code>argparse.Namespace</code>) &#x2014; Megatron-LM arguments.",name:"args"}],source:"https://github.com/huggingface/accelerate/blob/main/src/accelerate/utils/megatron_lm.py#L471"}}),V=new E({props:{name:"class accelerate.utils.T5TrainStep",anchor:"accelerate.utils.T5TrainStep",parameters:[{name:"args",val:""}],parametersDescription:[{anchor:"accelerate.utils.T5TrainStep.args",description:"<strong>args</strong> (<code>argparse.Namespace</code>) &#x2014; Megatron-LM arguments.",name:"args"}],source:"https://github.com/huggingface/accelerate/blob/main/src/accelerate/utils/megatron_lm.py#L706"}}),B=new E({props:{name:"accelerate.utils.avg_losses_across_data_parallel_group",anchor:"accelerate.utils.avg_losses_across_data_parallel_group",parameters:[{name:"losses",val:""}],parametersDescription:[{anchor:"accelerate.utils.avg_losses_across_data_parallel_group.losses",description:"<strong>losses</strong> (List[Tensor]) &#x2014; List of losses to average across data parallel group.",name:"losses"}],source:"https://github.com/huggingface/accelerate/blob/main/src/accelerate/utils/megatron_lm.py#L1411"}}),{c(){p=n("meta"),W=o(),g=n("h1"),x=n("a"),C=n("span"),$(S.$$.fragment),_e=o(),G=n("span"),fe=w("Utilities for Megatron-LM"),X=o(),u=n("div"),$(A.$$.fragment),ve=o(),U=n("p"),he=w(`Plugin for Megatron-LM to enable tensor, pipeline, sequence and data parallelism. Also to enable selective
activation recomputation and optimized fused kernels.`),Y=o(),d=n("div"),$(k.$$.fragment),be=o(),F=n("p"),ye=w(`Dummy scheduler presents model parameters or param groups, this is primarily used to follow conventional training
loop when scheduler config is specified in the deepspeed config file.`),Z=o(),_=n("div"),$(z.$$.fragment),$e=o(),H=n("p"),we=w("Dummy dataloader presents model parameters or param groups, this is primarily used to follow conventional training"),ee=o(),f=n("div"),$(I.$$.fragment),Me=o(),J=n("p"),Ne=w("Abstract class for batching, forward pass and loss handler."),ae=o(),v=n("div"),$(q.$$.fragment),Le=o(),R=n("p"),De=w("GPT train step class."),te=o(),h=n("div"),$(O.$$.fragment),Te=o(),j=n("p"),Pe=w("Bert train step class."),re=o(),b=n("div"),$(V.$$.fragment),xe=o(),K=n("p"),Ee=w("T5 train step class."),ne=o(),y=n("div"),$(B.$$.fragment),Se=o(),Q=n("p"),Ae=w("Average losses across data parallel group."),this.h()},l(e){const r=Ke('[data-svelte="svelte-1phssyn"]',document.head);p=s(r,"META",{name:!0,content:!0}),r.forEach(a),W=i(e),g=s(e,"H1",{class:!0});var le=l(g);x=s(le,"A",{id:!0,class:!0,href:!0});var ze=l(x);C=s(ze,"SPAN",{});var Ie=l(C);M(S.$$.fragment,Ie),Ie.forEach(a),ze.forEach(a),_e=i(le),G=s(le,"SPAN",{});var qe=l(G);fe=N(qe,"Utilities for Megatron-LM"),qe.forEach(a),le.forEach(a),X=i(e),u=s(e,"DIV",{class:!0});var oe=l(u);M(A.$$.fragment,oe),ve=i(oe),U=s(oe,"P",{});var Oe=l(U);he=N(Oe,`Plugin for Megatron-LM to enable tensor, pipeline, sequence and data parallelism. Also to enable selective
activation recomputation and optimized fused kernels.`),Oe.forEach(a),oe.forEach(a),Y=i(e),d=s(e,"DIV",{class:!0});var ie=l(d);M(k.$$.fragment,ie),be=i(ie),F=s(ie,"P",{});var Ve=l(F);ye=N(Ve,`Dummy scheduler presents model parameters or param groups, this is primarily used to follow conventional training
loop when scheduler config is specified in the deepspeed config file.`),Ve.forEach(a),ie.forEach(a),Z=i(e),_=s(e,"DIV",{class:!0});var me=l(_);M(z.$$.fragment,me),$e=i(me),H=s(me,"P",{});var Be=l(H);we=N(Be,"Dummy dataloader presents model parameters or param groups, this is primarily used to follow conventional training"),Be.forEach(a),me.forEach(a),ee=i(e),f=s(e,"DIV",{class:!0});var ce=l(f);M(I.$$.fragment,ce),Me=i(ce),J=s(ce,"P",{});var Ce=l(J);Ne=N(Ce,"Abstract class for batching, forward pass and loss handler."),Ce.forEach(a),ce.forEach(a),ae=i(e),v=s(e,"DIV",{class:!0});var pe=l(v);M(q.$$.fragment,pe),Le=i(pe),R=s(pe,"P",{});var Ge=l(R);De=N(Ge,"GPT train step class."),Ge.forEach(a),pe.forEach(a),te=i(e),h=s(e,"DIV",{class:!0});var ge=l(h);M(O.$$.fragment,ge),Te=i(ge),j=s(ge,"P",{});var Ue=l(j);Pe=N(Ue,"Bert train step class."),Ue.forEach(a),ge.forEach(a),re=i(e),b=s(e,"DIV",{class:!0});var ue=l(b);M(V.$$.fragment,ue),xe=i(ue),K=s(ue,"P",{});var Fe=l(K);Ee=N(Fe,"T5 train step class."),Fe.forEach(a),ue.forEach(a),ne=i(e),y=s(e,"DIV",{class:!0});var de=l(y);M(B.$$.fragment,de),Se=i(de),Q=s(de,"P",{});var He=l(Q);Ae=N(He,"Average losses across data parallel group."),He.forEach(a),de.forEach(a),this.h()},h(){c(p,"name","hf:doc:metadata"),c(p,"content",JSON.stringify(Ze)),c(x,"id","accelerate.utils.MegatronLMPlugin"),c(x,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(x,"href","#accelerate.utils.MegatronLMPlugin"),c(g,"class","relative group"),c(u,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(d,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(_,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(f,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(v,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(h,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(b,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(y,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(e,r){t(document.head,p),m(e,W,r),m(e,g,r),t(g,x),t(x,C),L(S,C,null),t(g,_e),t(g,G),t(G,fe),m(e,X,r),m(e,u,r),L(A,u,null),t(u,ve),t(u,U),t(U,he),m(e,Y,r),m(e,d,r),L(k,d,null),t(d,be),t(d,F),t(F,ye),m(e,Z,r),m(e,_,r),L(z,_,null),t(_,$e),t(_,H),t(H,we),m(e,ee,r),m(e,f,r),L(I,f,null),t(f,Me),t(f,J),t(J,Ne),m(e,ae,r),m(e,v,r),L(q,v,null),t(v,Le),t(v,R),t(R,De),m(e,te,r),m(e,h,r),L(O,h,null),t(h,Te),t(h,j),t(j,Pe),m(e,re,r),m(e,b,r),L(V,b,null),t(b,xe),t(b,K),t(K,Ee),m(e,ne,r),m(e,y,r),L(B,y,null),t(y,Se),t(y,Q),t(Q,Ae),se=!0},p:Qe,i(e){se||(D(S.$$.fragment,e),D(A.$$.fragment,e),D(k.$$.fragment,e),D(z.$$.fragment,e),D(I.$$.fragment,e),D(q.$$.fragment,e),D(O.$$.fragment,e),D(V.$$.fragment,e),D(B.$$.fragment,e),se=!0)},o(e){T(S.$$.fragment,e),T(A.$$.fragment,e),T(k.$$.fragment,e),T(z.$$.fragment,e),T(I.$$.fragment,e),T(q.$$.fragment,e),T(O.$$.fragment,e),T(V.$$.fragment,e),T(B.$$.fragment,e),se=!1},d(e){a(p),e&&a(W),e&&a(g),P(S),e&&a(X),e&&a(u),P(A),e&&a(Y),e&&a(d),P(k),e&&a(Z),e&&a(_),P(z),e&&a(ee),e&&a(f),P(I),e&&a(ae),e&&a(v),P(q),e&&a(te),e&&a(h),P(O),e&&a(re),e&&a(b),P(V),e&&a(ne),e&&a(y),P(B)}}}const Ze={local:"accelerate.utils.MegatronLMPlugin",title:"Utilities for Megatron-LM"};function ea(ke){return We(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class na extends Je{constructor(p){super();Re(this,p,ea,Ye,je,{})}}export{na as default,Ze as metadata};
