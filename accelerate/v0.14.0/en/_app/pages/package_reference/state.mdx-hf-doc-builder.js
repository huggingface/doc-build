import{S as vr,i as _r,s as gr,e as r,k as i,w as Ct,t as a,M as Er,c as o,d as t,m as c,a as s,x as It,h as n,b as m,G as e,g as v,y as Rt,L as br,q as Pt,o as kt,B as Wt,v as yr}from"../../chunks/vendor-hf-doc-builder.js";import{D as mr}from"../../chunks/Docstring-hf-doc-builder.js";import{I as Sr}from"../../chunks/IconCopyLink-hf-doc-builder.js";function Tr(zt){let _,be,g,b,q,C,Ne,B,Le,ye,y,Ae,I,De,Ge,Se,k,Ce,Te,h,R,Ie,M,Re,Pe,U,F,ke,We,d,S,V,ze,qe,H,Be,Me,Ue,T,J,Fe,Ve,W,He,Je,je,w,j,Ke,Qe,K,Xe,Ye,Ze,x,Q,et,tt,X,rt,at,ot,$,Y,nt,st,Z,lt,it,ct,O,ee,dt,ht,te,ft,ut,we,f,P,pt,re,mt,vt,ae,oe,_t,gt,E,N,ne,Et,bt,se,yt,St,Tt,L,le,wt,xt,ie,$t,Ot,Nt,A,ce,Lt,At,de,Dt,Gt,xe;return C=new Sr({}),R=new mr({props:{name:"class accelerate.state.AcceleratorState",anchor:"accelerate.state.AcceleratorState",parameters:[{name:"mixed_precision",val:": str = None"},{name:"cpu",val:": bool = False"},{name:"deepspeed_plugin",val:" = None"},{name:"fsdp_plugin",val:" = None"},{name:"megatron_lm_plugin",val:" = None"},{name:"_from_accelerator",val:": bool = False"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/accelerate/blob/v0.14.0/src/accelerate/state.py#L38"}}),P=new mr({props:{name:"class accelerate.state.GradientState",anchor:"accelerate.state.GradientState",parameters:[],source:"https://github.com/huggingface/accelerate/blob/v0.14.0/src/accelerate/state.py#L271"}}),{c(){_=r("meta"),be=i(),g=r("h1"),b=r("a"),q=r("span"),Ct(C.$$.fragment),Ne=i(),B=r("span"),Le=a("Stateful Classes"),ye=i(),y=r("p"),Ae=a("Below are variations of a "),I=r("a"),De=a("singleton class"),Ge=a(` in the sense that all
instances share the same state, which is initialized on the first instantiation.`),Se=i(),k=r("p"),Ce=a(`These classes are immutable and store information about certain configurations or
states.`),Te=i(),h=r("div"),Ct(R.$$.fragment),Ie=i(),M=r("p"),Re=a("Singleton class that has information about the current training environment."),Pe=i(),U=r("p"),F=r("strong"),ke=a("Available attributes:"),We=i(),d=r("ul"),S=r("li"),V=r("strong"),ze=a("device"),qe=a(" ("),H=r("code"),Be=a("torch.device"),Me=a(") \u2014 The device to use."),Ue=i(),T=r("li"),J=r("strong"),Fe=a("distributed_type"),Ve=a(" ("),W=r("a"),He=a("DistributedType"),Je=a(`) \u2014 The type of distributed environment currently
in use.`),je=i(),w=r("li"),j=r("strong"),Ke=a("local_process_index"),Qe=a(" ("),K=r("code"),Xe=a("int"),Ye=a(") \u2014 The index of the current process on the current server."),Ze=i(),x=r("li"),Q=r("strong"),et=a("mixed_precision"),tt=a(" ("),X=r("code"),rt=a("str"),at=a(`) \u2014 Whether or not the current script will use mixed precision, and if so the type
of mixed precision being performed.`),ot=i(),$=r("li"),Y=r("strong"),nt=a("num_processes"),st=a(" ("),Z=r("code"),lt=a("int"),it=a(") \u2014 The number of processes currently launched in parallel."),ct=i(),O=r("li"),ee=r("strong"),dt=a("process_index"),ht=a(" ("),te=r("code"),ft=a("int"),ut=a(") \u2014 The index of the current process."),we=i(),f=r("div"),Ct(P.$$.fragment),pt=i(),re=r("p"),mt=a("Singleton class that has information related to gradient synchronization for gradient accumulation"),vt=i(),ae=r("p"),oe=r("strong"),_t=a("Available attributes:"),gt=i(),E=r("ul"),N=r("li"),ne=r("strong"),Et=a("end_of_dataloader"),bt=a(" ("),se=r("code"),yt=a("bool"),St=a(") \u2014 Whether we have reached the end the current dataloader"),Tt=i(),L=r("li"),le=r("strong"),wt=a("remainder"),xt=a(" ("),ie=r("code"),$t=a("int"),Ot=a(") \u2014 The number of extra samples that were added from padding the dataloader"),Nt=i(),A=r("li"),ce=r("strong"),Lt=a("sync_gradients"),At=a(" ("),de=r("code"),Dt=a("bool"),Gt=a(") \u2014 Whether the gradients should be synced across all devices"),this.h()},l(l){const u=Er('[data-svelte="svelte-1phssyn"]',document.head);_=o(u,"META",{name:!0,content:!0}),u.forEach(t),be=c(l),g=o(l,"H1",{class:!0});var $e=s(g);b=o($e,"A",{id:!0,class:!0,href:!0});var qt=s(b);q=o(qt,"SPAN",{});var Bt=s(q);It(C.$$.fragment,Bt),Bt.forEach(t),qt.forEach(t),Ne=c($e),B=o($e,"SPAN",{});var Mt=s(B);Le=n(Mt,"Stateful Classes"),Mt.forEach(t),$e.forEach(t),ye=c(l),y=o(l,"P",{});var Oe=s(y);Ae=n(Oe,"Below are variations of a "),I=o(Oe,"A",{href:!0,rel:!0});var Ut=s(I);De=n(Ut,"singleton class"),Ut.forEach(t),Ge=n(Oe,` in the sense that all
instances share the same state, which is initialized on the first instantiation.`),Oe.forEach(t),Se=c(l),k=o(l,"P",{});var Ft=s(k);Ce=n(Ft,`These classes are immutable and store information about certain configurations or
states.`),Ft.forEach(t),Te=c(l),h=o(l,"DIV",{class:!0});var D=s(h);It(R.$$.fragment,D),Ie=c(D),M=o(D,"P",{});var Vt=s(M);Re=n(Vt,"Singleton class that has information about the current training environment."),Vt.forEach(t),Pe=c(D),U=o(D,"P",{});var Ht=s(U);F=o(Ht,"STRONG",{});var Jt=s(F);ke=n(Jt,"Available attributes:"),Jt.forEach(t),Ht.forEach(t),We=c(D),d=o(D,"UL",{});var p=s(d);S=o(p,"LI",{});var he=s(S);V=o(he,"STRONG",{});var jt=s(V);ze=n(jt,"device"),jt.forEach(t),qe=n(he," ("),H=o(he,"CODE",{});var Kt=s(H);Be=n(Kt,"torch.device"),Kt.forEach(t),Me=n(he,") \u2014 The device to use."),he.forEach(t),Ue=c(p),T=o(p,"LI",{});var fe=s(T);J=o(fe,"STRONG",{});var Qt=s(J);Fe=n(Qt,"distributed_type"),Qt.forEach(t),Ve=n(fe," ("),W=o(fe,"A",{href:!0});var Xt=s(W);He=n(Xt,"DistributedType"),Xt.forEach(t),Je=n(fe,`) \u2014 The type of distributed environment currently
in use.`),fe.forEach(t),je=c(p),w=o(p,"LI",{});var ue=s(w);j=o(ue,"STRONG",{});var Yt=s(j);Ke=n(Yt,"local_process_index"),Yt.forEach(t),Qe=n(ue," ("),K=o(ue,"CODE",{});var Zt=s(K);Xe=n(Zt,"int"),Zt.forEach(t),Ye=n(ue,") \u2014 The index of the current process on the current server."),ue.forEach(t),Ze=c(p),x=o(p,"LI",{});var pe=s(x);Q=o(pe,"STRONG",{});var er=s(Q);et=n(er,"mixed_precision"),er.forEach(t),tt=n(pe," ("),X=o(pe,"CODE",{});var tr=s(X);rt=n(tr,"str"),tr.forEach(t),at=n(pe,`) \u2014 Whether or not the current script will use mixed precision, and if so the type
of mixed precision being performed.`),pe.forEach(t),ot=c(p),$=o(p,"LI",{});var me=s($);Y=o(me,"STRONG",{});var rr=s(Y);nt=n(rr,"num_processes"),rr.forEach(t),st=n(me," ("),Z=o(me,"CODE",{});var ar=s(Z);lt=n(ar,"int"),ar.forEach(t),it=n(me,") \u2014 The number of processes currently launched in parallel."),me.forEach(t),ct=c(p),O=o(p,"LI",{});var ve=s(O);ee=o(ve,"STRONG",{});var or=s(ee);dt=n(or,"process_index"),or.forEach(t),ht=n(ve," ("),te=o(ve,"CODE",{});var nr=s(te);ft=n(nr,"int"),nr.forEach(t),ut=n(ve,") \u2014 The index of the current process."),ve.forEach(t),p.forEach(t),D.forEach(t),we=c(l),f=o(l,"DIV",{class:!0});var G=s(f);It(P.$$.fragment,G),pt=c(G),re=o(G,"P",{});var sr=s(re);mt=n(sr,"Singleton class that has information related to gradient synchronization for gradient accumulation"),sr.forEach(t),vt=c(G),ae=o(G,"P",{});var lr=s(ae);oe=o(lr,"STRONG",{});var ir=s(oe);_t=n(ir,"Available attributes:"),ir.forEach(t),lr.forEach(t),gt=c(G),E=o(G,"UL",{});var z=s(E);N=o(z,"LI",{});var _e=s(N);ne=o(_e,"STRONG",{});var cr=s(ne);Et=n(cr,"end_of_dataloader"),cr.forEach(t),bt=n(_e," ("),se=o(_e,"CODE",{});var dr=s(se);yt=n(dr,"bool"),dr.forEach(t),St=n(_e,") \u2014 Whether we have reached the end the current dataloader"),_e.forEach(t),Tt=c(z),L=o(z,"LI",{});var ge=s(L);le=o(ge,"STRONG",{});var hr=s(le);wt=n(hr,"remainder"),hr.forEach(t),xt=n(ge," ("),ie=o(ge,"CODE",{});var fr=s(ie);$t=n(fr,"int"),fr.forEach(t),Ot=n(ge,") \u2014 The number of extra samples that were added from padding the dataloader"),ge.forEach(t),Nt=c(z),A=o(z,"LI",{});var Ee=s(A);ce=o(Ee,"STRONG",{});var ur=s(ce);Lt=n(ur,"sync_gradients"),ur.forEach(t),At=n(Ee," ("),de=o(Ee,"CODE",{});var pr=s(de);Dt=n(pr,"bool"),pr.forEach(t),Gt=n(Ee,") \u2014 Whether the gradients should be synced across all devices"),Ee.forEach(t),z.forEach(t),G.forEach(t),this.h()},h(){m(_,"name","hf:doc:metadata"),m(_,"content",JSON.stringify(wr)),m(b,"id","accelerate.state.AcceleratorState"),m(b,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),m(b,"href","#accelerate.state.AcceleratorState"),m(g,"class","relative group"),m(I,"href","https://en.wikipedia.org/wiki/Singleton_pattern"),m(I,"rel","nofollow"),m(W,"href","/docs/accelerate/v0.14.0/en/package_reference/utilities#accelerate.DistributedType"),m(h,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),m(f,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(l,u){e(document.head,_),v(l,be,u),v(l,g,u),e(g,b),e(b,q),Rt(C,q,null),e(g,Ne),e(g,B),e(B,Le),v(l,ye,u),v(l,y,u),e(y,Ae),e(y,I),e(I,De),e(y,Ge),v(l,Se,u),v(l,k,u),e(k,Ce),v(l,Te,u),v(l,h,u),Rt(R,h,null),e(h,Ie),e(h,M),e(M,Re),e(h,Pe),e(h,U),e(U,F),e(F,ke),e(h,We),e(h,d),e(d,S),e(S,V),e(V,ze),e(S,qe),e(S,H),e(H,Be),e(S,Me),e(d,Ue),e(d,T),e(T,J),e(J,Fe),e(T,Ve),e(T,W),e(W,He),e(T,Je),e(d,je),e(d,w),e(w,j),e(j,Ke),e(w,Qe),e(w,K),e(K,Xe),e(w,Ye),e(d,Ze),e(d,x),e(x,Q),e(Q,et),e(x,tt),e(x,X),e(X,rt),e(x,at),e(d,ot),e(d,$),e($,Y),e(Y,nt),e($,st),e($,Z),e(Z,lt),e($,it),e(d,ct),e(d,O),e(O,ee),e(ee,dt),e(O,ht),e(O,te),e(te,ft),e(O,ut),v(l,we,u),v(l,f,u),Rt(P,f,null),e(f,pt),e(f,re),e(re,mt),e(f,vt),e(f,ae),e(ae,oe),e(oe,_t),e(f,gt),e(f,E),e(E,N),e(N,ne),e(ne,Et),e(N,bt),e(N,se),e(se,yt),e(N,St),e(E,Tt),e(E,L),e(L,le),e(le,wt),e(L,xt),e(L,ie),e(ie,$t),e(L,Ot),e(E,Nt),e(E,A),e(A,ce),e(ce,Lt),e(A,At),e(A,de),e(de,Dt),e(A,Gt),xe=!0},p:br,i(l){xe||(Pt(C.$$.fragment,l),Pt(R.$$.fragment,l),Pt(P.$$.fragment,l),xe=!0)},o(l){kt(C.$$.fragment,l),kt(R.$$.fragment,l),kt(P.$$.fragment,l),xe=!1},d(l){t(_),l&&t(be),l&&t(g),Wt(C),l&&t(ye),l&&t(y),l&&t(Se),l&&t(k),l&&t(Te),l&&t(h),Wt(R),l&&t(we),l&&t(f),Wt(P)}}}const wr={local:"accelerate.state.AcceleratorState",title:"Stateful Classes"};function xr(zt){return yr(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Lr extends vr{constructor(_){super();_r(this,_,xr,Tr,gr,{})}}export{Lr as default,wr as metadata};
