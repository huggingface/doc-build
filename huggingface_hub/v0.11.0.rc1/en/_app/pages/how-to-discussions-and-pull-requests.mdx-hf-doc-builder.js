import{S as tl,i as il,s as ll,e as l,k as h,w as k,t,M as nl,c as n,d as a,m as p,a as r,x as $,h as i,b as o,G as s,g as u,y as P,L as rl,q as H,o as R,B as x,v as ol}from"../chunks/vendor-hf-doc-builder.js";import{I as ms}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as vs}from"../chunks/CodeBlock-hf-doc-builder.js";function cl(Kt){let T,bs,I,O,Be,K,Zs,ze,ea,ws,w,sa,Ge,aa,ta,Q,ia,la,Es,C,W,Je,X,na,Ke,ra,qs,V,oa,Qe,ca,ua,As,Z,ys,b,Xe,ha,pa,ee,fa,da,ue,_a,ga,js,se,Ds,m,ma,he,va,ba,pe,wa,Ea,fe,qa,Aa,ks,ae,$s,g,de,ya,ja,_e,Da,ka,ge,$a,Pa,Ze,Ha,Ra,Ps,E,xa,es,Ta,Ia,ss,Ca,Sa,Hs,S,U,as,te,La,ts,Ma,Rs,q,Na,me,Oa,Wa,ie,Va,Ua,xs,f,Fa,ve,Ya,Ba,is,za,Ga,ls,Ja,Ka,be,Qa,Xa,Ts,d,ns,we,Za,et,rs,Ee,st,at,os,qe,tt,it,cs,Ae,lt,nt,us,ye,rt,Is,le,Cs,v,ot,je,ct,ut,De,ht,pt,hs,ft,dt,Ss,ne,Ls,F,_t,ke,gt,mt,Ms,_,$e,Pe,vt,bt,wt,He,Re,Et,qt,At,xe,Te,yt,jt,Dt,Ie,Ce,kt,$t,Pt,Se,Le,Ht,Rt,Ns,Y,xt,Me,Tt,It,Os,L,B,ps,re,Ct,fs,St,Ws,Ne,ds,Lt,Vs,M,z,_s,oe,Mt,gs,Nt,Us,A,Ot,Oe,Wt,Vt,We,Ut,Ft,Fs;return K=new ms({}),X=new ms({}),Z=new vs({props:{code:`from huggingface_hub import get_repo_discussions
for discussion in get_repo_discussions(repo_id="bigscience/bloom-1b3"):
    print(f"{discussion.num} - {discussion.title}, pr: {discussion.is_pull_request}")
`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> discussion <span class="hljs-keyword">in</span> get_repo_discussions(repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">{discussion.num}</span> - <span class="hljs-subst">{discussion.title}</span>, pr: <span class="hljs-subst">{discussion.is_pull_request}</span>&quot;</span>)

<span class="hljs-comment"># 11 - Add Flax weights, pr: True</span>
<span class="hljs-comment"># 10 - Update README.md, pr: True</span>
<span class="hljs-comment"># 9 - Training languages in the model card, pr: True</span>
<span class="hljs-comment"># 8 - Update tokenizer_config.json, pr: True</span>
<span class="hljs-comment"># 7 - Slurm training script, pr: False</span>
[...]`}}),se=new vs({props:{code:`from huggingface_hub import get_repo_discussions
discussions_list = list(get_repo_discussions(repo_id="bert-base-uncased"))`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions
<span class="hljs-meta">&gt;&gt;&gt; </span>discussions_list = <span class="hljs-built_in">list</span>(get_repo_discussions(repo_id=<span class="hljs-string">&quot;bert-base-uncased&quot;</span>))`}}),ae=new vs({props:{code:`from huggingface_hub import get_discussion_details

get_discussion_details(
    repo_id="bigscience/bloom-1b3",
    discussion_num=2
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_discussion_details

<span class="hljs-meta">&gt;&gt;&gt; </span>get_discussion_details(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>,
<span class="hljs-meta">... </span>    discussion_num=<span class="hljs-number">2</span>
<span class="hljs-meta">... </span>)
DiscussionWithDetails(
    num=<span class="hljs-number">2</span>,
    author=<span class="hljs-string">&#x27;cakiki&#x27;</span>,
    title=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>,
    status=<span class="hljs-string">&#x27;open&#x27;</span>,
    is_pull_request=<span class="hljs-literal">True</span>,
    events=[
        DiscussionComment(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;comment&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, ...),
        DiscussionCommit(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;commit&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, summary=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>, oid=<span class="hljs-string">&#x27;1256f9d9a33fa8887e1c1bf0e09b4713da96773a&#x27;</span>, ...),
    ],
    conflicting_files=[],
    target_branch=<span class="hljs-string">&#x27;refs/heads/main&#x27;</span>,
    merge_commit_oid=<span class="hljs-literal">None</span>,
    diff=<span class="hljs-string">&#x27;diff --git a/README.md b/README.md\\nindex a6ae3b9294edf8d0eda0d67c7780a10241242a7e..3a1814f212bc3f0d3cc8f74bdbd316de4ae7b9e3 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -132,7 +132,7 [...]&#x27;</span>,
)`}}),te=new ms({}),le=new vs({props:{code:`from huggingface_hub import metadata_update

metadata_update(
    repo_id="username/repo_name",
    metadata={"tags": ["computer-vision", "awesome-model"]},
    create_pr=True,
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> metadata_update

<span class="hljs-meta">&gt;&gt;&gt; </span>metadata_update(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo_name&quot;</span>,
<span class="hljs-meta">... </span>    metadata={<span class="hljs-string">&quot;tags&quot;</span>: [<span class="hljs-string">&quot;computer-vision&quot;</span>, <span class="hljs-string">&quot;awesome-model&quot;</span>]},
<span class="hljs-meta">... </span>    create_pr=<span class="hljs-literal">True</span>,
<span class="hljs-meta">... </span>)`}}),ne=new vs({props:{code:`from huggingface_hub import create_discussion, create_pull_request

create_discussion(
    repo_id="username/repo-name",
    title="Hi from the huggingface_hub library!",
    token="<insert your access token here>",
)

create_pull_request(
    repo_id="username/repo-name",
    title="Hi from the huggingface_hub library!",
    token="<insert your access token here>",
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_discussion, create_pull_request

<span class="hljs-meta">&gt;&gt;&gt; </span>create_discussion(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo-name&quot;</span>,
<span class="hljs-meta">... </span>    title=<span class="hljs-string">&quot;Hi from the huggingface_hub library!&quot;</span>,
<span class="hljs-meta">... </span>    token=<span class="hljs-string">&quot;&lt;insert your access token here&gt;&quot;</span>,
<span class="hljs-meta">... </span>)
DiscussionWithDetails(...)

<span class="hljs-meta">&gt;&gt;&gt; </span>create_pull_request(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo-name&quot;</span>,
<span class="hljs-meta">... </span>    title=<span class="hljs-string">&quot;Hi from the huggingface_hub library!&quot;</span>,
<span class="hljs-meta">... </span>    token=<span class="hljs-string">&quot;&lt;insert your access token here&gt;&quot;</span>,
<span class="hljs-meta">... </span>)
DiscussionWithDetails(..., is_pull_request=<span class="hljs-literal">True</span>)`}}),re=new ms({}),oe=new ms({}),{c(){T=l("meta"),bs=h(),I=l("h1"),O=l("a"),Be=l("span"),k(K.$$.fragment),Zs=h(),ze=l("span"),ea=t("Interact with Discussions and Pull Requests"),ws=h(),w=l("p"),sa=t("The "),Ge=l("code"),aa=t("huggingface_hub"),ta=t(` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),Q=l("a"),ia=t("the dedicated documentation page"),la=t(`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),Es=h(),C=l("h2"),W=l("a"),Je=l("span"),k(X.$$.fragment),na=h(),Ke=l("span"),ra=t("Retrieve Discussions and Pull Requests from the Hub"),qs=h(),V=l("p"),oa=t("The "),Qe=l("code"),ca=t("HfApi"),ua=t(" class allows you to retrieve Discussions and Pull Requests on a given repo:"),As=h(),k(Z.$$.fragment),ys=h(),b=l("p"),Xe=l("code"),ha=t("HfApi.get_repo_discussions"),pa=t(" returns a "),ee=l("a"),fa=t("generator"),da=t(` that yields
`),ue=l("a"),_a=t("Discussion"),ga=t(" objects. To get all the Discussions in a single list, run:"),js=h(),k(se.$$.fragment),Ds=h(),m=l("p"),ma=t("The "),he=l("a"),va=t("Discussion"),ba=t(" object returned by "),pe=l("a"),wa=t("HfApi.get_repo_discussions()"),Ea=t(` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),fe=l("a"),qa=t("HfApi.get_discussion_details()"),Aa=t(":"),ks=h(),k(ae.$$.fragment),$s=h(),g=l("p"),de=l("a"),ya=t("HfApi.get_discussion_details()"),ja=t(" returns a "),_e=l("a"),Da=t("DiscussionWithDetails"),ka=t(" object, which is a subclass of "),ge=l("a"),$a=t("Discussion"),Pa=t(`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the Discussion via `),Ze=l("code"),Ha=t("DiscussionWithDetails.events"),Ra=t("."),Ps=h(),E=l("p"),xa=t("In case of a Pull Request, you can retrieve the raw git diff with "),es=l("code"),Ta=t("DiscussionWithDetails.diff"),Ia=t(`. All the commits of the
Pull Request are listed in `),ss=l("code"),Ca=t("DiscussionWithDetails.events"),Sa=t("."),Hs=h(),S=l("h2"),U=l("a"),as=l("span"),k(te.$$.fragment),La=h(),ts=l("span"),Ma=t("Create and edit a Discussion or Pull Request programmatically"),Rs=h(),q=l("p"),Na=t("The "),me=l("a"),Oa=t("HfApi"),Wa=t(` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),ie=l("a"),Va=t("access token"),Ua=t(` to create and edit Discussions
or Pull Requests.`),xs=h(),f=l("p"),Fa=t("The simplest way to propose changes on a repo on the Hub is via the "),ve=l("a"),Ya=t("create_commit()"),Ba=t(` API: just
set the `),is=l("code"),za=t("create_pr"),Ga=t(" parameter to "),ls=l("code"),Ja=t("True"),Ka=t(". This parameter is also available on other methods that wrap "),be=l("a"),Qa=t("create_commit()"),Xa=t(":"),Ts=h(),d=l("ul"),ns=l("li"),we=l("a"),Za=t("upload_file()"),et=h(),rs=l("li"),Ee=l("a"),st=t("upload_folder()"),at=h(),os=l("li"),qe=l("a"),tt=t("delete_file()"),it=h(),cs=l("li"),Ae=l("a"),lt=t("delete_folder()"),nt=h(),us=l("li"),ye=l("a"),rt=t("metadata_update()"),Is=h(),k(le.$$.fragment),Cs=h(),v=l("p"),ot=t("You can also use "),je=l("a"),ct=t("HfApi.create_discussion()"),ut=t(" (respectively "),De=l("a"),ht=t("HfApi.create_pull_request()"),pt=t(`) to create a Discussion (respectively a Pull Request) on a repo.
Opening a Pull Request this way can be useful if you need to work on changes locally. Pull Requests opened this way will be in `),hs=l("code"),ft=t('"draft"'),dt=t(" mode."),Ss=h(),k(ne.$$.fragment),Ls=h(),F=l("p"),_t=t("Managing Pull Requests and Discussions can be done entirely with the "),ke=l("a"),gt=t("HfApi"),mt=t(" class. For example:"),Ms=h(),_=l("ul"),$e=l("li"),Pe=l("a"),vt=t("comment_discussion()"),bt=t(" to add comments"),wt=h(),He=l("li"),Re=l("a"),Et=t("edit_discussion_comment()"),qt=t(" to edit comments"),At=h(),xe=l("li"),Te=l("a"),yt=t("rename_discussion()"),jt=t(" to rename a Discussion or Pull Request"),Dt=h(),Ie=l("li"),Ce=l("a"),kt=t("change_discussion_status()"),$t=t(" to open or close a Discussion / Pull Request"),Pt=h(),Se=l("li"),Le=l("a"),Ht=t("merge_pull_request()"),Rt=t(" to merge a Pull Request"),Ns=h(),Y=l("p"),xt=t("Visit the "),Me=l("a"),Tt=t("HfApi"),It=t(" documentation page for an exhaustive reference of all available methods."),Os=h(),L=l("h2"),B=l("a"),ps=l("span"),k(re.$$.fragment),Ct=h(),fs=l("span"),St=t("Push changes to a Pull Request"),Ws=h(),Ne=l("p"),ds=l("em"),Lt=t("Coming soon !"),Vs=h(),M=l("h2"),z=l("a"),_s=l("span"),k(oe.$$.fragment),Mt=h(),gs=l("span"),Nt=t("See also"),Us=h(),A=l("p"),Ot=t("For a more detailed reference, visit the "),Oe=l("a"),Wt=t("community"),Vt=t(" and the "),We=l("a"),Ut=t("hf_api"),Ft=t(" documentation page."),this.h()},l(e){const c=nl('[data-svelte="svelte-1phssyn"]',document.head);T=n(c,"META",{name:!0,content:!0}),c.forEach(a),bs=p(e),I=n(e,"H1",{class:!0});var Ys=r(I);O=n(Ys,"A",{id:!0,class:!0,href:!0});var Qt=r(O);Be=n(Qt,"SPAN",{});var Xt=r(Be);$(K.$$.fragment,Xt),Xt.forEach(a),Qt.forEach(a),Zs=p(Ys),ze=n(Ys,"SPAN",{});var Zt=r(ze);ea=i(Zt,"Interact with Discussions and Pull Requests"),Zt.forEach(a),Ys.forEach(a),ws=p(e),w=n(e,"P",{});var Ve=r(w);sa=i(Ve,"The "),Ge=n(Ve,"CODE",{});var ei=r(Ge);aa=i(ei,"huggingface_hub"),ei.forEach(a),ta=i(Ve,` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),Q=n(Ve,"A",{href:!0,rel:!0});var si=r(Q);ia=i(si,"the dedicated documentation page"),si.forEach(a),la=i(Ve,`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),Ve.forEach(a),Es=p(e),C=n(e,"H2",{class:!0});var Bs=r(C);W=n(Bs,"A",{id:!0,class:!0,href:!0});var ai=r(W);Je=n(ai,"SPAN",{});var ti=r(Je);$(X.$$.fragment,ti),ti.forEach(a),ai.forEach(a),na=p(Bs),Ke=n(Bs,"SPAN",{});var ii=r(Ke);ra=i(ii,"Retrieve Discussions and Pull Requests from the Hub"),ii.forEach(a),Bs.forEach(a),qs=p(e),V=n(e,"P",{});var zs=r(V);oa=i(zs,"The "),Qe=n(zs,"CODE",{});var li=r(Qe);ca=i(li,"HfApi"),li.forEach(a),ua=i(zs," class allows you to retrieve Discussions and Pull Requests on a given repo:"),zs.forEach(a),As=p(e),$(Z.$$.fragment,e),ys=p(e),b=n(e,"P",{});var ce=r(b);Xe=n(ce,"CODE",{});var ni=r(Xe);ha=i(ni,"HfApi.get_repo_discussions"),ni.forEach(a),pa=i(ce," returns a "),ee=n(ce,"A",{href:!0,rel:!0});var ri=r(ee);fa=i(ri,"generator"),ri.forEach(a),da=i(ce,` that yields
`),ue=n(ce,"A",{href:!0});var oi=r(ue);_a=i(oi,"Discussion"),oi.forEach(a),ga=i(ce," objects. To get all the Discussions in a single list, run:"),ce.forEach(a),js=p(e),$(se.$$.fragment,e),Ds=p(e),m=n(e,"P",{});var G=r(m);ma=i(G,"The "),he=n(G,"A",{href:!0});var ci=r(he);va=i(ci,"Discussion"),ci.forEach(a),ba=i(G," object returned by "),pe=n(G,"A",{href:!0});var ui=r(pe);wa=i(ui,"HfApi.get_repo_discussions()"),ui.forEach(a),Ea=i(G,` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),fe=n(G,"A",{href:!0});var hi=r(fe);qa=i(hi,"HfApi.get_discussion_details()"),hi.forEach(a),Aa=i(G,":"),G.forEach(a),ks=p(e),$(ae.$$.fragment,e),$s=p(e),g=n(e,"P",{});var N=r(g);de=n(N,"A",{href:!0});var pi=r(de);ya=i(pi,"HfApi.get_discussion_details()"),pi.forEach(a),ja=i(N," returns a "),_e=n(N,"A",{href:!0});var fi=r(_e);Da=i(fi,"DiscussionWithDetails"),fi.forEach(a),ka=i(N," object, which is a subclass of "),ge=n(N,"A",{href:!0});var di=r(ge);$a=i(di,"Discussion"),di.forEach(a),Pa=i(N,`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the Discussion via `),Ze=n(N,"CODE",{});var _i=r(Ze);Ha=i(_i,"DiscussionWithDetails.events"),_i.forEach(a),Ra=i(N,"."),N.forEach(a),Ps=p(e),E=n(e,"P",{});var Ue=r(E);xa=i(Ue,"In case of a Pull Request, you can retrieve the raw git diff with "),es=n(Ue,"CODE",{});var gi=r(es);Ta=i(gi,"DiscussionWithDetails.diff"),gi.forEach(a),Ia=i(Ue,`. All the commits of the
Pull Request are listed in `),ss=n(Ue,"CODE",{});var mi=r(ss);Ca=i(mi,"DiscussionWithDetails.events"),mi.forEach(a),Sa=i(Ue,"."),Ue.forEach(a),Hs=p(e),S=n(e,"H2",{class:!0});var Gs=r(S);U=n(Gs,"A",{id:!0,class:!0,href:!0});var vi=r(U);as=n(vi,"SPAN",{});var bi=r(as);$(te.$$.fragment,bi),bi.forEach(a),vi.forEach(a),La=p(Gs),ts=n(Gs,"SPAN",{});var wi=r(ts);Ma=i(wi,"Create and edit a Discussion or Pull Request programmatically"),wi.forEach(a),Gs.forEach(a),Rs=p(e),q=n(e,"P",{});var Fe=r(q);Na=i(Fe,"The "),me=n(Fe,"A",{href:!0});var Ei=r(me);Oa=i(Ei,"HfApi"),Ei.forEach(a),Wa=i(Fe,` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),ie=n(Fe,"A",{href:!0,rel:!0});var qi=r(ie);Va=i(qi,"access token"),qi.forEach(a),Ua=i(Fe,` to create and edit Discussions
or Pull Requests.`),Fe.forEach(a),xs=p(e),f=n(e,"P",{});var y=r(f);Fa=i(y,"The simplest way to propose changes on a repo on the Hub is via the "),ve=n(y,"A",{href:!0});var Ai=r(ve);Ya=i(Ai,"create_commit()"),Ai.forEach(a),Ba=i(y,` API: just
set the `),is=n(y,"CODE",{});var yi=r(is);za=i(yi,"create_pr"),yi.forEach(a),Ga=i(y," parameter to "),ls=n(y,"CODE",{});var ji=r(ls);Ja=i(ji,"True"),ji.forEach(a),Ka=i(y,". This parameter is also available on other methods that wrap "),be=n(y,"A",{href:!0});var Di=r(be);Qa=i(Di,"create_commit()"),Di.forEach(a),Xa=i(y,":"),y.forEach(a),Ts=p(e),d=n(e,"UL",{});var j=r(d);ns=n(j,"LI",{});var ki=r(ns);we=n(ki,"A",{href:!0});var $i=r(we);Za=i($i,"upload_file()"),$i.forEach(a),ki.forEach(a),et=p(j),rs=n(j,"LI",{});var Pi=r(rs);Ee=n(Pi,"A",{href:!0});var Hi=r(Ee);st=i(Hi,"upload_folder()"),Hi.forEach(a),Pi.forEach(a),at=p(j),os=n(j,"LI",{});var Ri=r(os);qe=n(Ri,"A",{href:!0});var xi=r(qe);tt=i(xi,"delete_file()"),xi.forEach(a),Ri.forEach(a),it=p(j),cs=n(j,"LI",{});var Ti=r(cs);Ae=n(Ti,"A",{href:!0});var Ii=r(Ae);lt=i(Ii,"delete_folder()"),Ii.forEach(a),Ti.forEach(a),nt=p(j),us=n(j,"LI",{});var Ci=r(us);ye=n(Ci,"A",{href:!0});var Si=r(ye);rt=i(Si,"metadata_update()"),Si.forEach(a),Ci.forEach(a),j.forEach(a),Is=p(e),$(le.$$.fragment,e),Cs=p(e),v=n(e,"P",{});var J=r(v);ot=i(J,"You can also use "),je=n(J,"A",{href:!0});var Li=r(je);ct=i(Li,"HfApi.create_discussion()"),Li.forEach(a),ut=i(J," (respectively "),De=n(J,"A",{href:!0});var Mi=r(De);ht=i(Mi,"HfApi.create_pull_request()"),Mi.forEach(a),pt=i(J,`) to create a Discussion (respectively a Pull Request) on a repo.
Opening a Pull Request this way can be useful if you need to work on changes locally. Pull Requests opened this way will be in `),hs=n(J,"CODE",{});var Ni=r(hs);ft=i(Ni,'"draft"'),Ni.forEach(a),dt=i(J," mode."),J.forEach(a),Ss=p(e),$(ne.$$.fragment,e),Ls=p(e),F=n(e,"P",{});var Js=r(F);_t=i(Js,"Managing Pull Requests and Discussions can be done entirely with the "),ke=n(Js,"A",{href:!0});var Oi=r(ke);gt=i(Oi,"HfApi"),Oi.forEach(a),mt=i(Js," class. For example:"),Js.forEach(a),Ms=p(e),_=n(e,"UL",{});var D=r(_);$e=n(D,"LI",{});var Yt=r($e);Pe=n(Yt,"A",{href:!0});var Wi=r(Pe);vt=i(Wi,"comment_discussion()"),Wi.forEach(a),bt=i(Yt," to add comments"),Yt.forEach(a),wt=p(D),He=n(D,"LI",{});var Bt=r(He);Re=n(Bt,"A",{href:!0});var Vi=r(Re);Et=i(Vi,"edit_discussion_comment()"),Vi.forEach(a),qt=i(Bt," to edit comments"),Bt.forEach(a),At=p(D),xe=n(D,"LI",{});var zt=r(xe);Te=n(zt,"A",{href:!0});var Ui=r(Te);yt=i(Ui,"rename_discussion()"),Ui.forEach(a),jt=i(zt," to rename a Discussion or Pull Request"),zt.forEach(a),Dt=p(D),Ie=n(D,"LI",{});var Gt=r(Ie);Ce=n(Gt,"A",{href:!0});var Fi=r(Ce);kt=i(Fi,"change_discussion_status()"),Fi.forEach(a),$t=i(Gt," to open or close a Discussion / Pull Request"),Gt.forEach(a),Pt=p(D),Se=n(D,"LI",{});var Jt=r(Se);Le=n(Jt,"A",{href:!0});var Yi=r(Le);Ht=i(Yi,"merge_pull_request()"),Yi.forEach(a),Rt=i(Jt," to merge a Pull Request"),Jt.forEach(a),D.forEach(a),Ns=p(e),Y=n(e,"P",{});var Ks=r(Y);xt=i(Ks,"Visit the "),Me=n(Ks,"A",{href:!0});var Bi=r(Me);Tt=i(Bi,"HfApi"),Bi.forEach(a),It=i(Ks," documentation page for an exhaustive reference of all available methods."),Ks.forEach(a),Os=p(e),L=n(e,"H2",{class:!0});var Qs=r(L);B=n(Qs,"A",{id:!0,class:!0,href:!0});var zi=r(B);ps=n(zi,"SPAN",{});var Gi=r(ps);$(re.$$.fragment,Gi),Gi.forEach(a),zi.forEach(a),Ct=p(Qs),fs=n(Qs,"SPAN",{});var Ji=r(fs);St=i(Ji,"Push changes to a Pull Request"),Ji.forEach(a),Qs.forEach(a),Ws=p(e),Ne=n(e,"P",{});var Ki=r(Ne);ds=n(Ki,"EM",{});var Qi=r(ds);Lt=i(Qi,"Coming soon !"),Qi.forEach(a),Ki.forEach(a),Vs=p(e),M=n(e,"H2",{class:!0});var Xs=r(M);z=n(Xs,"A",{id:!0,class:!0,href:!0});var Xi=r(z);_s=n(Xi,"SPAN",{});var Zi=r(_s);$(oe.$$.fragment,Zi),Zi.forEach(a),Xi.forEach(a),Mt=p(Xs),gs=n(Xs,"SPAN",{});var el=r(gs);Nt=i(el,"See also"),el.forEach(a),Xs.forEach(a),Us=p(e),A=n(e,"P",{});var Ye=r(A);Ot=i(Ye,"For a more detailed reference, visit the "),Oe=n(Ye,"A",{href:!0});var sl=r(Oe);Wt=i(sl,"community"),sl.forEach(a),Vt=i(Ye," and the "),We=n(Ye,"A",{href:!0});var al=r(We);Ut=i(al,"hf_api"),al.forEach(a),Ft=i(Ye," documentation page."),Ye.forEach(a),this.h()},h(){o(T,"name","hf:doc:metadata"),o(T,"content",JSON.stringify(ul)),o(O,"id","interact-with-discussions-and-pull-requests"),o(O,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(O,"href","#interact-with-discussions-and-pull-requests"),o(I,"class","relative group"),o(Q,"href","https://huggingface.co/docs/hub/repositories-pull-requests-discussions"),o(Q,"rel","nofollow"),o(W,"id","retrieve-discussions-and-pull-requests-from-the-hub"),o(W,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(W,"href","#retrieve-discussions-and-pull-requests-from-the-hub"),o(C,"class","relative group"),o(ee,"href","https://docs.python.org/3.7/howto/functional.html#generators"),o(ee,"rel","nofollow"),o(ue,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/community#huggingface_hub.Discussion"),o(he,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/community#huggingface_hub.Discussion"),o(pe,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.get_repo_discussions"),o(fe,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),o(de,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),o(_e,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/community#huggingface_hub.DiscussionWithDetails"),o(ge,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/community#huggingface_hub.Discussion"),o(U,"id","create-and-edit-a-discussion-or-pull-request-programmatically"),o(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(U,"href","#create-and-edit-a-discussion-or-pull-request-programmatically"),o(S,"class","relative group"),o(me,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi"),o(ie,"href","https://huggingface.co/docs/hub/security-tokens"),o(ie,"rel","nofollow"),o(ve,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit"),o(be,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit"),o(we,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.upload_file"),o(Ee,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.upload_folder"),o(qe,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.delete_file"),o(Ae,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.delete_folder"),o(ye,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/cards#huggingface_hub.metadata_update"),o(je,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.create_discussion"),o(De,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.create_pull_request"),o(ke,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi"),o(Pe,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.comment_discussion"),o(Re,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.edit_discussion_comment"),o(Te,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.rename_discussion"),o(Ce,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.change_discussion_status"),o(Le,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi.merge_pull_request"),o(Me,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/hf_api#huggingface_hub.HfApi"),o(B,"id","push-changes-to-a-pull-request"),o(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(B,"href","#push-changes-to-a-pull-request"),o(L,"class","relative group"),o(z,"id","see-also"),o(z,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(z,"href","#see-also"),o(M,"class","relative group"),o(Oe,"href","/source/package_reference/community"),o(We,"href","/source/package_reference/hf_api")},m(e,c){s(document.head,T),u(e,bs,c),u(e,I,c),s(I,O),s(O,Be),P(K,Be,null),s(I,Zs),s(I,ze),s(ze,ea),u(e,ws,c),u(e,w,c),s(w,sa),s(w,Ge),s(Ge,aa),s(w,ta),s(w,Q),s(Q,ia),s(w,la),u(e,Es,c),u(e,C,c),s(C,W),s(W,Je),P(X,Je,null),s(C,na),s(C,Ke),s(Ke,ra),u(e,qs,c),u(e,V,c),s(V,oa),s(V,Qe),s(Qe,ca),s(V,ua),u(e,As,c),P(Z,e,c),u(e,ys,c),u(e,b,c),s(b,Xe),s(Xe,ha),s(b,pa),s(b,ee),s(ee,fa),s(b,da),s(b,ue),s(ue,_a),s(b,ga),u(e,js,c),P(se,e,c),u(e,Ds,c),u(e,m,c),s(m,ma),s(m,he),s(he,va),s(m,ba),s(m,pe),s(pe,wa),s(m,Ea),s(m,fe),s(fe,qa),s(m,Aa),u(e,ks,c),P(ae,e,c),u(e,$s,c),u(e,g,c),s(g,de),s(de,ya),s(g,ja),s(g,_e),s(_e,Da),s(g,ka),s(g,ge),s(ge,$a),s(g,Pa),s(g,Ze),s(Ze,Ha),s(g,Ra),u(e,Ps,c),u(e,E,c),s(E,xa),s(E,es),s(es,Ta),s(E,Ia),s(E,ss),s(ss,Ca),s(E,Sa),u(e,Hs,c),u(e,S,c),s(S,U),s(U,as),P(te,as,null),s(S,La),s(S,ts),s(ts,Ma),u(e,Rs,c),u(e,q,c),s(q,Na),s(q,me),s(me,Oa),s(q,Wa),s(q,ie),s(ie,Va),s(q,Ua),u(e,xs,c),u(e,f,c),s(f,Fa),s(f,ve),s(ve,Ya),s(f,Ba),s(f,is),s(is,za),s(f,Ga),s(f,ls),s(ls,Ja),s(f,Ka),s(f,be),s(be,Qa),s(f,Xa),u(e,Ts,c),u(e,d,c),s(d,ns),s(ns,we),s(we,Za),s(d,et),s(d,rs),s(rs,Ee),s(Ee,st),s(d,at),s(d,os),s(os,qe),s(qe,tt),s(d,it),s(d,cs),s(cs,Ae),s(Ae,lt),s(d,nt),s(d,us),s(us,ye),s(ye,rt),u(e,Is,c),P(le,e,c),u(e,Cs,c),u(e,v,c),s(v,ot),s(v,je),s(je,ct),s(v,ut),s(v,De),s(De,ht),s(v,pt),s(v,hs),s(hs,ft),s(v,dt),u(e,Ss,c),P(ne,e,c),u(e,Ls,c),u(e,F,c),s(F,_t),s(F,ke),s(ke,gt),s(F,mt),u(e,Ms,c),u(e,_,c),s(_,$e),s($e,Pe),s(Pe,vt),s($e,bt),s(_,wt),s(_,He),s(He,Re),s(Re,Et),s(He,qt),s(_,At),s(_,xe),s(xe,Te),s(Te,yt),s(xe,jt),s(_,Dt),s(_,Ie),s(Ie,Ce),s(Ce,kt),s(Ie,$t),s(_,Pt),s(_,Se),s(Se,Le),s(Le,Ht),s(Se,Rt),u(e,Ns,c),u(e,Y,c),s(Y,xt),s(Y,Me),s(Me,Tt),s(Y,It),u(e,Os,c),u(e,L,c),s(L,B),s(B,ps),P(re,ps,null),s(L,Ct),s(L,fs),s(fs,St),u(e,Ws,c),u(e,Ne,c),s(Ne,ds),s(ds,Lt),u(e,Vs,c),u(e,M,c),s(M,z),s(z,_s),P(oe,_s,null),s(M,Mt),s(M,gs),s(gs,Nt),u(e,Us,c),u(e,A,c),s(A,Ot),s(A,Oe),s(Oe,Wt),s(A,Vt),s(A,We),s(We,Ut),s(A,Ft),Fs=!0},p:rl,i(e){Fs||(H(K.$$.fragment,e),H(X.$$.fragment,e),H(Z.$$.fragment,e),H(se.$$.fragment,e),H(ae.$$.fragment,e),H(te.$$.fragment,e),H(le.$$.fragment,e),H(ne.$$.fragment,e),H(re.$$.fragment,e),H(oe.$$.fragment,e),Fs=!0)},o(e){R(K.$$.fragment,e),R(X.$$.fragment,e),R(Z.$$.fragment,e),R(se.$$.fragment,e),R(ae.$$.fragment,e),R(te.$$.fragment,e),R(le.$$.fragment,e),R(ne.$$.fragment,e),R(re.$$.fragment,e),R(oe.$$.fragment,e),Fs=!1},d(e){a(T),e&&a(bs),e&&a(I),x(K),e&&a(ws),e&&a(w),e&&a(Es),e&&a(C),x(X),e&&a(qs),e&&a(V),e&&a(As),x(Z,e),e&&a(ys),e&&a(b),e&&a(js),x(se,e),e&&a(Ds),e&&a(m),e&&a(ks),x(ae,e),e&&a($s),e&&a(g),e&&a(Ps),e&&a(E),e&&a(Hs),e&&a(S),x(te),e&&a(Rs),e&&a(q),e&&a(xs),e&&a(f),e&&a(Ts),e&&a(d),e&&a(Is),x(le,e),e&&a(Cs),e&&a(v),e&&a(Ss),x(ne,e),e&&a(Ls),e&&a(F),e&&a(Ms),e&&a(_),e&&a(Ns),e&&a(Y),e&&a(Os),e&&a(L),x(re),e&&a(Ws),e&&a(Ne),e&&a(Vs),e&&a(M),x(oe),e&&a(Us),e&&a(A)}}}const ul={local:"interact-with-discussions-and-pull-requests",sections:[{local:"retrieve-discussions-and-pull-requests-from-the-hub",title:"Retrieve Discussions and Pull Requests from the Hub"},{local:"create-and-edit-a-discussion-or-pull-request-programmatically",title:"Create and edit a Discussion or Pull Request programmatically"},{local:"push-changes-to-a-pull-request",title:"Push changes to a Pull Request"},{local:"see-also",title:"See also"}],title:"Interact with Discussions and Pull Requests "};function hl(Kt){return ol(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class _l extends tl{constructor(T){super();il(this,T,hl,cl,ll,{})}}export{_l as default,ul as metadata};
