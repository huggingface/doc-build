import{S as mv,i as vv,s as bv,e as r,k as h,w as b,t as n,M as Ev,c as a,d as o,m as u,a as s,x as E,h as l,b as p,G as e,g as c,y as $,q as y,o as w,B as k,v as $v,L as Ze}from"../../chunks/vendor-hf-doc-builder.js";import{T as _v}from"../../chunks/Tip-hf-doc-builder.js";import{D as O}from"../../chunks/Docstring-hf-doc-builder.js";import{C as he}from"../../chunks/CodeBlock-hf-doc-builder.js";import{I as S}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{E as Ye}from"../../chunks/ExampleCodeBlock-hf-doc-builder.js";function yv(j){let f,H,v,d,m,i,_,ue,Z,ve,M,A,Q,ee,Pe,D,X,ge,Te,re,q,ae,te,ce,Ne,K,J,pe,be;return{c(){f=r("p"),H=n("HuggingFace Hub has following logging levels:"),v=h(),d=r("ul"),m=r("li"),i=r("code"),_=n("huggingface_hub.logging.CRITICAL"),ue=n(", "),Z=r("code"),ve=n("huggingface_hub.logging.FATAL"),M=h(),A=r("li"),Q=r("code"),ee=n("huggingface_hub.logging.ERROR"),Pe=h(),D=r("li"),X=r("code"),ge=n("huggingface_hub.logging.WARNING"),Te=n(", "),re=r("code"),q=n("huggingface_hub.logging.WARN"),ae=h(),te=r("li"),ce=r("code"),Ne=n("huggingface_hub.logging.INFO"),K=h(),J=r("li"),pe=r("code"),be=n("huggingface_hub.logging.DEBUG")},l(T){f=a(T,"P",{});var V=s(f);H=l(V,"HuggingFace Hub has following logging levels:"),V.forEach(o),v=u(T),d=a(T,"UL",{});var P=s(d);m=a(P,"LI",{});var Ee=s(m);i=a(Ee,"CODE",{});var De=s(i);_=l(De,"huggingface_hub.logging.CRITICAL"),De.forEach(o),ue=l(Ee,", "),Z=a(Ee,"CODE",{});var N=s(Z);ve=l(N,"huggingface_hub.logging.FATAL"),N.forEach(o),Ee.forEach(o),M=u(P),A=a(P,"LI",{});var se=s(A);Q=a(se,"CODE",{});var I=s(Q);ee=l(I,"huggingface_hub.logging.ERROR"),I.forEach(o),se.forEach(o),Pe=u(P),D=a(P,"LI",{});var Y=s(D);X=a(Y,"CODE",{});var Ue=s(X);ge=l(Ue,"huggingface_hub.logging.WARNING"),Ue.forEach(o),Te=l(Y,", "),re=a(Y,"CODE",{});var B=s(re);q=l(B,"huggingface_hub.logging.WARN"),B.forEach(o),Y.forEach(o),ae=u(P),te=a(P,"LI",{});var $e=s(te);ce=a($e,"CODE",{});var ye=s(ce);Ne=l(ye,"huggingface_hub.logging.INFO"),ye.forEach(o),$e.forEach(o),K=u(P),J=a(P,"LI",{});var Qe=s(J);pe=a(Qe,"CODE",{});var Ge=s(pe);be=l(Ge,"huggingface_hub.logging.DEBUG"),Ge.forEach(o),Qe.forEach(o),P.forEach(o)},m(T,V){c(T,f,V),e(f,H),c(T,v,V),c(T,d,V),e(d,m),e(m,i),e(i,_),e(m,ue),e(m,Z),e(Z,ve),e(d,M),e(d,A),e(A,Q),e(Q,ee),e(d,Pe),e(d,D),e(D,X),e(X,ge),e(D,Te),e(D,re),e(re,q),e(d,ae),e(d,te),e(te,ce),e(ce,Ne),e(d,K),e(d,J),e(J,pe),e(pe,be)},d(T){T&&o(f),T&&o(v),T&&o(d)}}}function wv(j){let f,H,v,d,m;return d=new he({props:{code:`from huggingface_hub import get_logger

logger = get_logger(__file__)
logger.set_verbosity_info()`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_logger

<span class="hljs-meta">&gt;&gt;&gt; </span>logger = get_logger(__file__)
<span class="hljs-meta">&gt;&gt;&gt; </span>logger.set_verbosity_info()`}}),{c(){f=r("p"),H=n("Example:"),v=h(),b(d.$$.fragment)},l(i){f=a(i,"P",{});var _=s(f);H=l(_,"Example:"),_.forEach(o),v=u(i),E(d.$$.fragment,i)},m(i,_){c(i,f,_),e(f,H),c(i,v,_),$(d,i,_),m=!0},p:Ze,i(i){m||(y(d.$$.fragment,i),m=!0)},o(i){w(d.$$.fragment,i),m=!1},d(i){i&&o(f),i&&o(v),k(d,i)}}}function kv(j){let f,H,v,d,m;return d=new he({props:{code:`    import requests
    from huggingface_hub.utils import hf_raise_for_status, HfHubHTTPError

    response = requests.post(...)
    try:
        hf_raise_for_status(response)
    except HfHubHTTPError as e:
        print(str(e)) # formatted message
        e.request_id, e.server_message # details returned by server

        # Complete the error message with additional information once it's raised
        e.append_to_message("
ate_commit\` expects the repository to exist.")
        raise`,highlighted:`    <span class="hljs-keyword">import</span> requests
    <span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> hf_raise_for_status, HfHubHTTPError

    response = requests.post(...)
    <span class="hljs-keyword">try</span>:
        hf_raise_for_status(response)
    <span class="hljs-keyword">except</span> HfHubHTTPError <span class="hljs-keyword">as</span> e:
        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(e)) <span class="hljs-comment"># formatted message</span>
        e.request_id, e.server_message <span class="hljs-comment"># details returned by server</span>

        <span class="hljs-comment"># Complete the error message with additional information once it&#x27;s raised</span>
        e.append_to_message(<span class="hljs-string">&quot;
ate_commit\` expects the repository to exist.&quot;</span>)
        <span class="hljs-keyword">raise</span>`}}),{c(){f=r("p"),H=n("Example:"),v=h(),b(d.$$.fragment)},l(i){f=a(i,"P",{});var _=s(f);H=l(_,"Example:"),_.forEach(o),v=u(i),E(d.$$.fragment,i)},m(i,_){c(i,f,_),e(f,H),c(i,v,_),$(d,i,_),m=!0},p:Ze,i(i){m||(y(d.$$.fragment,i),m=!0)},o(i){w(d.$$.fragment,i),m=!1},d(i){i&&o(f),i&&o(v),k(d,i)}}}function Hv(j){let f,H,v,d,m,i,_,ue,Z,ve,M,A,Q,ee,Pe,D,X,ge,Te,re,q,ae,te,ce,Ne,K,J,pe,be,T,V,P,Ee,De;return{c(){f=r("p"),H=n("Raises when the request has failed:"),v=h(),d=r("ul"),m=r("li"),i=r("a"),_=n("RepositoryNotFoundError"),ue=n(`
If the repository to download from cannot be found. This may be because it
doesn\u2019t exist, because `),Z=r("code"),ve=n("repo_type"),M=n(` is not set correctly, or because the repo
is `),A=r("code"),Q=n("private"),ee=n(" and you do not have access."),Pe=h(),D=r("li"),X=r("a"),ge=n("RevisionNotFoundError"),Te=n(`
If the repository exists but the revision couldn\u2019t be find.`),re=h(),q=r("li"),ae=r("a"),te=n("EntryNotFoundError"),ce=n(`
If the repository exists but the entry (e.g. the requested file) couldn\u2019t be
find.`),Ne=h(),K=r("li"),J=r("a"),pe=n("BadRequestError"),be=n(`
If request failed with a HTTP 400 BadRequest error.`),T=h(),V=r("li"),P=r("a"),Ee=n("HfHubHTTPError"),De=n(`
If request failed for a reason not listed above.`),this.h()},l(N){f=a(N,"P",{});var se=s(f);H=l(se,"Raises when the request has failed:"),se.forEach(o),v=u(N),d=a(N,"UL",{});var I=s(d);m=a(I,"LI",{});var Y=s(m);i=a(Y,"A",{href:!0});var Ue=s(i);_=l(Ue,"RepositoryNotFoundError"),Ue.forEach(o),ue=l(Y,`
If the repository to download from cannot be found. This may be because it
doesn\u2019t exist, because `),Z=a(Y,"CODE",{});var B=s(Z);ve=l(B,"repo_type"),B.forEach(o),M=l(Y,` is not set correctly, or because the repo
is `),A=a(Y,"CODE",{});var $e=s(A);Q=l($e,"private"),$e.forEach(o),ee=l(Y," and you do not have access."),Y.forEach(o),Pe=u(I),D=a(I,"LI",{});var ye=s(D);X=a(ye,"A",{href:!0});var Qe=s(X);ge=l(Qe,"RevisionNotFoundError"),Qe.forEach(o),Te=l(ye,`
If the repository exists but the revision couldn\u2019t be find.`),ye.forEach(o),re=u(I),q=a(I,"LI",{});var Ge=s(q);ae=a(Ge,"A",{href:!0});var Or=s(ae);te=l(Or,"EntryNotFoundError"),Or.forEach(o),ce=l(Ge,`
If the repository exists but the entry (e.g. the requested file) couldn\u2019t be
find.`),Ge.forEach(o),Ne=u(I),K=a(I,"LI",{});var Me=s(K);J=a(Me,"A",{href:!0});var Ft=s(J);pe=l(Ft,"BadRequestError"),Ft.forEach(o),be=l(Me,`
If request failed with a HTTP 400 BadRequest error.`),Me.forEach(o),T=u(I),V=a(I,"LI",{});var yo=s(V);P=a(yo,"A",{href:!0});var Ar=s(P);Ee=l(Ar,"HfHubHTTPError"),Ar.forEach(o),De=l(yo,`
If request failed for a reason not listed above.`),yo.forEach(o),I.forEach(o),this.h()},h(){p(i,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError"),p(X,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError"),p(ae,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/utilities#huggingface_hub.utils.EntryNotFoundError"),p(J,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/utilities#huggingface_hub.utils.BadRequestError"),p(P,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError")},m(N,se){c(N,f,se),e(f,H),c(N,v,se),c(N,d,se),e(d,m),e(m,i),e(i,_),e(m,ue),e(m,Z),e(Z,ve),e(m,M),e(m,A),e(A,Q),e(m,ee),e(d,Pe),e(d,D),e(D,X),e(X,ge),e(D,Te),e(d,re),e(d,q),e(q,ae),e(ae,te),e(q,ce),e(d,Ne),e(d,K),e(K,J),e(J,pe),e(K,be),e(d,T),e(d,V),e(V,P),e(P,Ee),e(V,De)},d(N){N&&o(f),N&&o(v),N&&o(d)}}}function jv(j){let f,H,v,d,m;return d=new he({props:{code:`    import requests
    from huggingface_hub.utils import hf_raise_for_status, HfHubHTTPError

    response = requests.post(...)
    try:
        hf_raise_for_status(response)
    except HfHubHTTPError as e:
        print(str(e)) # formatted message
        e.request_id, e.server_message # details returned by server

        # Complete the error message with additional information once it's raised
        e.append_to_message("
ate_commit\` expects the repository to exist.")
        raise`,highlighted:`    <span class="hljs-keyword">import</span> requests
    <span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> hf_raise_for_status, HfHubHTTPError

    response = requests.post(...)
    <span class="hljs-keyword">try</span>:
        hf_raise_for_status(response)
    <span class="hljs-keyword">except</span> HfHubHTTPError <span class="hljs-keyword">as</span> e:
        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(e)) <span class="hljs-comment"># formatted message</span>
        e.request_id, e.server_message <span class="hljs-comment"># details returned by server</span>

        <span class="hljs-comment"># Complete the error message with additional information once it&#x27;s raised</span>
        e.append_to_message(<span class="hljs-string">&quot;
ate_commit\` expects the repository to exist.&quot;</span>)
        <span class="hljs-keyword">raise</span>`}}),{c(){f=r("p"),H=n("Example:"),v=h(),b(d.$$.fragment)},l(i){f=a(i,"P",{});var _=s(f);H=l(_,"Example:"),_.forEach(o),v=u(i),E(d.$$.fragment,i)},m(i,_){c(i,f,_),e(f,H),c(i,v,_),$(d,i,_),m=!0},p:Ze,i(i){m||(y(d.$$.fragment,i),m=!0)},o(i){w(d.$$.fragment,i),m=!1},d(i){i&&o(f),i&&o(v),k(d,i)}}}function xv(j){let f,H,v,d,m;return d=new he({props:{code:`from huggingface_hub import model_info
model_info("<non_existent_repository>")
`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> model_info
<span class="hljs-meta">&gt;&gt;&gt; </span>model_info(<span class="hljs-string">&quot;&lt;non_existent_repository&gt;&quot;</span>)
(...)
huggingface_hub.utils._errors.RepositoryNotFoundError: <span class="hljs-number">401</span> Client Error. (Request ID: PvMw_VjBMjVdMz53WKIzP)

Repository Not Found <span class="hljs-keyword">for</span> url: https://huggingface.co/api/models/%3Cnon_existent_repository%3E.
Please make sure you specified the correct \`repo_id\` <span class="hljs-keyword">and</span> \`repo_type\`.
If the repo <span class="hljs-keyword">is</span> private, make sure you are authenticated.
Invalid username <span class="hljs-keyword">or</span> password.`}}),{c(){f=r("p"),H=n("Example:"),v=h(),b(d.$$.fragment)},l(i){f=a(i,"P",{});var _=s(f);H=l(_,"Example:"),_.forEach(o),v=u(i),E(d.$$.fragment,i)},m(i,_){c(i,f,_),e(f,H),c(i,v,_),$(d,i,_),m=!0},p:Ze,i(i){m||(y(d.$$.fragment,i),m=!0)},o(i){w(d.$$.fragment,i),m=!1},d(i){i&&o(f),i&&o(v),k(d,i)}}}function Pv(j){let f,H,v,d,m;return d=new he({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download('bert-base-cased', 'config.json', revision='<non-existent-revision>')
`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(<span class="hljs-string">&#x27;bert-base-cased&#x27;</span>, <span class="hljs-string">&#x27;config.json&#x27;</span>, revision=<span class="hljs-string">&#x27;&lt;non-existent-revision&gt;&#x27;</span>)
(...)
huggingface_hub.utils._errors.RevisionNotFoundError: <span class="hljs-number">404</span> Client Error. (Request ID: Mwhe_c3Kt650GcdKEFomX)

Revision Not Found <span class="hljs-keyword">for</span> url: https://huggingface.co/bert-base-cased/resolve/%3Cnon-existent-revision%3E/config.json.`}}),{c(){f=r("p"),H=n("Example:"),v=h(),b(d.$$.fragment)},l(i){f=a(i,"P",{});var _=s(f);H=l(_,"Example:"),_.forEach(o),v=u(i),E(d.$$.fragment,i)},m(i,_){c(i,f,_),e(f,H),c(i,v,_),$(d,i,_),m=!0},p:Ze,i(i){m||(y(d.$$.fragment,i),m=!0)},o(i){w(d.$$.fragment,i),m=!1},d(i){i&&o(f),i&&o(v),k(d,i)}}}function Tv(j){let f,H,v,d,m;return d=new he({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download('bert-base-cased', '<non-existent-file>')
`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(<span class="hljs-string">&#x27;bert-base-cased&#x27;</span>, <span class="hljs-string">&#x27;&lt;non-existent-file&gt;&#x27;</span>)
(...)
huggingface_hub.utils._errors.EntryNotFoundError: <span class="hljs-number">404</span> Client Error. (Request ID: 53pNl6M0MxsnG5Sw8JA6x)

Entry Not Found <span class="hljs-keyword">for</span> url: https://huggingface.co/bert-base-cased/resolve/main/%3Cnon-existent-file%3E.`}}),{c(){f=r("p"),H=n("Example:"),v=h(),b(d.$$.fragment)},l(i){f=a(i,"P",{});var _=s(f);H=l(_,"Example:"),_.forEach(o),v=u(i),E(d.$$.fragment,i)},m(i,_){c(i,f,_),e(f,H),c(i,v,_),$(d,i,_),m=!0},p:Ze,i(i){m||(y(d.$$.fragment,i),m=!0)},o(i){w(d.$$.fragment,i),m=!1},d(i){i&&o(f),i&&o(v),k(d,i)}}}function Nv(j){let f,H,v,d,m;return d=new he({props:{code:`resp = requests.post("hf.co/api/check", ...)
hf_raise_for_status(resp, endpoint_name="check")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>resp = requests.post(<span class="hljs-string">&quot;hf.co/api/check&quot;</span>, ...)
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_raise_for_status(resp, endpoint_name=<span class="hljs-string">&quot;check&quot;</span>)
huggingface_hub.utils._errors.BadRequestError: Bad request <span class="hljs-keyword">for</span> check endpoint: {details} (Request ID: XXX)`}}),{c(){f=r("p"),H=n("Example:"),v=h(),b(d.$$.fragment)},l(i){f=a(i,"P",{});var _=s(f);H=l(_,"Example:"),_.forEach(o),v=u(i),E(d.$$.fragment,i)},m(i,_){c(i,f,_),e(f,H),c(i,v,_),$(d,i,_),m=!0},p:Ze,i(i){m||(y(d.$$.fragment,i),m=!0)},o(i){w(d.$$.fragment,i),m=!1},d(i){i&&o(f),i&&o(v),k(d,i)}}}function Dv(j){let f,H,v,d,m;return d=new he({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download('bert-base-cased', '<non-cached-file>',  local_files_only=True)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(<span class="hljs-string">&#x27;bert-base-cased&#x27;</span>, <span class="hljs-string">&#x27;&lt;non-cached-file&gt;&#x27;</span>,  local_files_only=<span class="hljs-literal">True</span>)
(...)
huggingface_hub.utils._errors.LocalEntryNotFoundError: Cannot find the requested files <span class="hljs-keyword">in</span> the disk cache <span class="hljs-keyword">and</span> outgoing traffic has been disabled. To enable hf.co look-ups <span class="hljs-keyword">and</span> downloads online, <span class="hljs-built_in">set</span> <span class="hljs-string">&#x27;local_files_only&#x27;</span> to <span class="hljs-literal">False</span>.`}}),{c(){f=r("p"),H=n("Example:"),v=h(),b(d.$$.fragment)},l(i){f=a(i,"P",{});var _=s(f);H=l(_,"Example:"),_.forEach(o),v=u(i),E(d.$$.fragment,i)},m(i,_){c(i,f,_),e(f,H),c(i,v,_),$(d,i,_),m=!0},p:Ze,i(i){m||(y(d.$$.fragment,i),m=!0)},o(i){w(d.$$.fragment,i),m=!1},d(i){i&&o(f),i&&o(v),k(d,i)}}}function qv(j){let f,H,v,d,m;return d=new he({props:{code:`from huggingface_hub.utils import validate_hf_hub_args

@validate_hf_hub_args
def my_cool_method(repo_id: str):
    print(repo_id)

my_cool_method(repo_id="valid_repo_id")

my_cool_method("other..repo..id")

my_cool_method(repo_id="other..repo..id")

@validate_hf_hub_args
def my_cool_auth_method(token: str):
    print(token)

my_cool_auth_method(token="a token")

my_cool_auth_method(use_auth_token="a use_auth_token")

my_cool_auth_method(token="a token", use_auth_token="a use_auth_token")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> validate_hf_hub_args

<span class="hljs-meta">&gt;&gt;&gt; </span>@validate_hf_hub_args
<span class="hljs-meta">... </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_cool_method</span>(<span class="hljs-params">repo_id: <span class="hljs-built_in">str</span></span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(repo_id)

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;valid_repo_id&quot;</span>)
valid_repo_id

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.

<span class="hljs-meta">&gt;&gt;&gt; </span>@validate_hf_hub_args
<span class="hljs-meta">... </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_cool_auth_method</span>(<span class="hljs-params">token: <span class="hljs-built_in">str</span></span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(token)

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_auth_method(token=<span class="hljs-string">&quot;a token&quot;</span>)
<span class="hljs-string">&quot;a token&quot;</span>

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_auth_method(use_auth_token=<span class="hljs-string">&quot;a use_auth_token&quot;</span>)
<span class="hljs-string">&quot;a use_auth_token&quot;</span>

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_auth_method(token=<span class="hljs-string">&quot;a token&quot;</span>, use_auth_token=<span class="hljs-string">&quot;a use_auth_token&quot;</span>)
UserWarning: Both \`token\` <span class="hljs-keyword">and</span> \`use_auth_token\` are passed (...)
<span class="hljs-string">&quot;a token&quot;</span>`}}),{c(){f=r("p"),H=n("Example:"),v=h(),b(d.$$.fragment)},l(i){f=a(i,"P",{});var _=s(f);H=l(_,"Example:"),_.forEach(o),v=u(i),E(d.$$.fragment,i)},m(i,_){c(i,f,_),e(f,H),c(i,v,_),$(d,i,_),m=!0},p:Ze,i(i){m||(y(d.$$.fragment,i),m=!0)},o(i){w(d.$$.fragment,i),m=!1},d(i){i&&o(f),i&&o(v),k(d,i)}}}function Cv(j){let f,H,v,d,m;return d=new he({props:{code:`from huggingface_hub.utils import validate_repo_id
validate_repo_id(repo_id="valid_repo_id")
validate_repo_id(repo_id="other..repo..id")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> validate_repo_id
<span class="hljs-meta">&gt;&gt;&gt; </span>validate_repo_id(repo_id=<span class="hljs-string">&quot;valid_repo_id&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>validate_repo_id(repo_id=<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.`}}),{c(){f=r("p"),H=n("Example:"),v=h(),b(d.$$.fragment)},l(i){f=a(i,"P",{});var _=s(f);H=l(_,"Example:"),_.forEach(o),v=u(i),E(d.$$.fragment,i)},m(i,_){c(i,f,_),e(f,H),c(i,v,_),$(d,i,_),m=!0},p:Ze,i(i){m||(y(d.$$.fragment,i),m=!0)},o(i){w(d.$$.fragment,i),m=!1},d(i){i&&o(f),i&&o(v),k(d,i)}}}function Rv(j){let f,H,v,d,m,i,_,ue,Z,ve,M,A,Q,ee,Pe,D,X,ge,Te,re,q,ae,te,ce,Ne,K,J,pe,be,T,V,P,Ee,De,N,se,I,Y,Ue,B,$e,ye,Qe,Ge,Or,Me,Ft,yo,Ar,Si,Ir,ga,Vi,Bi,Ui,Fr,ca,Gi,Mi,ol,qe,wo,zi,pa,Wi,Xi,Lt,rl,et,ko,Ki,da,Ji,al,tt,Ho,Yi,jo,Zi,fa,Qi,eh,sl,ot,xo,th,Po,oh,_a,rh,ah,nl,rt,To,sh,No,nh,ma,lh,ih,ll,at,Do,hh,qo,uh,va,gh,ch,il,st,Co,ph,ba,dh,hl,nt,Ro,fh,Ea,_h,ul,lt,St,$a,Oo,mh,ya,vh,gl,ze,bh,wa,Eh,$h,ka,yh,wh,cl,Ce,Ao,kh,Ha,Hh,jh,Vt,pl,it,Bt,ja,Io,xh,xa,Ph,dl,Re,Pa,Th,Nh,Ta,Dh,qh,Na,Ch,Rh,fl,ht,Ut,Da,Fo,Oh,qa,Ah,_l,de,Lr,Ih,Fh,Ca,Lh,Sh,Ra,Vh,Bh,Oa,Uh,Gh,ml,Lo,vl,oe,So,Mh,ut,zh,Aa,Wh,Xh,Ia,Kh,Jh,Yh,Fa,Zh,Qh,Gt,eu,Mt,bl,gt,zt,La,Vo,tu,Sa,ou,El,Wt,ru,Va,au,su,$l,ct,Xt,Ba,Bo,nu,Ua,lu,yl,Uo,Ga,iu,hu,wl,L,Go,uu,Ma,gu,cu,Mo,pu,za,du,fu,_u,Wa,mu,vu,pt,Xa,bu,Eu,Ka,$u,yu,Ja,wu,ku,Kt,Hu,Jt,zo,ju,Wo,xu,Ya,Pu,Tu,kl,dt,Yt,Za,Xo,Nu,Qa,Du,Hl,Oe,Ko,qu,es,Cu,Ru,Zt,jl,ft,Qt,ts,Jo,Ou,os,Au,xl,Ae,Yo,Iu,rs,Fu,Lu,eo,Pl,_t,to,as,Zo,Su,ss,Vu,Tl,Ie,Qo,Bu,ns,Uu,Gu,oo,Nl,mt,ro,ls,er,Mu,is,zu,Dl,Fe,tr,Wu,or,Xu,hs,Ku,Ju,Yu,ao,ql,vt,so,us,rr,Zu,gs,Qu,Cl,fe,ar,eg,cs,tg,og,_e,rg,ps,ag,sg,ds,ng,lg,fs,ig,hg,_s,ug,gg,cg,no,Rl,bt,lo,ms,sr,pg,vs,dg,Ol,Et,bs,fg,_g,nr,mg,vg,Al,$t,io,Es,lr,bg,$s,Eg,Il,yt,Sr,$g,yg,ys,wg,kg,Fl,ho,Hg,Vr,jg,xg,Ll,Br,Pg,Sl,ir,Vl,wt,uo,ws,hr,Tg,ks,Ng,Bl,z,ur,Dg,gr,qg,Hs,Cg,Rg,Og,js,Ag,Ig,xs,Fg,Lg,cr,we,Ur,Sg,Vg,Ps,Bg,Ug,Ts,Gg,Mg,Ns,zg,Wg,Xg,ne,Gr,Kg,Jg,Ds,Yg,Zg,qs,Qg,ec,Cs,tc,oc,Rs,rc,ac,sc,go,Ul,kt,co,Os,pr,nc,As,lc,Gl,Le,dr,ic,fr,hc,Is,uc,gc,cc,_r,pc,mr,Fs,dc,fc,Ml,Ht,po,Ls,vr,_c,Ss,mc,zl,Mr,vc,Wl,jt,fo,Vs,br,bc,Bs,Ec,Xl,x,Er,$c,$r,yc,Us,wc,kc,Hc,xt,jc,Gs,xc,Pc,Ms,Tc,Nc,Dc,zs,qc,Cc,Se,Ws,Rc,Oc,Xs,Ac,Ic,Ks,Fc,Lc,Js,Sc,Vc,ke,Bc,Ys,Uc,Gc,Zs,Mc,zc,Qs,Wc,Xc,en,Kc,Jc,He,Yc,tn,Zc,Qc,on,ep,tp,rn,op,rp,an,ap,sp,_o,np,yr,lp,wr,ip,hp,up,kr,sn,Hr,gp,cp,nn,jr,pp,Kl,Pt,mo,ln,xr,dp,hn,fp,Jl,zr,_p,Yl,W,Pr,mp,Tt,vp,un,bp,Ep,gn,$p,yp,wp,Nt,kp,cn,Hp,jp,pn,xp,Pp,Tp,le,dn,C,Np,fn,Dp,qp,_n,Cp,Rp,mn,Op,Ap,vn,Ip,Fp,bn,Lp,Sp,En,Vp,Bp,$n,Up,Gp,yn,Mp,zp,Wp,wn,R,Xp,kn,Kp,Jp,Hn,Yp,Zp,jn,Qp,ed,xn,td,od,Pn,rd,ad,Tn,sd,nd,Nn,ld,id,Dn,hd,ud,gd,qn,Dt,cd,Cn,pd,dd,Rn,fd,_d,md,On,me,vd,An,bd,Ed,In,$d,yd,Fn,wd,kd,Ln,Hd,jd,xd,Sn,Ve,Pd,Vn,Td,Nd,Bn,Dd,qd,Un,Cd,Rd,Od,Gn,Ad,Id,qt,Wr,Tr,Fd,Ld,Sd,Mn,Nr,Vd,Bd,Xr,Ud,Dr,Gd,Zl;return i=new S({}),ee=new S({}),T=new he({props:{code:"from huggingface_hub import logging",highlighted:'<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> logging'}}),N=new he({props:{code:`from huggingface_hub import logging

logging.set_verbosity_error()
logging.set_verbosity_warning()
logging.set_verbosity_info()
logging.set_verbosity_debug()

logging.set_verbosity(...)`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> logging

logging.set_verbosity_error()
logging.set_verbosity_warning()
logging.set_verbosity_info()
logging.set_verbosity_debug()

logging.set_verbosity(...)`}}),wo=new O({props:{name:"huggingface_hub.utils.logging.get_verbosity",anchor:"huggingface_hub.utils.logging.get_verbosity",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/logging.py#L103",returnDescription:`
<p>Logging level, e.g., <code>huggingface_hub.logging.DEBUG</code> and
<code>huggingface_hub.logging.INFO</code>.</p>
`}}),Lt=new _v({props:{$$slots:{default:[yv]},$$scope:{ctx:j}}}),ko=new O({props:{name:"huggingface_hub.utils.logging.set_verbosity",anchor:"huggingface_hub.utils.logging.set_verbosity",parameters:[{name:"verbosity",val:": int"}],parametersDescription:[{anchor:"huggingface_hub.utils.logging.set_verbosity.verbosity",description:`<strong>verbosity</strong> (<code>int</code>) &#x2014;
Logging level, e.g., <code>huggingface_hub.logging.DEBUG</code> and
<code>huggingface_hub.logging.INFO</code>.`,name:"verbosity"}],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/logging.py#L125"}}),Ho=new O({props:{name:"huggingface_hub.utils.logging.set_verbosity_info",anchor:"huggingface_hub.utils.logging.set_verbosity_info",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/logging.py#L137"}}),xo=new O({props:{name:"huggingface_hub.utils.logging.set_verbosity_debug",anchor:"huggingface_hub.utils.logging.set_verbosity_debug",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/logging.py#L151"}}),To=new O({props:{name:"huggingface_hub.utils.logging.set_verbosity_warning",anchor:"huggingface_hub.utils.logging.set_verbosity_warning",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/logging.py#L144"}}),Do=new O({props:{name:"huggingface_hub.utils.logging.set_verbosity_error",anchor:"huggingface_hub.utils.logging.set_verbosity_error",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/logging.py#L158"}}),Co=new O({props:{name:"huggingface_hub.utils.logging.disable_propagation",anchor:"huggingface_hub.utils.logging.disable_propagation",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/logging.py#L165"}}),Ro=new O({props:{name:"huggingface_hub.utils.logging.enable_propagation",anchor:"huggingface_hub.utils.logging.enable_propagation",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/logging.py#L173"}}),Oo=new S({}),Ao=new O({props:{name:"huggingface_hub.utils.logging.get_logger",anchor:"huggingface_hub.utils.logging.get_logger",parameters:[{name:"name",val:": typing.Optional[str] = None"}],parametersDescription:[{anchor:"huggingface_hub.utils.logging.get_logger.name",description:`<strong>name</strong> (<code>str</code>, <em>optional</em>) &#x2014;
The name of the logger to get, usually the filename`,name:"name"}],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/logging.py#L78"}}),Vt=new Ye({props:{anchor:"huggingface_hub.utils.logging.get_logger.example",$$slots:{default:[wv]},$$scope:{ctx:j}}}),Io=new S({}),Fo=new S({}),Lo=new he({props:{code:`import requests
from huggingface_hub.utils import hf_raise_for_status, HfHubHTTPError

response = requests.post(...)
try:
    hf_raise_for_status(response)
except HfHubHTTPError as e:
    print(str(e)) # formatted message
    e.request_id, e.server_message # details returned by server

    # Complete the error message with additional information once it's raised
    e.append_to_message("\\n\`create_commit\` expects the repository to exist.")
    raise`,highlighted:`<span class="hljs-keyword">import</span> requests
<span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> hf_raise_for_status, HfHubHTTPError

response = requests.post(...)
<span class="hljs-keyword">try</span>:
    hf_raise_for_status(response)
<span class="hljs-keyword">except</span> HfHubHTTPError <span class="hljs-keyword">as</span> e:
    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(e)) <span class="hljs-comment"># formatted message</span>
    e.request_id, e.server_message <span class="hljs-comment"># details returned by server</span>

    <span class="hljs-comment"># Complete the error message with additional information once it&#x27;s raised</span>
    e.append_to_message(<span class="hljs-string">&quot;\\n\`create_commit\` expects the repository to exist.&quot;</span>)
    <span class="hljs-keyword">raise</span>`}}),So=new O({props:{name:"huggingface_hub.utils.hf_raise_for_status",anchor:"huggingface_hub.utils.hf_raise_for_status",parameters:[{name:"response",val:": Response"},{name:"endpoint_name",val:": typing.Optional[str] = None"}],parametersDescription:[{anchor:"huggingface_hub.utils.hf_raise_for_status.response",description:`<strong>response</strong> (<code>Response</code>) &#x2014;
Response from the server.`,name:"response"},{anchor:"huggingface_hub.utils.hf_raise_for_status.endpoint_name",description:`<strong>endpoint_name</strong> (<code>str</code>, <em>optional</em>) &#x2014;
Name of the endpoint that has been called. If provided, the error message
will be more complete.`,name:"endpoint_name"}],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/_errors.py#L184"}}),Gt=new Ye({props:{anchor:"huggingface_hub.utils.hf_raise_for_status.example",$$slots:{default:[kv]},$$scope:{ctx:j}}}),Mt=new _v({props:{warning:!0,$$slots:{default:[Hv]},$$scope:{ctx:j}}}),Vo=new S({}),Bo=new S({}),Go=new O({props:{name:"class huggingface_hub.utils.HfHubHTTPError",anchor:"huggingface_hub.utils.HfHubHTTPError",parameters:[{name:"message",val:": str"},{name:"response",val:": typing.Optional[requests.models.Response]"}],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/_errors.py#L9"}}),Kt=new Ye({props:{anchor:"huggingface_hub.utils.HfHubHTTPError.example",$$slots:{default:[jv]},$$scope:{ctx:j}}}),zo=new O({props:{name:"append_to_message",anchor:"huggingface_hub.utils.HfHubHTTPError.append_to_message",parameters:[{name:"additional_message",val:": str"}],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/_errors.py#L85"}}),Xo=new S({}),Ko=new O({props:{name:"class huggingface_hub.utils.RepositoryNotFoundError",anchor:"huggingface_hub.utils.RepositoryNotFoundError",parameters:[{name:"message",val:": str"},{name:"response",val:": typing.Optional[requests.models.Response]"}],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/_errors.py#L90"}}),Zt=new Ye({props:{anchor:"huggingface_hub.utils.RepositoryNotFoundError.example",$$slots:{default:[xv]},$$scope:{ctx:j}}}),Jo=new S({}),Yo=new O({props:{name:"class huggingface_hub.utils.RevisionNotFoundError",anchor:"huggingface_hub.utils.RevisionNotFoundError",parameters:[{name:"message",val:": str"},{name:"response",val:": typing.Optional[requests.models.Response]"}],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/_errors.py#L111"}}),eo=new Ye({props:{anchor:"huggingface_hub.utils.RevisionNotFoundError.example",$$slots:{default:[Pv]},$$scope:{ctx:j}}}),Zo=new S({}),Qo=new O({props:{name:"class huggingface_hub.utils.EntryNotFoundError",anchor:"huggingface_hub.utils.EntryNotFoundError",parameters:[{name:"message",val:": str"},{name:"response",val:": typing.Optional[requests.models.Response]"}],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/_errors.py#L129"}}),oo=new Ye({props:{anchor:"huggingface_hub.utils.EntryNotFoundError.example",$$slots:{default:[Tv]},$$scope:{ctx:j}}}),er=new S({}),tr=new O({props:{name:"class huggingface_hub.utils.BadRequestError",anchor:"huggingface_hub.utils.BadRequestError",parameters:[{name:"message",val:": str"},{name:"response",val:": typing.Optional[requests.models.Response]"}],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/_errors.py#L170"}}),ao=new Ye({props:{anchor:"huggingface_hub.utils.BadRequestError.example",$$slots:{default:[Nv]},$$scope:{ctx:j}}}),rr=new S({}),ar=new O({props:{name:"class huggingface_hub.utils.LocalEntryNotFoundError",anchor:"huggingface_hub.utils.LocalEntryNotFoundError",parameters:[{name:"message",val:": str"}],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/_errors.py#L147"}}),no=new Ye({props:{anchor:"huggingface_hub.utils.LocalEntryNotFoundError.example",$$slots:{default:[Dv]},$$scope:{ctx:j}}}),sr=new S({}),lr=new S({}),ir=new he({props:{code:`from huggingface_hub.utils import validate_hf_hub_args

@validate_hf_hub_args
def my_cool_method(repo_id: str):
    print(repo_id)

my_cool_method(repo_id="valid_repo_id")

my_cool_method("other..repo..id")

my_cool_method(repo_id="other..repo..id")

@validate_hf_hub_args
def my_cool_auth_method(token: str):
    print(token)

my_cool_auth_method(token="a token")

my_cool_auth_method(use_auth_token="a use_auth_token")

my_cool_auth_method(token="a token", use_auth_token="a use_auth_token")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> validate_hf_hub_args

<span class="hljs-meta">&gt;&gt;&gt; </span>@validate_hf_hub_args
<span class="hljs-meta">... </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_cool_method</span>(<span class="hljs-params">repo_id: <span class="hljs-built_in">str</span></span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(repo_id)

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;valid_repo_id&quot;</span>)
valid_repo_id

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.

<span class="hljs-meta">&gt;&gt;&gt; </span>@validate_hf_hub_args
<span class="hljs-meta">... </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_cool_auth_method</span>(<span class="hljs-params">token: <span class="hljs-built_in">str</span></span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(token)

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_auth_method(token=<span class="hljs-string">&quot;a token&quot;</span>)
<span class="hljs-string">&quot;a token&quot;</span>

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_auth_method(use_auth_token=<span class="hljs-string">&quot;a use_auth_token&quot;</span>)
<span class="hljs-string">&quot;a use_auth_token&quot;</span>

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_auth_method(token=<span class="hljs-string">&quot;a token&quot;</span>, use_auth_token=<span class="hljs-string">&quot;a use_auth_token&quot;</span>)
UserWarning: Both \`token\` <span class="hljs-keyword">and</span> \`use_auth_token\` are passed (...). \`use_auth_token\` value will be ignored.
<span class="hljs-string">&quot;a token&quot;</span>`}}),hr=new S({}),ur=new O({props:{name:"huggingface_hub.utils.validate_hf_hub_args",anchor:"huggingface_hub.utils.validate_hf_hub_args",parameters:[{name:"fn",val:": CallableT"}],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/_validators.py#L48",raiseDescription:`
<ul>
<li><a
  href="/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/utilities#huggingface_hub.utils.HFValidationError"
>HFValidationError</a> \u2014
If an input is not valid.</li>
</ul>
`,raiseType:`
<p><a
  href="/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/utilities#huggingface_hub.utils.HFValidationError"
>HFValidationError</a></p>
`}}),go=new Ye({props:{anchor:"huggingface_hub.utils.validate_hf_hub_args.example",$$slots:{default:[qv]},$$scope:{ctx:j}}}),pr=new S({}),dr=new O({props:{name:"class huggingface_hub.utils.HFValidationError",anchor:"huggingface_hub.utils.HFValidationError",parameters:"",source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/_validators.py#L37"}}),vr=new S({}),br=new S({}),Er=new O({props:{name:"huggingface_hub.utils.validate_repo_id",anchor:"huggingface_hub.utils.validate_repo_id",parameters:[{name:"repo_id",val:": str"}],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/_validators.py#L129"}}),_o=new Ye({props:{anchor:"huggingface_hub.utils.validate_repo_id.example",$$slots:{default:[Cv]},$$scope:{ctx:j}}}),xr=new S({}),Pr=new O({props:{name:"huggingface_hub.utils.smoothly_deprecate_use_auth_token",anchor:"huggingface_hub.utils.smoothly_deprecate_use_auth_token",parameters:[{name:"fn_name",val:": str"},{name:"has_token",val:": bool"},{name:"kwargs",val:": typing.Dict[str, typing.Any]"}],source:"https://github.com/huggingface/huggingface_hub/blob/v0.11.0.rc1/src/huggingface_hub/utils/_validators.py#L185"}}),{c(){f=r("meta"),H=h(),v=r("h1"),d=r("a"),m=r("span"),b(i.$$.fragment),_=h(),ue=r("span"),Z=n("Utilities"),ve=h(),M=r("h2"),A=r("a"),Q=r("span"),b(ee.$$.fragment),Pe=h(),D=r("span"),X=n("Controlling the logging of "),ge=r("code"),Te=n("huggingface_hub"),re=h(),q=r("p"),ae=n("The "),te=r("code"),ce=n("huggingface_hub"),Ne=n(" package exposes a "),K=r("code"),J=n("logging"),pe=n(` utility to control the logging level of the package itself.
You can import it as such:`),be=h(),b(T.$$.fragment),V=h(),P=r("p"),Ee=n("Then, you may define the verbosity in order to update the amount of logs you\u2019ll see:"),De=h(),b(N.$$.fragment),se=h(),I=r("p"),Y=n("The levels should be understood as follows:"),Ue=h(),B=r("ul"),$e=r("li"),ye=r("code"),Qe=n("error"),Ge=n(": only show critical logs about usage which may result in an error or unexpected behavior."),Or=h(),Me=r("li"),Ft=r("code"),yo=n("warning"),Ar=n(`: show logs that aren\u2019t critical but usage may result in unintended behavior.
Additionally, important informative logs may be shown.`),Si=h(),Ir=r("li"),ga=r("code"),Vi=n("info"),Bi=n(`: show most logs, including some verbose logging regarding what is happening under the hood.
If something is behaving in an unexpected manner, we recommend switching the verbosity level to this in order
to get more information.`),Ui=h(),Fr=r("li"),ca=r("code"),Gi=n("debug"),Mi=n(`: show all logs, including some internal logs which may be used to track exactly what\u2019s happening
under the hood.`),ol=h(),qe=r("div"),b(wo.$$.fragment),zi=h(),pa=r("p"),Wi=n("Return the current level for the HuggingFace Hub\u2019s root logger."),Xi=h(),b(Lt.$$.fragment),rl=h(),et=r("div"),b(ko.$$.fragment),Ki=h(),da=r("p"),Ji=n("Sets the level for the HuggingFace Hub\u2019s root logger."),al=h(),tt=r("div"),b(Ho.$$.fragment),Yi=h(),jo=r("p"),Zi=n("Sets the verbosity to "),fa=r("code"),Qi=n("logging.INFO"),eh=n("."),sl=h(),ot=r("div"),b(xo.$$.fragment),th=h(),Po=r("p"),oh=n("Sets the verbosity to "),_a=r("code"),rh=n("logging.DEBUG"),ah=n("."),nl=h(),rt=r("div"),b(To.$$.fragment),sh=h(),No=r("p"),nh=n("Sets the verbosity to "),ma=r("code"),lh=n("logging.WARNING"),ih=n("."),ll=h(),at=r("div"),b(Do.$$.fragment),hh=h(),qo=r("p"),uh=n("Sets the verbosity to "),va=r("code"),gh=n("logging.ERROR"),ch=n("."),il=h(),st=r("div"),b(Co.$$.fragment),ph=h(),ba=r("p"),dh=n(`Disable propagation of the library log outputs. Note that log propagation is
disabled by default.`),hl=h(),nt=r("div"),b(Ro.$$.fragment),fh=h(),Ea=r("p"),_h=n(`Enable propagation of the library log outputs. Please disable the
HuggingFace Hub\u2019s default handler to prevent double logging if the root
logger has been configured.`),ul=h(),lt=r("h3"),St=r("a"),$a=r("span"),b(Oo.$$.fragment),mh=h(),ya=r("span"),vh=n("Repo-specific helper methods"),gl=h(),ze=r("p"),bh=n("The methods exposed below are relevant when modifying modules from the "),wa=r("code"),Eh=n("huggingface_hub"),$h=n(` library itself.
Using these shouldn\u2019t be necessary if you use `),ka=r("code"),yh=n("huggingface_hub"),wh=n(" and you don\u2019t modify them."),cl=h(),Ce=r("div"),b(Ao.$$.fragment),kh=h(),Ha=r("p"),Hh=n(`Returns a logger with the specified name. This function is not supposed
to be directly accessed by library users.`),jh=h(),b(Vt.$$.fragment),pl=h(),it=r("h2"),Bt=r("a"),ja=r("span"),b(Io.$$.fragment),xh=h(),xa=r("span"),Ph=n("Handling HTTP errors"),dl=h(),Re=r("p"),Pa=r("code"),Th=n("huggingface_hub"),Nh=n(" defines its own HTTP errors to refine the "),Ta=r("code"),Dh=n("HTTPError"),qh=n(` raised by
`),Na=r("code"),Ch=n("requests"),Rh=n(" with additional information sent back by the server."),fl=h(),ht=r("h3"),Ut=r("a"),Da=r("span"),b(Fo.$$.fragment),Oh=h(),qa=r("span"),Ah=n("Raise for status"),_l=h(),de=r("p"),Lr=r("a"),Ih=n("hf_raise_for_status()"),Fh=n(` is meant to be the central method to \u201Craise for status\u201D from any
request made to the Hub. It wraps the base `),Ca=r("code"),Lh=n("requests.raise_for_status"),Sh=n(` to provide
additional information. Any `),Ra=r("code"),Vh=n("HTTPError"),Bh=n(" thrown is converted into a "),Oa=r("code"),Uh=n("HfHubHTTPError"),Gh=n("."),ml=h(),b(Lo.$$.fragment),vl=h(),oe=r("div"),b(So.$$.fragment),Mh=h(),ut=r("p"),zh=n("Internal version of "),Aa=r("code"),Wh=n("response.raise_for_status()"),Xh=n(` that will refine a
potential HTTPError. Raised exception will be an instance of `),Ia=r("code"),Kh=n("HfHubHTTPError"),Jh=n("."),Yh=h(),Fa=r("p"),Zh=n(`This helper is meant to be the unique method to raise_for_status when making a call
to the Hugging Face Hub.`),Qh=h(),b(Gt.$$.fragment),eu=h(),b(Mt.$$.fragment),bl=h(),gt=r("h3"),zt=r("a"),La=r("span"),b(Vo.$$.fragment),tu=h(),Sa=r("span"),ou=n("HTTP errors"),El=h(),Wt=r("p"),ru=n("Here is a list of HTTP errors thrown in "),Va=r("code"),au=n("huggingface_hub"),su=n("."),$l=h(),ct=r("h4"),Xt=r("a"),Ba=r("span"),b(Bo.$$.fragment),nu=h(),Ua=r("span"),lu=n("HfHubHTTPError"),yl=h(),Uo=r("p"),Ga=r("code"),iu=n("HfHubHTTPError"),hu=n(` is the parent class for any HF Hub HTTP error. It takes care of parsing
the server response and format the error message to provide as much information to the
user as possible.`),wl=h(),L=r("div"),b(Go.$$.fragment),uu=h(),Ma=r("p"),gu=n("HTTPError to inherit from for any custom HTTP Error raised in HF Hub."),cu=h(),Mo=r("p"),pu=n("Any HTTPError is converted at least into a "),za=r("code"),du=n("HfHubHTTPError"),fu=n(`. If some information is
sent back by the server, it will be added to the error message.`),_u=h(),Wa=r("p"),mu=n("Added details:"),vu=h(),pt=r("ul"),Xa=r("li"),bu=n("Request id from \u201CX-Request-Id\u201D header if exists."),Eu=h(),Ka=r("li"),$u=n("Server error message from the header \u201CX-Error-Message\u201D."),yu=h(),Ja=r("li"),wu=n("Server error message if we can found one in the response body."),ku=h(),b(Kt.$$.fragment),Hu=h(),Jt=r("div"),b(zo.$$.fragment),ju=h(),Wo=r("p"),xu=n("Append additional information to the "),Ya=r("code"),Pu=n("HfHubHTTPError"),Tu=n(" initial message."),kl=h(),dt=r("h4"),Yt=r("a"),Za=r("span"),b(Xo.$$.fragment),Nu=h(),Qa=r("span"),Du=n("RepositoryNotFoundError"),Hl=h(),Oe=r("div"),b(Ko.$$.fragment),qu=h(),es=r("p"),Cu=n(`Raised when trying to access a hf.co URL with an invalid repository name, or
with a private repo name the user does not have access to.`),Ru=h(),b(Zt.$$.fragment),jl=h(),ft=r("h4"),Qt=r("a"),ts=r("span"),b(Jo.$$.fragment),Ou=h(),os=r("span"),Au=n("RevisionNotFoundError"),xl=h(),Ae=r("div"),b(Yo.$$.fragment),Iu=h(),rs=r("p"),Fu=n(`Raised when trying to access a hf.co URL with a valid repository but an invalid
revision.`),Lu=h(),b(eo.$$.fragment),Pl=h(),_t=r("h4"),to=r("a"),as=r("span"),b(Zo.$$.fragment),Su=h(),ss=r("span"),Vu=n("EntryNotFoundError"),Tl=h(),Ie=r("div"),b(Qo.$$.fragment),Bu=h(),ns=r("p"),Uu=n(`Raised when trying to access a hf.co URL with a valid repository and revision
but an invalid filename.`),Gu=h(),b(oo.$$.fragment),Nl=h(),mt=r("h4"),ro=r("a"),ls=r("span"),b(er.$$.fragment),Mu=h(),is=r("span"),zu=n("BadRequestError"),Dl=h(),Fe=r("div"),b(tr.$$.fragment),Wu=h(),or=r("p"),Xu=n("Raised by "),hs=r("code"),Ku=n("hf_raise_for_status"),Ju=n(" when the server returns a HTTP 400 error."),Yu=h(),b(ao.$$.fragment),ql=h(),vt=r("h4"),so=r("a"),us=r("span"),b(rr.$$.fragment),Zu=h(),gs=r("span"),Qu=n("LocalEntryNotFoundError"),Cl=h(),fe=r("div"),b(ar.$$.fragment),eg=h(),cs=r("p"),tg=n(`Raised when trying to access a file that is not on the disk when network is
disabled or unavailable (connection issue). The entry may exist on the Hub.`),og=h(),_e=r("p"),rg=n("Note: "),ps=r("code"),ag=n("ValueError"),sg=n(` type is to ensure backward compatibility.
Note: `),ds=r("code"),ng=n("LocalEntryNotFoundError"),lg=n(" derives from "),fs=r("code"),ig=n("HTTPError"),hg=n(" because of "),_s=r("code"),ug=n("EntryNotFoundError"),gg=n(`
even when it is not a network issue.`),cg=h(),b(no.$$.fragment),Rl=h(),bt=r("h2"),lo=r("a"),ms=r("span"),b(sr.$$.fragment),pg=h(),vs=r("span"),dg=n("Validators"),Ol=h(),Et=r("p"),bs=r("code"),fg=n("huggingface_hub"),_g=n(` include custom validators to validate method arguments automatically.
Validation is inspired by the work done in `),nr=r("a"),mg=n("Pydantic"),vg=n(`
to validate type hints but with more limited features.`),Al=h(),$t=r("h3"),io=r("a"),Es=r("span"),b(lr.$$.fragment),bg=h(),$s=r("span"),Eg=n("Generic decorator"),Il=h(),yt=r("p"),Sr=r("a"),$g=n("validate_hf_hub_args()"),yg=n(` is a generic decorator to encapsulate
methods that have arguments following `),ys=r("code"),wg=n("huggingface_hub"),kg=n(`\u2019s naming. By default, all
arguments that has a validator implemented will be validated.`),Fl=h(),ho=r("p"),Hg=n("If an input is not valid, a "),Vr=r("a"),jg=n("HFValidationError"),xg=n(` is thrown. Only
the first non-valid value throws an error and stops the validation process.`),Ll=h(),Br=r("p"),Pg=n("Usage:"),Sl=h(),b(ir.$$.fragment),Vl=h(),wt=r("h4"),uo=r("a"),ws=r("span"),b(hr.$$.fragment),Tg=h(),ks=r("span"),Ng=n("validate_hf_hub_args"),Bl=h(),z=r("div"),b(ur.$$.fragment),Dg=h(),gr=r("p"),qg=n("Validate values received as argument for any public method of "),Hs=r("code"),Cg=n("huggingface_hub"),Rg=n("."),Og=h(),js=r("p"),Ag=n(`The goal of this decorator is to harmonize validation of arguments reused
everywhere. By default, all defined validators are tested.`),Ig=h(),xs=r("p"),Fg=n("Validators:"),Lg=h(),cr=r("ul"),we=r("li"),Ur=r("a"),Sg=n("validate_repo_id()"),Vg=n(": "),Ps=r("code"),Bg=n("repo_id"),Ug=n(" must be "),Ts=r("code"),Gg=n('"repo_name"'),Mg=n(`
or `),Ns=r("code"),zg=n('"namespace/repo_name"'),Wg=n(". Namespace is a username or an organization."),Xg=h(),ne=r("li"),Gr=r("a"),Kg=n("smoothly_deprecate_use_auth_token()"),Jg=n(": Use "),Ds=r("code"),Yg=n("token"),Zg=n(` instead of
`),qs=r("code"),Qg=n("use_auth_token"),ec=n(" (only if "),Cs=r("code"),tc=n("use_auth_token"),oc=n(` is not expected by the decorated
function - in practice, always the case in `),Rs=r("code"),rc=n("huggingface_hub"),ac=n(")."),sc=h(),b(go.$$.fragment),Ul=h(),kt=r("h4"),co=r("a"),Os=r("span"),b(pr.$$.fragment),nc=h(),As=r("span"),lc=n("HFValidationError"),Gl=h(),Le=r("div"),b(dr.$$.fragment),ic=h(),fr=r("p"),hc=n("Generic exception thrown by "),Is=r("code"),uc=n("huggingface_hub"),gc=n(" validators."),cc=h(),_r=r("p"),pc=n("Inherits from "),mr=r("a"),Fs=r("code"),dc=n("ValueError"),fc=n("."),Ml=h(),Ht=r("h3"),po=r("a"),Ls=r("span"),b(vr.$$.fragment),_c=h(),Ss=r("span"),mc=n("Argument validators"),zl=h(),Mr=r("p"),vc=n(`Validators can also be used individually. Here is a list of all arguments that can be
validated.`),Wl=h(),jt=r("h4"),fo=r("a"),Vs=r("span"),b(br.$$.fragment),bc=h(),Bs=r("span"),Ec=n("repo_id"),Xl=h(),x=r("div"),b(Er.$$.fragment),$c=h(),$r=r("p"),yc=n("Validate "),Us=r("code"),wc=n("repo_id"),kc=n(" is valid."),Hc=h(),xt=r("p"),jc=n(`This is not meant to replace the proper validation made on the Hub but rather to
avoid local inconsistencies whenever possible (example: passing `),Gs=r("code"),xc=n("repo_type"),Pc=n(` in the
`),Ms=r("code"),Tc=n("repo_id"),Nc=n(" is forbidden)."),Dc=h(),zs=r("p"),qc=n("Rules:"),Cc=h(),Se=r("ul"),Ws=r("li"),Rc=n("Between 1 and 96 characters."),Oc=h(),Xs=r("li"),Ac=n("Either \u201Crepo_name\u201D or \u201Cnamespace/repo_name\u201D"),Ic=h(),Ks=r("li"),Fc=n("[a-zA-Z0-9] or \u201D-\u201D, \u201D_\u201D, \u201D.\u201D"),Lc=h(),Js=r("li"),Sc=n("\u201D\u2014\u201D and \u201D..\u201D are forbidden"),Vc=h(),ke=r("p"),Bc=n("Valid: "),Ys=r("code"),Uc=n('"foo"'),Gc=n(", "),Zs=r("code"),Mc=n('"foo/bar"'),zc=n(", "),Qs=r("code"),Wc=n('"123"'),Xc=n(", "),en=r("code"),Kc=n('"Foo-BAR_foo.bar123"'),Jc=h(),He=r("p"),Yc=n("Not valid: "),tn=r("code"),Zc=n('"datasets/foo/bar"'),Qc=n(", "),on=r("code"),ep=n('".repo_id"'),tp=n(", "),rn=r("code"),op=n('"foo--bar"'),rp=n(", "),an=r("code"),ap=n('"foo.git"'),sp=h(),b(_o.$$.fragment),np=h(),yr=r("p"),lp=n("Discussed in "),wr=r("a"),ip=n("https://github.com/huggingface/huggingface_hub/issues/1008"),hp=n(`.
In moon-landing (internal repository):`),up=h(),kr=r("ul"),sn=r("li"),Hr=r("a"),gp=n("https://github.com/huggingface/moon-landing/blob/main/server/lib/Names.ts#L27"),cp=h(),nn=r("li"),jr=r("a"),pp=n("https://github.com/huggingface/moon-landing/blob/main/server/views/components/NewRepoForm/NewRepoForm.svelte#L138"),Kl=h(),Pt=r("h4"),mo=r("a"),ln=r("span"),b(xr.$$.fragment),dp=h(),hn=r("span"),fp=n("smoothly_deprecate_use_auth_token"),Jl=h(),zr=r("p"),_p=n("Not exactly a validator, but ran as well."),Yl=h(),W=r("div"),b(Pr.$$.fragment),mp=h(),Tt=r("p"),vp=n("Smoothly deprecate "),un=r("code"),bp=n("use_auth_token"),Ep=n(" in the "),gn=r("code"),$p=n("huggingface_hub"),yp=n(" codebase."),wp=h(),Nt=r("p"),kp=n("The long-term goal is to remove any mention of "),cn=r("code"),Hp=n("use_auth_token"),jp=n(` in the codebase in
favor of a unique and less verbose `),pn=r("code"),xp=n("token"),Pp=n(" argument. This will be done a few steps:"),Tp=h(),le=r("ol"),dn=r("li"),C=r("p"),Np=n("Step 0: methods that require a read-access to the Hub use the "),fn=r("code"),Dp=n("use_auth_token"),qp=n(`
argument (`),_n=r("code"),Cp=n("str"),Rp=n(", "),mn=r("code"),Op=n("bool"),Ap=n(" or "),vn=r("code"),Ip=n("None"),Fp=n("). Methods requiring write-access have a "),bn=r("code"),Lp=n("token"),Sp=n(`
argument (`),En=r("code"),Vp=n("str"),Bp=n(", "),$n=r("code"),Up=n("None"),Gp=n(`). This implicit rule exists to be able to not send the
token when not necessary (`),yn=r("code"),Mp=n("use_auth_token=False"),zp=n(") even if logged in."),Wp=h(),wn=r("li"),R=r("p"),Xp=n("Step 1: we want to harmonize everything and use "),kn=r("code"),Kp=n("token"),Jp=n(` everywhere (supporting
`),Hn=r("code"),Yp=n("token=False"),Zp=n(` for read-only methods). In order not to break existing code, if
`),jn=r("code"),Qp=n("use_auth_token"),ed=n(" is passed to a function, the "),xn=r("code"),td=n("use_auth_token"),od=n(` value is passed
as `),Pn=r("code"),rd=n("token"),ad=n(` instead, without any warning.
a. Corner case: if both `),Tn=r("code"),sd=n("use_auth_token"),nd=n(" and "),Nn=r("code"),ld=n("token"),id=n(` values are passed, a warning
is thrown and the `),Dn=r("code"),hd=n("use_auth_token"),ud=n(" value is ignored."),gd=h(),qn=r("li"),Dt=r("p"),cd=n(`Step 2: Once it is release, we should push downstream libraries to switch from
`),Cn=r("code"),pd=n("use_auth_token"),dd=n(" to "),Rn=r("code"),fd=n("token"),_d=n(` as much as possible, but without throwing a warning
(e.g. manually create issues on the corresponding repos).`),md=h(),On=r("li"),me=r("p"),vd=n(`Step 3: After a transitional period (6 months e.g. until April 2023?), we update
`),An=r("code"),bd=n("huggingface_hub"),Ed=n(" to throw a warning on "),In=r("code"),$d=n("use_auth_token"),yd=n(`. Hopefully, very few
users will be impacted as it would have already been fixed.
In addition, unit tests in `),Fn=r("code"),wd=n("huggingface_hub"),kd=n(` must be adapted to expect warnings
to be thrown (but still use `),Ln=r("code"),Hd=n("use_auth_token"),jd=n(" as before)."),xd=h(),Sn=r("li"),Ve=r("p"),Pd=n(`Step 4: After a normal deprecation cycle (3 releases ?), remove this validator.
`),Vn=r("code"),Td=n("use_auth_token"),Nd=n(` will definitely not be supported.
In addition, we update unit tests in `),Bn=r("code"),Dd=n("huggingface_hub"),qd=n(" to use "),Un=r("code"),Cd=n("token"),Rd=n(" everywhere."),Od=h(),Gn=r("p"),Ad=n("This has been discussed in:"),Id=h(),qt=r("ul"),Wr=r("li"),Tr=r("a"),Fd=n("https://github.com/huggingface/huggingface_hub/issues/1094"),Ld=n("."),Sd=h(),Mn=r("li"),Nr=r("a"),Vd=n("https://github.com/huggingface/huggingface_hub/pull/928"),Bd=h(),Xr=r("li"),Ud=n("(related) "),Dr=r("a"),Gd=n("https://github.com/huggingface/huggingface_hub/pull/1064"),this.h()},l(t){const g=Ev('[data-svelte="svelte-1phssyn"]',document.head);f=a(g,"META",{name:!0,content:!0}),g.forEach(o),H=u(t),v=a(t,"H1",{class:!0});var qr=s(v);d=a(qr,"A",{id:!0,class:!0,href:!0});var zn=s(d);m=a(zn,"SPAN",{});var Wn=s(m);E(i.$$.fragment,Wn),Wn.forEach(o),zn.forEach(o),_=u(qr),ue=a(qr,"SPAN",{});var Xn=s(ue);Z=l(Xn,"Utilities"),Xn.forEach(o),qr.forEach(o),ve=u(t),M=a(t,"H2",{class:!0});var Cr=s(M);A=a(Cr,"A",{id:!0,class:!0,href:!0});var Kn=s(A);Q=a(Kn,"SPAN",{});var Jn=s(Q);E(ee.$$.fragment,Jn),Jn.forEach(o),Kn.forEach(o),Pe=u(Cr),D=a(Cr,"SPAN",{});var Kr=s(D);X=l(Kr,"Controlling the logging of "),ge=a(Kr,"CODE",{});var Yn=s(ge);Te=l(Yn,"huggingface_hub"),Yn.forEach(o),Kr.forEach(o),Cr.forEach(o),re=u(t),q=a(t,"P",{});var Ct=s(q);ae=l(Ct,"The "),te=a(Ct,"CODE",{});var Zn=s(te);ce=l(Zn,"huggingface_hub"),Zn.forEach(o),Ne=l(Ct," package exposes a "),K=a(Ct,"CODE",{});var Qn=s(K);J=l(Qn,"logging"),Qn.forEach(o),pe=l(Ct,` utility to control the logging level of the package itself.
You can import it as such:`),Ct.forEach(o),be=u(t),E(T.$$.fragment,t),V=u(t),P=a(t,"P",{});var Zd=s(P);Ee=l(Zd,"Then, you may define the verbosity in order to update the amount of logs you\u2019ll see:"),Zd.forEach(o),De=u(t),E(N.$$.fragment,t),se=u(t),I=a(t,"P",{});var Qd=s(I);Y=l(Qd,"The levels should be understood as follows:"),Qd.forEach(o),Ue=u(t),B=a(t,"UL",{});var vo=s(B);$e=a(vo,"LI",{});var Md=s($e);ye=a(Md,"CODE",{});var ef=s(ye);Qe=l(ef,"error"),ef.forEach(o),Ge=l(Md,": only show critical logs about usage which may result in an error or unexpected behavior."),Md.forEach(o),Or=u(vo),Me=a(vo,"LI",{});var zd=s(Me);Ft=a(zd,"CODE",{});var tf=s(Ft);yo=l(tf,"warning"),tf.forEach(o),Ar=l(zd,`: show logs that aren\u2019t critical but usage may result in unintended behavior.
Additionally, important informative logs may be shown.`),zd.forEach(o),Si=u(vo),Ir=a(vo,"LI",{});var Wd=s(Ir);ga=a(Wd,"CODE",{});var of=s(ga);Vi=l(of,"info"),of.forEach(o),Bi=l(Wd,`: show most logs, including some verbose logging regarding what is happening under the hood.
If something is behaving in an unexpected manner, we recommend switching the verbosity level to this in order
to get more information.`),Wd.forEach(o),Ui=u(vo),Fr=a(vo,"LI",{});var Xd=s(Fr);ca=a(Xd,"CODE",{});var rf=s(ca);Gi=l(rf,"debug"),rf.forEach(o),Mi=l(Xd,`: show all logs, including some internal logs which may be used to track exactly what\u2019s happening
under the hood.`),Xd.forEach(o),vo.forEach(o),ol=u(t),qe=a(t,"DIV",{class:!0});var Jr=s(qe);E(wo.$$.fragment,Jr),zi=u(Jr),pa=a(Jr,"P",{});var af=s(pa);Wi=l(af,"Return the current level for the HuggingFace Hub\u2019s root logger."),af.forEach(o),Xi=u(Jr),E(Lt.$$.fragment,Jr),Jr.forEach(o),rl=u(t),et=a(t,"DIV",{class:!0});var Ql=s(et);E(ko.$$.fragment,Ql),Ki=u(Ql),da=a(Ql,"P",{});var sf=s(da);Ji=l(sf,"Sets the level for the HuggingFace Hub\u2019s root logger."),sf.forEach(o),Ql.forEach(o),al=u(t),tt=a(t,"DIV",{class:!0});var ei=s(tt);E(Ho.$$.fragment,ei),Yi=u(ei),jo=a(ei,"P",{});var ti=s(jo);Zi=l(ti,"Sets the verbosity to "),fa=a(ti,"CODE",{});var nf=s(fa);Qi=l(nf,"logging.INFO"),nf.forEach(o),eh=l(ti,"."),ti.forEach(o),ei.forEach(o),sl=u(t),ot=a(t,"DIV",{class:!0});var oi=s(ot);E(xo.$$.fragment,oi),th=u(oi),Po=a(oi,"P",{});var ri=s(Po);oh=l(ri,"Sets the verbosity to "),_a=a(ri,"CODE",{});var lf=s(_a);rh=l(lf,"logging.DEBUG"),lf.forEach(o),ah=l(ri,"."),ri.forEach(o),oi.forEach(o),nl=u(t),rt=a(t,"DIV",{class:!0});var ai=s(rt);E(To.$$.fragment,ai),sh=u(ai),No=a(ai,"P",{});var si=s(No);nh=l(si,"Sets the verbosity to "),ma=a(si,"CODE",{});var hf=s(ma);lh=l(hf,"logging.WARNING"),hf.forEach(o),ih=l(si,"."),si.forEach(o),ai.forEach(o),ll=u(t),at=a(t,"DIV",{class:!0});var ni=s(at);E(Do.$$.fragment,ni),hh=u(ni),qo=a(ni,"P",{});var li=s(qo);uh=l(li,"Sets the verbosity to "),va=a(li,"CODE",{});var uf=s(va);gh=l(uf,"logging.ERROR"),uf.forEach(o),ch=l(li,"."),li.forEach(o),ni.forEach(o),il=u(t),st=a(t,"DIV",{class:!0});var ii=s(st);E(Co.$$.fragment,ii),ph=u(ii),ba=a(ii,"P",{});var gf=s(ba);dh=l(gf,`Disable propagation of the library log outputs. Note that log propagation is
disabled by default.`),gf.forEach(o),ii.forEach(o),hl=u(t),nt=a(t,"DIV",{class:!0});var hi=s(nt);E(Ro.$$.fragment,hi),fh=u(hi),Ea=a(hi,"P",{});var cf=s(Ea);_h=l(cf,`Enable propagation of the library log outputs. Please disable the
HuggingFace Hub\u2019s default handler to prevent double logging if the root
logger has been configured.`),cf.forEach(o),hi.forEach(o),ul=u(t),lt=a(t,"H3",{class:!0});var ui=s(lt);St=a(ui,"A",{id:!0,class:!0,href:!0});var pf=s(St);$a=a(pf,"SPAN",{});var df=s($a);E(Oo.$$.fragment,df),df.forEach(o),pf.forEach(o),mh=u(ui),ya=a(ui,"SPAN",{});var ff=s(ya);vh=l(ff,"Repo-specific helper methods"),ff.forEach(o),ui.forEach(o),gl=u(t),ze=a(t,"P",{});var Yr=s(ze);bh=l(Yr,"The methods exposed below are relevant when modifying modules from the "),wa=a(Yr,"CODE",{});var _f=s(wa);Eh=l(_f,"huggingface_hub"),_f.forEach(o),$h=l(Yr,` library itself.
Using these shouldn\u2019t be necessary if you use `),ka=a(Yr,"CODE",{});var mf=s(ka);yh=l(mf,"huggingface_hub"),mf.forEach(o),wh=l(Yr," and you don\u2019t modify them."),Yr.forEach(o),cl=u(t),Ce=a(t,"DIV",{class:!0});var Zr=s(Ce);E(Ao.$$.fragment,Zr),kh=u(Zr),Ha=a(Zr,"P",{});var vf=s(Ha);Hh=l(vf,`Returns a logger with the specified name. This function is not supposed
to be directly accessed by library users.`),vf.forEach(o),jh=u(Zr),E(Vt.$$.fragment,Zr),Zr.forEach(o),pl=u(t),it=a(t,"H2",{class:!0});var gi=s(it);Bt=a(gi,"A",{id:!0,class:!0,href:!0});var bf=s(Bt);ja=a(bf,"SPAN",{});var Ef=s(ja);E(Io.$$.fragment,Ef),Ef.forEach(o),bf.forEach(o),xh=u(gi),xa=a(gi,"SPAN",{});var $f=s(xa);Ph=l($f,"Handling HTTP errors"),$f.forEach(o),gi.forEach(o),dl=u(t),Re=a(t,"P",{});var Rr=s(Re);Pa=a(Rr,"CODE",{});var yf=s(Pa);Th=l(yf,"huggingface_hub"),yf.forEach(o),Nh=l(Rr," defines its own HTTP errors to refine the "),Ta=a(Rr,"CODE",{});var wf=s(Ta);Dh=l(wf,"HTTPError"),wf.forEach(o),qh=l(Rr,` raised by
`),Na=a(Rr,"CODE",{});var kf=s(Na);Ch=l(kf,"requests"),kf.forEach(o),Rh=l(Rr," with additional information sent back by the server."),Rr.forEach(o),fl=u(t),ht=a(t,"H3",{class:!0});var ci=s(ht);Ut=a(ci,"A",{id:!0,class:!0,href:!0});var Hf=s(Ut);Da=a(Hf,"SPAN",{});var jf=s(Da);E(Fo.$$.fragment,jf),jf.forEach(o),Hf.forEach(o),Oh=u(ci),qa=a(ci,"SPAN",{});var xf=s(qa);Ah=l(xf,"Raise for status"),xf.forEach(o),ci.forEach(o),_l=u(t),de=a(t,"P",{});var Rt=s(de);Lr=a(Rt,"A",{href:!0});var Pf=s(Lr);Ih=l(Pf,"hf_raise_for_status()"),Pf.forEach(o),Fh=l(Rt,` is meant to be the central method to \u201Craise for status\u201D from any
request made to the Hub. It wraps the base `),Ca=a(Rt,"CODE",{});var Tf=s(Ca);Lh=l(Tf,"requests.raise_for_status"),Tf.forEach(o),Sh=l(Rt,` to provide
additional information. Any `),Ra=a(Rt,"CODE",{});var Nf=s(Ra);Vh=l(Nf,"HTTPError"),Nf.forEach(o),Bh=l(Rt," thrown is converted into a "),Oa=a(Rt,"CODE",{});var Df=s(Oa);Uh=l(Df,"HfHubHTTPError"),Df.forEach(o),Gh=l(Rt,"."),Rt.forEach(o),ml=u(t),E(Lo.$$.fragment,t),vl=u(t),oe=a(t,"DIV",{class:!0});var We=s(oe);E(So.$$.fragment,We),Mh=u(We),ut=a(We,"P",{});var Qr=s(ut);zh=l(Qr,"Internal version of "),Aa=a(Qr,"CODE",{});var qf=s(Aa);Wh=l(qf,"response.raise_for_status()"),qf.forEach(o),Xh=l(Qr,` that will refine a
potential HTTPError. Raised exception will be an instance of `),Ia=a(Qr,"CODE",{});var Cf=s(Ia);Kh=l(Cf,"HfHubHTTPError"),Cf.forEach(o),Jh=l(Qr,"."),Qr.forEach(o),Yh=u(We),Fa=a(We,"P",{});var Rf=s(Fa);Zh=l(Rf,`This helper is meant to be the unique method to raise_for_status when making a call
to the Hugging Face Hub.`),Rf.forEach(o),Qh=u(We),E(Gt.$$.fragment,We),eu=u(We),E(Mt.$$.fragment,We),We.forEach(o),bl=u(t),gt=a(t,"H3",{class:!0});var pi=s(gt);zt=a(pi,"A",{id:!0,class:!0,href:!0});var Of=s(zt);La=a(Of,"SPAN",{});var Af=s(La);E(Vo.$$.fragment,Af),Af.forEach(o),Of.forEach(o),tu=u(pi),Sa=a(pi,"SPAN",{});var If=s(Sa);ou=l(If,"HTTP errors"),If.forEach(o),pi.forEach(o),El=u(t),Wt=a(t,"P",{});var di=s(Wt);ru=l(di,"Here is a list of HTTP errors thrown in "),Va=a(di,"CODE",{});var Ff=s(Va);au=l(Ff,"huggingface_hub"),Ff.forEach(o),su=l(di,"."),di.forEach(o),$l=u(t),ct=a(t,"H4",{class:!0});var fi=s(ct);Xt=a(fi,"A",{id:!0,class:!0,href:!0});var Lf=s(Xt);Ba=a(Lf,"SPAN",{});var Sf=s(Ba);E(Bo.$$.fragment,Sf),Sf.forEach(o),Lf.forEach(o),nu=u(fi),Ua=a(fi,"SPAN",{});var Vf=s(Ua);lu=l(Vf,"HfHubHTTPError"),Vf.forEach(o),fi.forEach(o),yl=u(t),Uo=a(t,"P",{});var Kd=s(Uo);Ga=a(Kd,"CODE",{});var Bf=s(Ga);iu=l(Bf,"HfHubHTTPError"),Bf.forEach(o),hu=l(Kd,` is the parent class for any HF Hub HTTP error. It takes care of parsing
the server response and format the error message to provide as much information to the
user as possible.`),Kd.forEach(o),wl=u(t),L=a(t,"DIV",{class:!0});var ie=s(L);E(Go.$$.fragment,ie),uu=u(ie),Ma=a(ie,"P",{});var Uf=s(Ma);gu=l(Uf,"HTTPError to inherit from for any custom HTTP Error raised in HF Hub."),Uf.forEach(o),cu=u(ie),Mo=a(ie,"P",{});var _i=s(Mo);pu=l(_i,"Any HTTPError is converted at least into a "),za=a(_i,"CODE",{});var Gf=s(za);du=l(Gf,"HfHubHTTPError"),Gf.forEach(o),fu=l(_i,`. If some information is
sent back by the server, it will be added to the error message.`),_i.forEach(o),_u=u(ie),Wa=a(ie,"P",{});var Mf=s(Wa);mu=l(Mf,"Added details:"),Mf.forEach(o),vu=u(ie),pt=a(ie,"UL",{});var ea=s(pt);Xa=a(ea,"LI",{});var zf=s(Xa);bu=l(zf,"Request id from \u201CX-Request-Id\u201D header if exists."),zf.forEach(o),Eu=u(ea),Ka=a(ea,"LI",{});var Wf=s(Ka);$u=l(Wf,"Server error message from the header \u201CX-Error-Message\u201D."),Wf.forEach(o),yu=u(ea),Ja=a(ea,"LI",{});var Xf=s(Ja);wu=l(Xf,"Server error message if we can found one in the response body."),Xf.forEach(o),ea.forEach(o),ku=u(ie),E(Kt.$$.fragment,ie),Hu=u(ie),Jt=a(ie,"DIV",{class:!0});var mi=s(Jt);E(zo.$$.fragment,mi),ju=u(mi),Wo=a(mi,"P",{});var vi=s(Wo);xu=l(vi,"Append additional information to the "),Ya=a(vi,"CODE",{});var Kf=s(Ya);Pu=l(Kf,"HfHubHTTPError"),Kf.forEach(o),Tu=l(vi," initial message."),vi.forEach(o),mi.forEach(o),ie.forEach(o),kl=u(t),dt=a(t,"H4",{class:!0});var bi=s(dt);Yt=a(bi,"A",{id:!0,class:!0,href:!0});var Jf=s(Yt);Za=a(Jf,"SPAN",{});var Yf=s(Za);E(Xo.$$.fragment,Yf),Yf.forEach(o),Jf.forEach(o),Nu=u(bi),Qa=a(bi,"SPAN",{});var Zf=s(Qa);Du=l(Zf,"RepositoryNotFoundError"),Zf.forEach(o),bi.forEach(o),Hl=u(t),Oe=a(t,"DIV",{class:!0});var ta=s(Oe);E(Ko.$$.fragment,ta),qu=u(ta),es=a(ta,"P",{});var Qf=s(es);Cu=l(Qf,`Raised when trying to access a hf.co URL with an invalid repository name, or
with a private repo name the user does not have access to.`),Qf.forEach(o),Ru=u(ta),E(Zt.$$.fragment,ta),ta.forEach(o),jl=u(t),ft=a(t,"H4",{class:!0});var Ei=s(ft);Qt=a(Ei,"A",{id:!0,class:!0,href:!0});var e_=s(Qt);ts=a(e_,"SPAN",{});var t_=s(ts);E(Jo.$$.fragment,t_),t_.forEach(o),e_.forEach(o),Ou=u(Ei),os=a(Ei,"SPAN",{});var o_=s(os);Au=l(o_,"RevisionNotFoundError"),o_.forEach(o),Ei.forEach(o),xl=u(t),Ae=a(t,"DIV",{class:!0});var oa=s(Ae);E(Yo.$$.fragment,oa),Iu=u(oa),rs=a(oa,"P",{});var r_=s(rs);Fu=l(r_,`Raised when trying to access a hf.co URL with a valid repository but an invalid
revision.`),r_.forEach(o),Lu=u(oa),E(eo.$$.fragment,oa),oa.forEach(o),Pl=u(t),_t=a(t,"H4",{class:!0});var $i=s(_t);to=a($i,"A",{id:!0,class:!0,href:!0});var a_=s(to);as=a(a_,"SPAN",{});var s_=s(as);E(Zo.$$.fragment,s_),s_.forEach(o),a_.forEach(o),Su=u($i),ss=a($i,"SPAN",{});var n_=s(ss);Vu=l(n_,"EntryNotFoundError"),n_.forEach(o),$i.forEach(o),Tl=u(t),Ie=a(t,"DIV",{class:!0});var ra=s(Ie);E(Qo.$$.fragment,ra),Bu=u(ra),ns=a(ra,"P",{});var l_=s(ns);Uu=l(l_,`Raised when trying to access a hf.co URL with a valid repository and revision
but an invalid filename.`),l_.forEach(o),Gu=u(ra),E(oo.$$.fragment,ra),ra.forEach(o),Nl=u(t),mt=a(t,"H4",{class:!0});var yi=s(mt);ro=a(yi,"A",{id:!0,class:!0,href:!0});var i_=s(ro);ls=a(i_,"SPAN",{});var h_=s(ls);E(er.$$.fragment,h_),h_.forEach(o),i_.forEach(o),Mu=u(yi),is=a(yi,"SPAN",{});var u_=s(is);zu=l(u_,"BadRequestError"),u_.forEach(o),yi.forEach(o),Dl=u(t),Fe=a(t,"DIV",{class:!0});var aa=s(Fe);E(tr.$$.fragment,aa),Wu=u(aa),or=a(aa,"P",{});var wi=s(or);Xu=l(wi,"Raised by "),hs=a(wi,"CODE",{});var g_=s(hs);Ku=l(g_,"hf_raise_for_status"),g_.forEach(o),Ju=l(wi," when the server returns a HTTP 400 error."),wi.forEach(o),Yu=u(aa),E(ao.$$.fragment,aa),aa.forEach(o),ql=u(t),vt=a(t,"H4",{class:!0});var ki=s(vt);so=a(ki,"A",{id:!0,class:!0,href:!0});var c_=s(so);us=a(c_,"SPAN",{});var p_=s(us);E(rr.$$.fragment,p_),p_.forEach(o),c_.forEach(o),Zu=u(ki),gs=a(ki,"SPAN",{});var d_=s(gs);Qu=l(d_,"LocalEntryNotFoundError"),d_.forEach(o),ki.forEach(o),Cl=u(t),fe=a(t,"DIV",{class:!0});var bo=s(fe);E(ar.$$.fragment,bo),eg=u(bo),cs=a(bo,"P",{});var f_=s(cs);tg=l(f_,`Raised when trying to access a file that is not on the disk when network is
disabled or unavailable (connection issue). The entry may exist on the Hub.`),f_.forEach(o),og=u(bo),_e=a(bo,"P",{});var Xe=s(_e);rg=l(Xe,"Note: "),ps=a(Xe,"CODE",{});var __=s(ps);ag=l(__,"ValueError"),__.forEach(o),sg=l(Xe,` type is to ensure backward compatibility.
Note: `),ds=a(Xe,"CODE",{});var m_=s(ds);ng=l(m_,"LocalEntryNotFoundError"),m_.forEach(o),lg=l(Xe," derives from "),fs=a(Xe,"CODE",{});var v_=s(fs);ig=l(v_,"HTTPError"),v_.forEach(o),hg=l(Xe," because of "),_s=a(Xe,"CODE",{});var b_=s(_s);ug=l(b_,"EntryNotFoundError"),b_.forEach(o),gg=l(Xe,`
even when it is not a network issue.`),Xe.forEach(o),cg=u(bo),E(no.$$.fragment,bo),bo.forEach(o),Rl=u(t),bt=a(t,"H2",{class:!0});var Hi=s(bt);lo=a(Hi,"A",{id:!0,class:!0,href:!0});var E_=s(lo);ms=a(E_,"SPAN",{});var $_=s(ms);E(sr.$$.fragment,$_),$_.forEach(o),E_.forEach(o),pg=u(Hi),vs=a(Hi,"SPAN",{});var y_=s(vs);dg=l(y_,"Validators"),y_.forEach(o),Hi.forEach(o),Ol=u(t),Et=a(t,"P",{});var el=s(Et);bs=a(el,"CODE",{});var w_=s(bs);fg=l(w_,"huggingface_hub"),w_.forEach(o),_g=l(el,` include custom validators to validate method arguments automatically.
Validation is inspired by the work done in `),nr=a(el,"A",{href:!0,rel:!0});var k_=s(nr);mg=l(k_,"Pydantic"),k_.forEach(o),vg=l(el,`
to validate type hints but with more limited features.`),el.forEach(o),Al=u(t),$t=a(t,"H3",{class:!0});var ji=s($t);io=a(ji,"A",{id:!0,class:!0,href:!0});var H_=s(io);Es=a(H_,"SPAN",{});var j_=s(Es);E(lr.$$.fragment,j_),j_.forEach(o),H_.forEach(o),bg=u(ji),$s=a(ji,"SPAN",{});var x_=s($s);Eg=l(x_,"Generic decorator"),x_.forEach(o),ji.forEach(o),Il=u(t),yt=a(t,"P",{});var tl=s(yt);Sr=a(tl,"A",{href:!0});var P_=s(Sr);$g=l(P_,"validate_hf_hub_args()"),P_.forEach(o),yg=l(tl,` is a generic decorator to encapsulate
methods that have arguments following `),ys=a(tl,"CODE",{});var T_=s(ys);wg=l(T_,"huggingface_hub"),T_.forEach(o),kg=l(tl,`\u2019s naming. By default, all
arguments that has a validator implemented will be validated.`),tl.forEach(o),Fl=u(t),ho=a(t,"P",{});var xi=s(ho);Hg=l(xi,"If an input is not valid, a "),Vr=a(xi,"A",{href:!0});var N_=s(Vr);jg=l(N_,"HFValidationError"),N_.forEach(o),xg=l(xi,` is thrown. Only
the first non-valid value throws an error and stops the validation process.`),xi.forEach(o),Ll=u(t),Br=a(t,"P",{});var D_=s(Br);Pg=l(D_,"Usage:"),D_.forEach(o),Sl=u(t),E(ir.$$.fragment,t),Vl=u(t),wt=a(t,"H4",{class:!0});var Pi=s(wt);uo=a(Pi,"A",{id:!0,class:!0,href:!0});var q_=s(uo);ws=a(q_,"SPAN",{});var C_=s(ws);E(hr.$$.fragment,C_),C_.forEach(o),q_.forEach(o),Tg=u(Pi),ks=a(Pi,"SPAN",{});var R_=s(ks);Ng=l(R_,"validate_hf_hub_args"),R_.forEach(o),Pi.forEach(o),Bl=u(t),z=a(t,"DIV",{class:!0});var je=s(z);E(ur.$$.fragment,je),Dg=u(je),gr=a(je,"P",{});var Ti=s(gr);qg=l(Ti,"Validate values received as argument for any public method of "),Hs=a(Ti,"CODE",{});var O_=s(Hs);Cg=l(O_,"huggingface_hub"),O_.forEach(o),Rg=l(Ti,"."),Ti.forEach(o),Og=u(je),js=a(je,"P",{});var A_=s(js);Ag=l(A_,`The goal of this decorator is to harmonize validation of arguments reused
everywhere. By default, all defined validators are tested.`),A_.forEach(o),Ig=u(je),xs=a(je,"P",{});var I_=s(xs);Fg=l(I_,"Validators:"),I_.forEach(o),Lg=u(je),cr=a(je,"UL",{});var Ni=s(cr);we=a(Ni,"LI",{});var Ot=s(we);Ur=a(Ot,"A",{href:!0});var F_=s(Ur);Sg=l(F_,"validate_repo_id()"),F_.forEach(o),Vg=l(Ot,": "),Ps=a(Ot,"CODE",{});var L_=s(Ps);Bg=l(L_,"repo_id"),L_.forEach(o),Ug=l(Ot," must be "),Ts=a(Ot,"CODE",{});var S_=s(Ts);Gg=l(S_,'"repo_name"'),S_.forEach(o),Mg=l(Ot,`
or `),Ns=a(Ot,"CODE",{});var V_=s(Ns);zg=l(V_,'"namespace/repo_name"'),V_.forEach(o),Wg=l(Ot,". Namespace is a username or an organization."),Ot.forEach(o),Xg=u(Ni),ne=a(Ni,"LI",{});var Be=s(ne);Gr=a(Be,"A",{href:!0});var B_=s(Gr);Kg=l(B_,"smoothly_deprecate_use_auth_token()"),B_.forEach(o),Jg=l(Be,": Use "),Ds=a(Be,"CODE",{});var U_=s(Ds);Yg=l(U_,"token"),U_.forEach(o),Zg=l(Be,` instead of
`),qs=a(Be,"CODE",{});var G_=s(qs);Qg=l(G_,"use_auth_token"),G_.forEach(o),ec=l(Be," (only if "),Cs=a(Be,"CODE",{});var M_=s(Cs);tc=l(M_,"use_auth_token"),M_.forEach(o),oc=l(Be,` is not expected by the decorated
function - in practice, always the case in `),Rs=a(Be,"CODE",{});var z_=s(Rs);rc=l(z_,"huggingface_hub"),z_.forEach(o),ac=l(Be,")."),Be.forEach(o),Ni.forEach(o),sc=u(je),E(go.$$.fragment,je),je.forEach(o),Ul=u(t),kt=a(t,"H4",{class:!0});var Di=s(kt);co=a(Di,"A",{id:!0,class:!0,href:!0});var W_=s(co);Os=a(W_,"SPAN",{});var X_=s(Os);E(pr.$$.fragment,X_),X_.forEach(o),W_.forEach(o),nc=u(Di),As=a(Di,"SPAN",{});var K_=s(As);lc=l(K_,"HFValidationError"),K_.forEach(o),Di.forEach(o),Gl=u(t),Le=a(t,"DIV",{class:!0});var sa=s(Le);E(dr.$$.fragment,sa),ic=u(sa),fr=a(sa,"P",{});var qi=s(fr);hc=l(qi,"Generic exception thrown by "),Is=a(qi,"CODE",{});var J_=s(Is);uc=l(J_,"huggingface_hub"),J_.forEach(o),gc=l(qi," validators."),qi.forEach(o),cc=u(sa),_r=a(sa,"P",{});var Ci=s(_r);pc=l(Ci,"Inherits from "),mr=a(Ci,"A",{href:!0,rel:!0});var Y_=s(mr);Fs=a(Y_,"CODE",{});var Z_=s(Fs);dc=l(Z_,"ValueError"),Z_.forEach(o),Y_.forEach(o),fc=l(Ci,"."),Ci.forEach(o),sa.forEach(o),Ml=u(t),Ht=a(t,"H3",{class:!0});var Ri=s(Ht);po=a(Ri,"A",{id:!0,class:!0,href:!0});var Q_=s(po);Ls=a(Q_,"SPAN",{});var em=s(Ls);E(vr.$$.fragment,em),em.forEach(o),Q_.forEach(o),_c=u(Ri),Ss=a(Ri,"SPAN",{});var tm=s(Ss);mc=l(tm,"Argument validators"),tm.forEach(o),Ri.forEach(o),zl=u(t),Mr=a(t,"P",{});var om=s(Mr);vc=l(om,`Validators can also be used individually. Here is a list of all arguments that can be
validated.`),om.forEach(o),Wl=u(t),jt=a(t,"H4",{class:!0});var Oi=s(jt);fo=a(Oi,"A",{id:!0,class:!0,href:!0});var rm=s(fo);Vs=a(rm,"SPAN",{});var am=s(Vs);E(br.$$.fragment,am),am.forEach(o),rm.forEach(o),bc=u(Oi),Bs=a(Oi,"SPAN",{});var sm=s(Bs);Ec=l(sm,"repo_id"),sm.forEach(o),Oi.forEach(o),Xl=u(t),x=a(t,"DIV",{class:!0});var F=s(x);E(Er.$$.fragment,F),$c=u(F),$r=a(F,"P",{});var Ai=s($r);yc=l(Ai,"Validate "),Us=a(Ai,"CODE",{});var nm=s(Us);wc=l(nm,"repo_id"),nm.forEach(o),kc=l(Ai," is valid."),Ai.forEach(o),Hc=u(F),xt=a(F,"P",{});var na=s(xt);jc=l(na,`This is not meant to replace the proper validation made on the Hub but rather to
avoid local inconsistencies whenever possible (example: passing `),Gs=a(na,"CODE",{});var lm=s(Gs);xc=l(lm,"repo_type"),lm.forEach(o),Pc=l(na,` in the
`),Ms=a(na,"CODE",{});var im=s(Ms);Tc=l(im,"repo_id"),im.forEach(o),Nc=l(na," is forbidden)."),na.forEach(o),Dc=u(F),zs=a(F,"P",{});var hm=s(zs);qc=l(hm,"Rules:"),hm.forEach(o),Cc=u(F),Se=a(F,"UL",{});var Eo=s(Se);Ws=a(Eo,"LI",{});var um=s(Ws);Rc=l(um,"Between 1 and 96 characters."),um.forEach(o),Oc=u(Eo),Xs=a(Eo,"LI",{});var gm=s(Xs);Ac=l(gm,"Either \u201Crepo_name\u201D or \u201Cnamespace/repo_name\u201D"),gm.forEach(o),Ic=u(Eo),Ks=a(Eo,"LI",{});var cm=s(Ks);Fc=l(cm,"[a-zA-Z0-9] or \u201D-\u201D, \u201D_\u201D, \u201D.\u201D"),cm.forEach(o),Lc=u(Eo),Js=a(Eo,"LI",{});var pm=s(Js);Sc=l(pm,"\u201D\u2014\u201D and \u201D..\u201D are forbidden"),pm.forEach(o),Eo.forEach(o),Vc=u(F),ke=a(F,"P",{});var At=s(ke);Bc=l(At,"Valid: "),Ys=a(At,"CODE",{});var dm=s(Ys);Uc=l(dm,'"foo"'),dm.forEach(o),Gc=l(At,", "),Zs=a(At,"CODE",{});var fm=s(Zs);Mc=l(fm,'"foo/bar"'),fm.forEach(o),zc=l(At,", "),Qs=a(At,"CODE",{});var _m=s(Qs);Wc=l(_m,'"123"'),_m.forEach(o),Xc=l(At,", "),en=a(At,"CODE",{});var mm=s(en);Kc=l(mm,'"Foo-BAR_foo.bar123"'),mm.forEach(o),At.forEach(o),Jc=u(F),He=a(F,"P",{});var It=s(He);Yc=l(It,"Not valid: "),tn=a(It,"CODE",{});var vm=s(tn);Zc=l(vm,'"datasets/foo/bar"'),vm.forEach(o),Qc=l(It,", "),on=a(It,"CODE",{});var bm=s(on);ep=l(bm,'".repo_id"'),bm.forEach(o),tp=l(It,", "),rn=a(It,"CODE",{});var Em=s(rn);op=l(Em,'"foo--bar"'),Em.forEach(o),rp=l(It,", "),an=a(It,"CODE",{});var $m=s(an);ap=l($m,'"foo.git"'),$m.forEach(o),It.forEach(o),sp=u(F),E(_o.$$.fragment,F),np=u(F),yr=a(F,"P",{});var Ii=s(yr);lp=l(Ii,"Discussed in "),wr=a(Ii,"A",{href:!0,rel:!0});var ym=s(wr);ip=l(ym,"https://github.com/huggingface/huggingface_hub/issues/1008"),ym.forEach(o),hp=l(Ii,`.
In moon-landing (internal repository):`),Ii.forEach(o),up=u(F),kr=a(F,"UL",{});var Fi=s(kr);sn=a(Fi,"LI",{});var wm=s(sn);Hr=a(wm,"A",{href:!0,rel:!0});var km=s(Hr);gp=l(km,"https://github.com/huggingface/moon-landing/blob/main/server/lib/Names.ts#L27"),km.forEach(o),wm.forEach(o),cp=u(Fi),nn=a(Fi,"LI",{});var Hm=s(nn);jr=a(Hm,"A",{href:!0,rel:!0});var jm=s(jr);pp=l(jm,"https://github.com/huggingface/moon-landing/blob/main/server/views/components/NewRepoForm/NewRepoForm.svelte#L138"),jm.forEach(o),Hm.forEach(o),Fi.forEach(o),F.forEach(o),Kl=u(t),Pt=a(t,"H4",{class:!0});var Li=s(Pt);mo=a(Li,"A",{id:!0,class:!0,href:!0});var xm=s(mo);ln=a(xm,"SPAN",{});var Pm=s(ln);E(xr.$$.fragment,Pm),Pm.forEach(o),xm.forEach(o),dp=u(Li),hn=a(Li,"SPAN",{});var Tm=s(hn);fp=l(Tm,"smoothly_deprecate_use_auth_token"),Tm.forEach(o),Li.forEach(o),Jl=u(t),zr=a(t,"P",{});var Nm=s(zr);_p=l(Nm,"Not exactly a validator, but ran as well."),Nm.forEach(o),Yl=u(t),W=a(t,"DIV",{class:!0});var xe=s(W);E(Pr.$$.fragment,xe),mp=u(xe),Tt=a(xe,"P",{});var la=s(Tt);vp=l(la,"Smoothly deprecate "),un=a(la,"CODE",{});var Dm=s(un);bp=l(Dm,"use_auth_token"),Dm.forEach(o),Ep=l(la," in the "),gn=a(la,"CODE",{});var qm=s(gn);$p=l(qm,"huggingface_hub"),qm.forEach(o),yp=l(la," codebase."),la.forEach(o),wp=u(xe),Nt=a(xe,"P",{});var ia=s(Nt);kp=l(ia,"The long-term goal is to remove any mention of "),cn=a(ia,"CODE",{});var Cm=s(cn);Hp=l(Cm,"use_auth_token"),Cm.forEach(o),jp=l(ia,` in the codebase in
favor of a unique and less verbose `),pn=a(ia,"CODE",{});var Rm=s(pn);xp=l(Rm,"token"),Rm.forEach(o),Pp=l(ia," argument. This will be done a few steps:"),ia.forEach(o),Tp=u(xe),le=a(xe,"OL",{start:!0});var Ke=s(le);dn=a(Ke,"LI",{});var Om=s(dn);C=a(Om,"P",{});var U=s(C);Np=l(U,"Step 0: methods that require a read-access to the Hub use the "),fn=a(U,"CODE",{});var Am=s(fn);Dp=l(Am,"use_auth_token"),Am.forEach(o),qp=l(U,`
argument (`),_n=a(U,"CODE",{});var Im=s(_n);Cp=l(Im,"str"),Im.forEach(o),Rp=l(U,", "),mn=a(U,"CODE",{});var Fm=s(mn);Op=l(Fm,"bool"),Fm.forEach(o),Ap=l(U," or "),vn=a(U,"CODE",{});var Lm=s(vn);Ip=l(Lm,"None"),Lm.forEach(o),Fp=l(U,"). Methods requiring write-access have a "),bn=a(U,"CODE",{});var Sm=s(bn);Lp=l(Sm,"token"),Sm.forEach(o),Sp=l(U,`
argument (`),En=a(U,"CODE",{});var Vm=s(En);Vp=l(Vm,"str"),Vm.forEach(o),Bp=l(U,", "),$n=a(U,"CODE",{});var Bm=s($n);Up=l(Bm,"None"),Bm.forEach(o),Gp=l(U,`). This implicit rule exists to be able to not send the
token when not necessary (`),yn=a(U,"CODE",{});var Um=s(yn);Mp=l(Um,"use_auth_token=False"),Um.forEach(o),zp=l(U,") even if logged in."),U.forEach(o),Om.forEach(o),Wp=u(Ke),wn=a(Ke,"LI",{});var Gm=s(wn);R=a(Gm,"P",{});var G=s(R);Xp=l(G,"Step 1: we want to harmonize everything and use "),kn=a(G,"CODE",{});var Mm=s(kn);Kp=l(Mm,"token"),Mm.forEach(o),Jp=l(G,` everywhere (supporting
`),Hn=a(G,"CODE",{});var zm=s(Hn);Yp=l(zm,"token=False"),zm.forEach(o),Zp=l(G,` for read-only methods). In order not to break existing code, if
`),jn=a(G,"CODE",{});var Wm=s(jn);Qp=l(Wm,"use_auth_token"),Wm.forEach(o),ed=l(G," is passed to a function, the "),xn=a(G,"CODE",{});var Xm=s(xn);td=l(Xm,"use_auth_token"),Xm.forEach(o),od=l(G,` value is passed
as `),Pn=a(G,"CODE",{});var Km=s(Pn);rd=l(Km,"token"),Km.forEach(o),ad=l(G,` instead, without any warning.
a. Corner case: if both `),Tn=a(G,"CODE",{});var Jm=s(Tn);sd=l(Jm,"use_auth_token"),Jm.forEach(o),nd=l(G," and "),Nn=a(G,"CODE",{});var Ym=s(Nn);ld=l(Ym,"token"),Ym.forEach(o),id=l(G,` values are passed, a warning
is thrown and the `),Dn=a(G,"CODE",{});var Zm=s(Dn);hd=l(Zm,"use_auth_token"),Zm.forEach(o),ud=l(G," value is ignored."),G.forEach(o),Gm.forEach(o),gd=u(Ke),qn=a(Ke,"LI",{});var Qm=s(qn);Dt=a(Qm,"P",{});var ha=s(Dt);cd=l(ha,`Step 2: Once it is release, we should push downstream libraries to switch from
`),Cn=a(ha,"CODE",{});var ev=s(Cn);pd=l(ev,"use_auth_token"),ev.forEach(o),dd=l(ha," to "),Rn=a(ha,"CODE",{});var tv=s(Rn);fd=l(tv,"token"),tv.forEach(o),_d=l(ha,` as much as possible, but without throwing a warning
(e.g. manually create issues on the corresponding repos).`),ha.forEach(o),Qm.forEach(o),md=u(Ke),On=a(Ke,"LI",{});var ov=s(On);me=a(ov,"P",{});var Je=s(me);vd=l(Je,`Step 3: After a transitional period (6 months e.g. until April 2023?), we update
`),An=a(Je,"CODE",{});var rv=s(An);bd=l(rv,"huggingface_hub"),rv.forEach(o),Ed=l(Je," to throw a warning on "),In=a(Je,"CODE",{});var av=s(In);$d=l(av,"use_auth_token"),av.forEach(o),yd=l(Je,`. Hopefully, very few
users will be impacted as it would have already been fixed.
In addition, unit tests in `),Fn=a(Je,"CODE",{});var sv=s(Fn);wd=l(sv,"huggingface_hub"),sv.forEach(o),kd=l(Je,` must be adapted to expect warnings
to be thrown (but still use `),Ln=a(Je,"CODE",{});var nv=s(Ln);Hd=l(nv,"use_auth_token"),nv.forEach(o),jd=l(Je," as before)."),Je.forEach(o),ov.forEach(o),xd=u(Ke),Sn=a(Ke,"LI",{});var lv=s(Sn);Ve=a(lv,"P",{});var $o=s(Ve);Pd=l($o,`Step 4: After a normal deprecation cycle (3 releases ?), remove this validator.
`),Vn=a($o,"CODE",{});var iv=s(Vn);Td=l(iv,"use_auth_token"),iv.forEach(o),Nd=l($o,` will definitely not be supported.
In addition, we update unit tests in `),Bn=a($o,"CODE",{});var hv=s(Bn);Dd=l(hv,"huggingface_hub"),hv.forEach(o),qd=l($o," to use "),Un=a($o,"CODE",{});var uv=s(Un);Cd=l(uv,"token"),uv.forEach(o),Rd=l($o," everywhere."),$o.forEach(o),lv.forEach(o),Ke.forEach(o),Od=u(xe),Gn=a(xe,"P",{});var gv=s(Gn);Ad=l(gv,"This has been discussed in:"),gv.forEach(o),Id=u(xe),qt=a(xe,"UL",{});var ua=s(qt);Wr=a(ua,"LI",{});var Jd=s(Wr);Tr=a(Jd,"A",{href:!0,rel:!0});var cv=s(Tr);Fd=l(cv,"https://github.com/huggingface/huggingface_hub/issues/1094"),cv.forEach(o),Ld=l(Jd,"."),Jd.forEach(o),Sd=u(ua),Mn=a(ua,"LI",{});var pv=s(Mn);Nr=a(pv,"A",{href:!0,rel:!0});var dv=s(Nr);Vd=l(dv,"https://github.com/huggingface/huggingface_hub/pull/928"),dv.forEach(o),pv.forEach(o),Bd=u(ua),Xr=a(ua,"LI",{});var Yd=s(Xr);Ud=l(Yd,"(related) "),Dr=a(Yd,"A",{href:!0,rel:!0});var fv=s(Dr);Gd=l(fv,"https://github.com/huggingface/huggingface_hub/pull/1064"),fv.forEach(o),Yd.forEach(o),ua.forEach(o),xe.forEach(o),this.h()},h(){p(f,"name","hf:doc:metadata"),p(f,"content",JSON.stringify(Ov)),p(d,"id","utilities"),p(d,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(d,"href","#utilities"),p(v,"class","relative group"),p(A,"id","huggingface_hub.utils.logging.get_verbosity"),p(A,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(A,"href","#huggingface_hub.utils.logging.get_verbosity"),p(M,"class","relative group"),p(qe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(et,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(tt,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(ot,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(rt,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(at,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(st,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(nt,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(St,"id","huggingface_hub.utils.logging.get_logger"),p(St,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(St,"href","#huggingface_hub.utils.logging.get_logger"),p(lt,"class","relative group"),p(Ce,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(Bt,"id","handling-http-errors"),p(Bt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(Bt,"href","#handling-http-errors"),p(it,"class","relative group"),p(Ut,"id","huggingface_hub.utils.hf_raise_for_status"),p(Ut,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(Ut,"href","#huggingface_hub.utils.hf_raise_for_status"),p(ht,"class","relative group"),p(Lr,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/utilities#huggingface_hub.utils.hf_raise_for_status"),p(oe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(zt,"id","http-errors"),p(zt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(zt,"href","#http-errors"),p(gt,"class","relative group"),p(Xt,"id","huggingface_hub.utils.HfHubHTTPError"),p(Xt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(Xt,"href","#huggingface_hub.utils.HfHubHTTPError"),p(ct,"class","relative group"),p(Jt,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(L,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(Yt,"id","huggingface_hub.utils.RepositoryNotFoundError"),p(Yt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(Yt,"href","#huggingface_hub.utils.RepositoryNotFoundError"),p(dt,"class","relative group"),p(Oe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(Qt,"id","huggingface_hub.utils.RevisionNotFoundError"),p(Qt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(Qt,"href","#huggingface_hub.utils.RevisionNotFoundError"),p(ft,"class","relative group"),p(Ae,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(to,"id","huggingface_hub.utils.EntryNotFoundError"),p(to,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(to,"href","#huggingface_hub.utils.EntryNotFoundError"),p(_t,"class","relative group"),p(Ie,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(ro,"id","huggingface_hub.utils.BadRequestError"),p(ro,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(ro,"href","#huggingface_hub.utils.BadRequestError"),p(mt,"class","relative group"),p(Fe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(so,"id","huggingface_hub.utils.LocalEntryNotFoundError"),p(so,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(so,"href","#huggingface_hub.utils.LocalEntryNotFoundError"),p(vt,"class","relative group"),p(fe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(lo,"id","validators"),p(lo,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(lo,"href","#validators"),p(bt,"class","relative group"),p(nr,"href","https://pydantic-docs.helpmanual.io/"),p(nr,"rel","nofollow"),p(io,"id","generic-decorator"),p(io,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(io,"href","#generic-decorator"),p($t,"class","relative group"),p(Sr,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/utilities#huggingface_hub.utils.validate_hf_hub_args"),p(Vr,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/utilities#huggingface_hub.utils.HFValidationError"),p(uo,"id","huggingface_hub.utils.validate_hf_hub_args"),p(uo,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(uo,"href","#huggingface_hub.utils.validate_hf_hub_args"),p(wt,"class","relative group"),p(Ur,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/utilities#huggingface_hub.utils.validate_repo_id"),p(Gr,"href","/docs/huggingface_hub/v0.11.0.rc1/en/package_reference/utilities#huggingface_hub.utils.smoothly_deprecate_use_auth_token"),p(z,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(co,"id","huggingface_hub.utils.HFValidationError"),p(co,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(co,"href","#huggingface_hub.utils.HFValidationError"),p(kt,"class","relative group"),p(mr,"href","https://docs.python.org/3/library/exceptions.html#ValueError"),p(mr,"rel","nofollow"),p(Le,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(po,"id","argument-validators"),p(po,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(po,"href","#argument-validators"),p(Ht,"class","relative group"),p(fo,"id","huggingface_hub.utils.validate_repo_id"),p(fo,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(fo,"href","#huggingface_hub.utils.validate_repo_id"),p(jt,"class","relative group"),p(wr,"href","https://github.com/huggingface/huggingface_hub/issues/1008"),p(wr,"rel","nofollow"),p(Hr,"href","https://github.com/huggingface/moon-landing/blob/main/server/lib/Names.ts#L27"),p(Hr,"rel","nofollow"),p(jr,"href","https://github.com/huggingface/moon-landing/blob/main/server/views/components/NewRepoForm/NewRepoForm.svelte#L138"),p(jr,"rel","nofollow"),p(x,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),p(mo,"id","huggingface_hub.utils.smoothly_deprecate_use_auth_token"),p(mo,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(mo,"href","#huggingface_hub.utils.smoothly_deprecate_use_auth_token"),p(Pt,"class","relative group"),p(le,"start","0"),p(Tr,"href","https://github.com/huggingface/huggingface_hub/issues/1094"),p(Tr,"rel","nofollow"),p(Nr,"href","https://github.com/huggingface/huggingface_hub/pull/928"),p(Nr,"rel","nofollow"),p(Dr,"href","https://github.com/huggingface/huggingface_hub/pull/1064"),p(Dr,"rel","nofollow"),p(W,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(t,g){e(document.head,f),c(t,H,g),c(t,v,g),e(v,d),e(d,m),$(i,m,null),e(v,_),e(v,ue),e(ue,Z),c(t,ve,g),c(t,M,g),e(M,A),e(A,Q),$(ee,Q,null),e(M,Pe),e(M,D),e(D,X),e(D,ge),e(ge,Te),c(t,re,g),c(t,q,g),e(q,ae),e(q,te),e(te,ce),e(q,Ne),e(q,K),e(K,J),e(q,pe),c(t,be,g),$(T,t,g),c(t,V,g),c(t,P,g),e(P,Ee),c(t,De,g),$(N,t,g),c(t,se,g),c(t,I,g),e(I,Y),c(t,Ue,g),c(t,B,g),e(B,$e),e($e,ye),e(ye,Qe),e($e,Ge),e(B,Or),e(B,Me),e(Me,Ft),e(Ft,yo),e(Me,Ar),e(B,Si),e(B,Ir),e(Ir,ga),e(ga,Vi),e(Ir,Bi),e(B,Ui),e(B,Fr),e(Fr,ca),e(ca,Gi),e(Fr,Mi),c(t,ol,g),c(t,qe,g),$(wo,qe,null),e(qe,zi),e(qe,pa),e(pa,Wi),e(qe,Xi),$(Lt,qe,null),c(t,rl,g),c(t,et,g),$(ko,et,null),e(et,Ki),e(et,da),e(da,Ji),c(t,al,g),c(t,tt,g),$(Ho,tt,null),e(tt,Yi),e(tt,jo),e(jo,Zi),e(jo,fa),e(fa,Qi),e(jo,eh),c(t,sl,g),c(t,ot,g),$(xo,ot,null),e(ot,th),e(ot,Po),e(Po,oh),e(Po,_a),e(_a,rh),e(Po,ah),c(t,nl,g),c(t,rt,g),$(To,rt,null),e(rt,sh),e(rt,No),e(No,nh),e(No,ma),e(ma,lh),e(No,ih),c(t,ll,g),c(t,at,g),$(Do,at,null),e(at,hh),e(at,qo),e(qo,uh),e(qo,va),e(va,gh),e(qo,ch),c(t,il,g),c(t,st,g),$(Co,st,null),e(st,ph),e(st,ba),e(ba,dh),c(t,hl,g),c(t,nt,g),$(Ro,nt,null),e(nt,fh),e(nt,Ea),e(Ea,_h),c(t,ul,g),c(t,lt,g),e(lt,St),e(St,$a),$(Oo,$a,null),e(lt,mh),e(lt,ya),e(ya,vh),c(t,gl,g),c(t,ze,g),e(ze,bh),e(ze,wa),e(wa,Eh),e(ze,$h),e(ze,ka),e(ka,yh),e(ze,wh),c(t,cl,g),c(t,Ce,g),$(Ao,Ce,null),e(Ce,kh),e(Ce,Ha),e(Ha,Hh),e(Ce,jh),$(Vt,Ce,null),c(t,pl,g),c(t,it,g),e(it,Bt),e(Bt,ja),$(Io,ja,null),e(it,xh),e(it,xa),e(xa,Ph),c(t,dl,g),c(t,Re,g),e(Re,Pa),e(Pa,Th),e(Re,Nh),e(Re,Ta),e(Ta,Dh),e(Re,qh),e(Re,Na),e(Na,Ch),e(Re,Rh),c(t,fl,g),c(t,ht,g),e(ht,Ut),e(Ut,Da),$(Fo,Da,null),e(ht,Oh),e(ht,qa),e(qa,Ah),c(t,_l,g),c(t,de,g),e(de,Lr),e(Lr,Ih),e(de,Fh),e(de,Ca),e(Ca,Lh),e(de,Sh),e(de,Ra),e(Ra,Vh),e(de,Bh),e(de,Oa),e(Oa,Uh),e(de,Gh),c(t,ml,g),$(Lo,t,g),c(t,vl,g),c(t,oe,g),$(So,oe,null),e(oe,Mh),e(oe,ut),e(ut,zh),e(ut,Aa),e(Aa,Wh),e(ut,Xh),e(ut,Ia),e(Ia,Kh),e(ut,Jh),e(oe,Yh),e(oe,Fa),e(Fa,Zh),e(oe,Qh),$(Gt,oe,null),e(oe,eu),$(Mt,oe,null),c(t,bl,g),c(t,gt,g),e(gt,zt),e(zt,La),$(Vo,La,null),e(gt,tu),e(gt,Sa),e(Sa,ou),c(t,El,g),c(t,Wt,g),e(Wt,ru),e(Wt,Va),e(Va,au),e(Wt,su),c(t,$l,g),c(t,ct,g),e(ct,Xt),e(Xt,Ba),$(Bo,Ba,null),e(ct,nu),e(ct,Ua),e(Ua,lu),c(t,yl,g),c(t,Uo,g),e(Uo,Ga),e(Ga,iu),e(Uo,hu),c(t,wl,g),c(t,L,g),$(Go,L,null),e(L,uu),e(L,Ma),e(Ma,gu),e(L,cu),e(L,Mo),e(Mo,pu),e(Mo,za),e(za,du),e(Mo,fu),e(L,_u),e(L,Wa),e(Wa,mu),e(L,vu),e(L,pt),e(pt,Xa),e(Xa,bu),e(pt,Eu),e(pt,Ka),e(Ka,$u),e(pt,yu),e(pt,Ja),e(Ja,wu),e(L,ku),$(Kt,L,null),e(L,Hu),e(L,Jt),$(zo,Jt,null),e(Jt,ju),e(Jt,Wo),e(Wo,xu),e(Wo,Ya),e(Ya,Pu),e(Wo,Tu),c(t,kl,g),c(t,dt,g),e(dt,Yt),e(Yt,Za),$(Xo,Za,null),e(dt,Nu),e(dt,Qa),e(Qa,Du),c(t,Hl,g),c(t,Oe,g),$(Ko,Oe,null),e(Oe,qu),e(Oe,es),e(es,Cu),e(Oe,Ru),$(Zt,Oe,null),c(t,jl,g),c(t,ft,g),e(ft,Qt),e(Qt,ts),$(Jo,ts,null),e(ft,Ou),e(ft,os),e(os,Au),c(t,xl,g),c(t,Ae,g),$(Yo,Ae,null),e(Ae,Iu),e(Ae,rs),e(rs,Fu),e(Ae,Lu),$(eo,Ae,null),c(t,Pl,g),c(t,_t,g),e(_t,to),e(to,as),$(Zo,as,null),e(_t,Su),e(_t,ss),e(ss,Vu),c(t,Tl,g),c(t,Ie,g),$(Qo,Ie,null),e(Ie,Bu),e(Ie,ns),e(ns,Uu),e(Ie,Gu),$(oo,Ie,null),c(t,Nl,g),c(t,mt,g),e(mt,ro),e(ro,ls),$(er,ls,null),e(mt,Mu),e(mt,is),e(is,zu),c(t,Dl,g),c(t,Fe,g),$(tr,Fe,null),e(Fe,Wu),e(Fe,or),e(or,Xu),e(or,hs),e(hs,Ku),e(or,Ju),e(Fe,Yu),$(ao,Fe,null),c(t,ql,g),c(t,vt,g),e(vt,so),e(so,us),$(rr,us,null),e(vt,Zu),e(vt,gs),e(gs,Qu),c(t,Cl,g),c(t,fe,g),$(ar,fe,null),e(fe,eg),e(fe,cs),e(cs,tg),e(fe,og),e(fe,_e),e(_e,rg),e(_e,ps),e(ps,ag),e(_e,sg),e(_e,ds),e(ds,ng),e(_e,lg),e(_e,fs),e(fs,ig),e(_e,hg),e(_e,_s),e(_s,ug),e(_e,gg),e(fe,cg),$(no,fe,null),c(t,Rl,g),c(t,bt,g),e(bt,lo),e(lo,ms),$(sr,ms,null),e(bt,pg),e(bt,vs),e(vs,dg),c(t,Ol,g),c(t,Et,g),e(Et,bs),e(bs,fg),e(Et,_g),e(Et,nr),e(nr,mg),e(Et,vg),c(t,Al,g),c(t,$t,g),e($t,io),e(io,Es),$(lr,Es,null),e($t,bg),e($t,$s),e($s,Eg),c(t,Il,g),c(t,yt,g),e(yt,Sr),e(Sr,$g),e(yt,yg),e(yt,ys),e(ys,wg),e(yt,kg),c(t,Fl,g),c(t,ho,g),e(ho,Hg),e(ho,Vr),e(Vr,jg),e(ho,xg),c(t,Ll,g),c(t,Br,g),e(Br,Pg),c(t,Sl,g),$(ir,t,g),c(t,Vl,g),c(t,wt,g),e(wt,uo),e(uo,ws),$(hr,ws,null),e(wt,Tg),e(wt,ks),e(ks,Ng),c(t,Bl,g),c(t,z,g),$(ur,z,null),e(z,Dg),e(z,gr),e(gr,qg),e(gr,Hs),e(Hs,Cg),e(gr,Rg),e(z,Og),e(z,js),e(js,Ag),e(z,Ig),e(z,xs),e(xs,Fg),e(z,Lg),e(z,cr),e(cr,we),e(we,Ur),e(Ur,Sg),e(we,Vg),e(we,Ps),e(Ps,Bg),e(we,Ug),e(we,Ts),e(Ts,Gg),e(we,Mg),e(we,Ns),e(Ns,zg),e(we,Wg),e(cr,Xg),e(cr,ne),e(ne,Gr),e(Gr,Kg),e(ne,Jg),e(ne,Ds),e(Ds,Yg),e(ne,Zg),e(ne,qs),e(qs,Qg),e(ne,ec),e(ne,Cs),e(Cs,tc),e(ne,oc),e(ne,Rs),e(Rs,rc),e(ne,ac),e(z,sc),$(go,z,null),c(t,Ul,g),c(t,kt,g),e(kt,co),e(co,Os),$(pr,Os,null),e(kt,nc),e(kt,As),e(As,lc),c(t,Gl,g),c(t,Le,g),$(dr,Le,null),e(Le,ic),e(Le,fr),e(fr,hc),e(fr,Is),e(Is,uc),e(fr,gc),e(Le,cc),e(Le,_r),e(_r,pc),e(_r,mr),e(mr,Fs),e(Fs,dc),e(_r,fc),c(t,Ml,g),c(t,Ht,g),e(Ht,po),e(po,Ls),$(vr,Ls,null),e(Ht,_c),e(Ht,Ss),e(Ss,mc),c(t,zl,g),c(t,Mr,g),e(Mr,vc),c(t,Wl,g),c(t,jt,g),e(jt,fo),e(fo,Vs),$(br,Vs,null),e(jt,bc),e(jt,Bs),e(Bs,Ec),c(t,Xl,g),c(t,x,g),$(Er,x,null),e(x,$c),e(x,$r),e($r,yc),e($r,Us),e(Us,wc),e($r,kc),e(x,Hc),e(x,xt),e(xt,jc),e(xt,Gs),e(Gs,xc),e(xt,Pc),e(xt,Ms),e(Ms,Tc),e(xt,Nc),e(x,Dc),e(x,zs),e(zs,qc),e(x,Cc),e(x,Se),e(Se,Ws),e(Ws,Rc),e(Se,Oc),e(Se,Xs),e(Xs,Ac),e(Se,Ic),e(Se,Ks),e(Ks,Fc),e(Se,Lc),e(Se,Js),e(Js,Sc),e(x,Vc),e(x,ke),e(ke,Bc),e(ke,Ys),e(Ys,Uc),e(ke,Gc),e(ke,Zs),e(Zs,Mc),e(ke,zc),e(ke,Qs),e(Qs,Wc),e(ke,Xc),e(ke,en),e(en,Kc),e(x,Jc),e(x,He),e(He,Yc),e(He,tn),e(tn,Zc),e(He,Qc),e(He,on),e(on,ep),e(He,tp),e(He,rn),e(rn,op),e(He,rp),e(He,an),e(an,ap),e(x,sp),$(_o,x,null),e(x,np),e(x,yr),e(yr,lp),e(yr,wr),e(wr,ip),e(yr,hp),e(x,up),e(x,kr),e(kr,sn),e(sn,Hr),e(Hr,gp),e(kr,cp),e(kr,nn),e(nn,jr),e(jr,pp),c(t,Kl,g),c(t,Pt,g),e(Pt,mo),e(mo,ln),$(xr,ln,null),e(Pt,dp),e(Pt,hn),e(hn,fp),c(t,Jl,g),c(t,zr,g),e(zr,_p),c(t,Yl,g),c(t,W,g),$(Pr,W,null),e(W,mp),e(W,Tt),e(Tt,vp),e(Tt,un),e(un,bp),e(Tt,Ep),e(Tt,gn),e(gn,$p),e(Tt,yp),e(W,wp),e(W,Nt),e(Nt,kp),e(Nt,cn),e(cn,Hp),e(Nt,jp),e(Nt,pn),e(pn,xp),e(Nt,Pp),e(W,Tp),e(W,le),e(le,dn),e(dn,C),e(C,Np),e(C,fn),e(fn,Dp),e(C,qp),e(C,_n),e(_n,Cp),e(C,Rp),e(C,mn),e(mn,Op),e(C,Ap),e(C,vn),e(vn,Ip),e(C,Fp),e(C,bn),e(bn,Lp),e(C,Sp),e(C,En),e(En,Vp),e(C,Bp),e(C,$n),e($n,Up),e(C,Gp),e(C,yn),e(yn,Mp),e(C,zp),e(le,Wp),e(le,wn),e(wn,R),e(R,Xp),e(R,kn),e(kn,Kp),e(R,Jp),e(R,Hn),e(Hn,Yp),e(R,Zp),e(R,jn),e(jn,Qp),e(R,ed),e(R,xn),e(xn,td),e(R,od),e(R,Pn),e(Pn,rd),e(R,ad),e(R,Tn),e(Tn,sd),e(R,nd),e(R,Nn),e(Nn,ld),e(R,id),e(R,Dn),e(Dn,hd),e(R,ud),e(le,gd),e(le,qn),e(qn,Dt),e(Dt,cd),e(Dt,Cn),e(Cn,pd),e(Dt,dd),e(Dt,Rn),e(Rn,fd),e(Dt,_d),e(le,md),e(le,On),e(On,me),e(me,vd),e(me,An),e(An,bd),e(me,Ed),e(me,In),e(In,$d),e(me,yd),e(me,Fn),e(Fn,wd),e(me,kd),e(me,Ln),e(Ln,Hd),e(me,jd),e(le,xd),e(le,Sn),e(Sn,Ve),e(Ve,Pd),e(Ve,Vn),e(Vn,Td),e(Ve,Nd),e(Ve,Bn),e(Bn,Dd),e(Ve,qd),e(Ve,Un),e(Un,Cd),e(Ve,Rd),e(W,Od),e(W,Gn),e(Gn,Ad),e(W,Id),e(W,qt),e(qt,Wr),e(Wr,Tr),e(Tr,Fd),e(Wr,Ld),e(qt,Sd),e(qt,Mn),e(Mn,Nr),e(Nr,Vd),e(qt,Bd),e(qt,Xr),e(Xr,Ud),e(Xr,Dr),e(Dr,Gd),Zl=!0},p(t,[g]){const qr={};g&2&&(qr.$$scope={dirty:g,ctx:t}),Lt.$set(qr);const zn={};g&2&&(zn.$$scope={dirty:g,ctx:t}),Vt.$set(zn);const Wn={};g&2&&(Wn.$$scope={dirty:g,ctx:t}),Gt.$set(Wn);const Xn={};g&2&&(Xn.$$scope={dirty:g,ctx:t}),Mt.$set(Xn);const Cr={};g&2&&(Cr.$$scope={dirty:g,ctx:t}),Kt.$set(Cr);const Kn={};g&2&&(Kn.$$scope={dirty:g,ctx:t}),Zt.$set(Kn);const Jn={};g&2&&(Jn.$$scope={dirty:g,ctx:t}),eo.$set(Jn);const Kr={};g&2&&(Kr.$$scope={dirty:g,ctx:t}),oo.$set(Kr);const Yn={};g&2&&(Yn.$$scope={dirty:g,ctx:t}),ao.$set(Yn);const Ct={};g&2&&(Ct.$$scope={dirty:g,ctx:t}),no.$set(Ct);const Zn={};g&2&&(Zn.$$scope={dirty:g,ctx:t}),go.$set(Zn);const Qn={};g&2&&(Qn.$$scope={dirty:g,ctx:t}),_o.$set(Qn)},i(t){Zl||(y(i.$$.fragment,t),y(ee.$$.fragment,t),y(T.$$.fragment,t),y(N.$$.fragment,t),y(wo.$$.fragment,t),y(Lt.$$.fragment,t),y(ko.$$.fragment,t),y(Ho.$$.fragment,t),y(xo.$$.fragment,t),y(To.$$.fragment,t),y(Do.$$.fragment,t),y(Co.$$.fragment,t),y(Ro.$$.fragment,t),y(Oo.$$.fragment,t),y(Ao.$$.fragment,t),y(Vt.$$.fragment,t),y(Io.$$.fragment,t),y(Fo.$$.fragment,t),y(Lo.$$.fragment,t),y(So.$$.fragment,t),y(Gt.$$.fragment,t),y(Mt.$$.fragment,t),y(Vo.$$.fragment,t),y(Bo.$$.fragment,t),y(Go.$$.fragment,t),y(Kt.$$.fragment,t),y(zo.$$.fragment,t),y(Xo.$$.fragment,t),y(Ko.$$.fragment,t),y(Zt.$$.fragment,t),y(Jo.$$.fragment,t),y(Yo.$$.fragment,t),y(eo.$$.fragment,t),y(Zo.$$.fragment,t),y(Qo.$$.fragment,t),y(oo.$$.fragment,t),y(er.$$.fragment,t),y(tr.$$.fragment,t),y(ao.$$.fragment,t),y(rr.$$.fragment,t),y(ar.$$.fragment,t),y(no.$$.fragment,t),y(sr.$$.fragment,t),y(lr.$$.fragment,t),y(ir.$$.fragment,t),y(hr.$$.fragment,t),y(ur.$$.fragment,t),y(go.$$.fragment,t),y(pr.$$.fragment,t),y(dr.$$.fragment,t),y(vr.$$.fragment,t),y(br.$$.fragment,t),y(Er.$$.fragment,t),y(_o.$$.fragment,t),y(xr.$$.fragment,t),y(Pr.$$.fragment,t),Zl=!0)},o(t){w(i.$$.fragment,t),w(ee.$$.fragment,t),w(T.$$.fragment,t),w(N.$$.fragment,t),w(wo.$$.fragment,t),w(Lt.$$.fragment,t),w(ko.$$.fragment,t),w(Ho.$$.fragment,t),w(xo.$$.fragment,t),w(To.$$.fragment,t),w(Do.$$.fragment,t),w(Co.$$.fragment,t),w(Ro.$$.fragment,t),w(Oo.$$.fragment,t),w(Ao.$$.fragment,t),w(Vt.$$.fragment,t),w(Io.$$.fragment,t),w(Fo.$$.fragment,t),w(Lo.$$.fragment,t),w(So.$$.fragment,t),w(Gt.$$.fragment,t),w(Mt.$$.fragment,t),w(Vo.$$.fragment,t),w(Bo.$$.fragment,t),w(Go.$$.fragment,t),w(Kt.$$.fragment,t),w(zo.$$.fragment,t),w(Xo.$$.fragment,t),w(Ko.$$.fragment,t),w(Zt.$$.fragment,t),w(Jo.$$.fragment,t),w(Yo.$$.fragment,t),w(eo.$$.fragment,t),w(Zo.$$.fragment,t),w(Qo.$$.fragment,t),w(oo.$$.fragment,t),w(er.$$.fragment,t),w(tr.$$.fragment,t),w(ao.$$.fragment,t),w(rr.$$.fragment,t),w(ar.$$.fragment,t),w(no.$$.fragment,t),w(sr.$$.fragment,t),w(lr.$$.fragment,t),w(ir.$$.fragment,t),w(hr.$$.fragment,t),w(ur.$$.fragment,t),w(go.$$.fragment,t),w(pr.$$.fragment,t),w(dr.$$.fragment,t),w(vr.$$.fragment,t),w(br.$$.fragment,t),w(Er.$$.fragment,t),w(_o.$$.fragment,t),w(xr.$$.fragment,t),w(Pr.$$.fragment,t),Zl=!1},d(t){o(f),t&&o(H),t&&o(v),k(i),t&&o(ve),t&&o(M),k(ee),t&&o(re),t&&o(q),t&&o(be),k(T,t),t&&o(V),t&&o(P),t&&o(De),k(N,t),t&&o(se),t&&o(I),t&&o(Ue),t&&o(B),t&&o(ol),t&&o(qe),k(wo),k(Lt),t&&o(rl),t&&o(et),k(ko),t&&o(al),t&&o(tt),k(Ho),t&&o(sl),t&&o(ot),k(xo),t&&o(nl),t&&o(rt),k(To),t&&o(ll),t&&o(at),k(Do),t&&o(il),t&&o(st),k(Co),t&&o(hl),t&&o(nt),k(Ro),t&&o(ul),t&&o(lt),k(Oo),t&&o(gl),t&&o(ze),t&&o(cl),t&&o(Ce),k(Ao),k(Vt),t&&o(pl),t&&o(it),k(Io),t&&o(dl),t&&o(Re),t&&o(fl),t&&o(ht),k(Fo),t&&o(_l),t&&o(de),t&&o(ml),k(Lo,t),t&&o(vl),t&&o(oe),k(So),k(Gt),k(Mt),t&&o(bl),t&&o(gt),k(Vo),t&&o(El),t&&o(Wt),t&&o($l),t&&o(ct),k(Bo),t&&o(yl),t&&o(Uo),t&&o(wl),t&&o(L),k(Go),k(Kt),k(zo),t&&o(kl),t&&o(dt),k(Xo),t&&o(Hl),t&&o(Oe),k(Ko),k(Zt),t&&o(jl),t&&o(ft),k(Jo),t&&o(xl),t&&o(Ae),k(Yo),k(eo),t&&o(Pl),t&&o(_t),k(Zo),t&&o(Tl),t&&o(Ie),k(Qo),k(oo),t&&o(Nl),t&&o(mt),k(er),t&&o(Dl),t&&o(Fe),k(tr),k(ao),t&&o(ql),t&&o(vt),k(rr),t&&o(Cl),t&&o(fe),k(ar),k(no),t&&o(Rl),t&&o(bt),k(sr),t&&o(Ol),t&&o(Et),t&&o(Al),t&&o($t),k(lr),t&&o(Il),t&&o(yt),t&&o(Fl),t&&o(ho),t&&o(Ll),t&&o(Br),t&&o(Sl),k(ir,t),t&&o(Vl),t&&o(wt),k(hr),t&&o(Bl),t&&o(z),k(ur),k(go),t&&o(Ul),t&&o(kt),k(pr),t&&o(Gl),t&&o(Le),k(dr),t&&o(Ml),t&&o(Ht),k(vr),t&&o(zl),t&&o(Mr),t&&o(Wl),t&&o(jt),k(br),t&&o(Xl),t&&o(x),k(Er),k(_o),t&&o(Kl),t&&o(Pt),k(xr),t&&o(Jl),t&&o(zr),t&&o(Yl),t&&o(W),k(Pr)}}}const Ov={local:"utilities",sections:[{local:"huggingface_hub.utils.logging.get_verbosity",sections:[{local:"huggingface_hub.utils.logging.get_logger",title:"Repo-specific helper methods"}],title:"Controlling the logging of `huggingface_hub`"},{local:"handling-http-errors",sections:[{local:"huggingface_hub.utils.hf_raise_for_status",title:"Raise for status"},{local:"http-errors",sections:[{local:"huggingface_hub.utils.HfHubHTTPError",title:"HfHubHTTPError"},{local:"huggingface_hub.utils.RepositoryNotFoundError",title:"RepositoryNotFoundError"},{local:"huggingface_hub.utils.RevisionNotFoundError",title:"RevisionNotFoundError"},{local:"huggingface_hub.utils.EntryNotFoundError",title:"EntryNotFoundError"},{local:"huggingface_hub.utils.BadRequestError",title:"BadRequestError"},{local:"huggingface_hub.utils.LocalEntryNotFoundError",title:"LocalEntryNotFoundError"}],title:"HTTP errors"}],title:"Handling HTTP errors"},{local:"validators",sections:[{local:"generic-decorator",sections:[{local:"huggingface_hub.utils.validate_hf_hub_args",title:"validate_hf_hub_args"},{local:"huggingface_hub.utils.HFValidationError",title:"HFValidationError"}],title:"Generic decorator"},{local:"argument-validators",sections:[{local:"huggingface_hub.utils.validate_repo_id",title:"repo_id"},{local:"huggingface_hub.utils.smoothly_deprecate_use_auth_token",title:"smoothly_deprecate_use_auth_token"}],title:"Argument validators"}],title:"Validators"}],title:"Utilities"};function Av(j){return $v(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Uv extends mv{constructor(f){super();vv(this,f,Av,Rv,bv,{})}}export{Uv as default,Ov as metadata};
