import{S as tn,i as nn,s as ln,e as n,k as h,w as k,t,M as on,c as l,d as a,m as p,a as o,x as $,h as i,b as r,G as s,g as c,y as P,L as rn,q as H,o as R,B as x,v as un}from"../chunks/vendor-hf-doc-builder.js";import{I as ms}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as vs}from"../chunks/CodeBlock-hf-doc-builder.js";function cn(Kt){let T,bs,I,O,Be,K,Zs,ze,ea,ws,w,sa,Ge,aa,ta,Q,ia,na,Es,C,W,Je,X,la,Ke,oa,qs,V,ra,Qe,ua,ca,As,Z,ys,b,Xe,ha,pa,ee,fa,da,ce,_a,ga,js,se,Ds,m,ma,he,va,ba,pe,wa,Ea,fe,qa,Aa,ks,ae,$s,g,de,ya,ja,_e,Da,ka,ge,$a,Pa,Ze,Ha,Ra,Ps,E,xa,es,Ta,Ia,ss,Ca,Sa,Hs,S,U,as,te,La,ts,Ma,Rs,q,Na,me,Oa,Wa,ie,Va,Ua,xs,f,Fa,ve,Ya,Ba,is,za,Ga,ns,Ja,Ka,be,Qa,Xa,Ts,d,ls,we,Za,et,os,Ee,st,at,rs,qe,tt,it,us,Ae,nt,lt,cs,ye,ot,Is,ne,Cs,v,rt,je,ut,ct,De,ht,pt,hs,ft,dt,Ss,le,Ls,F,_t,ke,gt,mt,Ms,_,$e,Pe,vt,bt,wt,He,Re,Et,qt,At,xe,Te,yt,jt,Dt,Ie,Ce,kt,$t,Pt,Se,Le,Ht,Rt,Ns,Y,xt,Me,Tt,It,Os,L,B,ps,oe,Ct,fs,St,Ws,Ne,ds,Lt,Vs,M,z,_s,re,Mt,gs,Nt,Us,A,Ot,Oe,Wt,Vt,We,Ut,Ft,Fs;return K=new ms({}),X=new ms({}),Z=new vs({props:{code:`from huggingface_hub import get_repo_discussions
for discussion in get_repo_discussions(repo_id="bigscience/bloom-1b3"):
    print(f"{discussion.num} - {discussion.title}, pr: {discussion.is_pull_request}")
`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> discussion <span class="hljs-keyword">in</span> get_repo_discussions(repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">{discussion.num}</span> - <span class="hljs-subst">{discussion.title}</span>, pr: <span class="hljs-subst">{discussion.is_pull_request}</span>&quot;</span>)

<span class="hljs-comment"># 11 - Add Flax weights, pr: True</span>
<span class="hljs-comment"># 10 - Update README.md, pr: True</span>
<span class="hljs-comment"># 9 - Training languages in the model card, pr: True</span>
<span class="hljs-comment"># 8 - Update tokenizer_config.json, pr: True</span>
<span class="hljs-comment"># 7 - Slurm training script, pr: False</span>
[...]`}}),se=new vs({props:{code:`from huggingface_hub import get_repo_discussions
discussions_list = list(get_repo_discussions(repo_id="bert-base-uncased"))`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions
<span class="hljs-meta">&gt;&gt;&gt; </span>discussions_list = <span class="hljs-built_in">list</span>(get_repo_discussions(repo_id=<span class="hljs-string">&quot;bert-base-uncased&quot;</span>))`}}),ae=new vs({props:{code:`from huggingface_hub import get_discussion_details

get_discussion_details(
    repo_id="bigscience/bloom-1b3",
    discussion_num=2
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_discussion_details

<span class="hljs-meta">&gt;&gt;&gt; </span>get_discussion_details(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>,
<span class="hljs-meta">... </span>    discussion_num=<span class="hljs-number">2</span>
<span class="hljs-meta">... </span>)
DiscussionWithDetails(
    num=<span class="hljs-number">2</span>,
    author=<span class="hljs-string">&#x27;cakiki&#x27;</span>,
    title=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>,
    status=<span class="hljs-string">&#x27;open&#x27;</span>,
    is_pull_request=<span class="hljs-literal">True</span>,
    events=[
        DiscussionComment(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;comment&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, ...),
        DiscussionCommit(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;commit&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, summary=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>, oid=<span class="hljs-string">&#x27;1256f9d9a33fa8887e1c1bf0e09b4713da96773a&#x27;</span>, ...),
    ],
    conflicting_files=[],
    target_branch=<span class="hljs-string">&#x27;refs/heads/main&#x27;</span>,
    merge_commit_oid=<span class="hljs-literal">None</span>,
    diff=<span class="hljs-string">&#x27;diff --git a/README.md b/README.md\\nindex a6ae3b9294edf8d0eda0d67c7780a10241242a7e..3a1814f212bc3f0d3cc8f74bdbd316de4ae7b9e3 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -132,7 +132,7 [...]&#x27;</span>,
)`}}),te=new ms({}),ne=new vs({props:{code:`from huggingface_hub import metadata_update

metadata_update(
    repo_id="username/repo_name",
    metadata={"tags": ["computer-vision", "awesome-model"]},
    create_pr=True,
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> metadata_update

<span class="hljs-meta">&gt;&gt;&gt; </span>metadata_update(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo_name&quot;</span>,
<span class="hljs-meta">... </span>    metadata={<span class="hljs-string">&quot;tags&quot;</span>: [<span class="hljs-string">&quot;computer-vision&quot;</span>, <span class="hljs-string">&quot;awesome-model&quot;</span>]},
<span class="hljs-meta">... </span>    create_pr=<span class="hljs-literal">True</span>,
<span class="hljs-meta">... </span>)`}}),le=new vs({props:{code:`from huggingface_hub import create_discussion, create_pull_request

create_discussion(
    repo_id="username/repo-name",
    title="Hi from the huggingface_hub library!",
    token="<insert your access token here>",
)

create_pull_request(
    repo_id="username/repo-name",
    title="Hi from the huggingface_hub library!",
    token="<insert your access token here>",
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_discussion, create_pull_request

<span class="hljs-meta">&gt;&gt;&gt; </span>create_discussion(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo-name&quot;</span>,
<span class="hljs-meta">... </span>    title=<span class="hljs-string">&quot;Hi from the huggingface_hub library!&quot;</span>,
<span class="hljs-meta">... </span>    token=<span class="hljs-string">&quot;&lt;insert your access token here&gt;&quot;</span>,
<span class="hljs-meta">... </span>)
DiscussionWithDetails(...)

<span class="hljs-meta">&gt;&gt;&gt; </span>create_pull_request(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo-name&quot;</span>,
<span class="hljs-meta">... </span>    title=<span class="hljs-string">&quot;Hi from the huggingface_hub library!&quot;</span>,
<span class="hljs-meta">... </span>    token=<span class="hljs-string">&quot;&lt;insert your access token here&gt;&quot;</span>,
<span class="hljs-meta">... </span>)
DiscussionWithDetails(..., is_pull_request=<span class="hljs-literal">True</span>)`}}),oe=new ms({}),re=new ms({}),{c(){T=n("meta"),bs=h(),I=n("h1"),O=n("a"),Be=n("span"),k(K.$$.fragment),Zs=h(),ze=n("span"),ea=t("Interact with Discussions and Pull Requests"),ws=h(),w=n("p"),sa=t("The "),Ge=n("code"),aa=t("huggingface_hub"),ta=t(` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),Q=n("a"),ia=t("the dedicated documentation page"),na=t(`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),Es=h(),C=n("h2"),W=n("a"),Je=n("span"),k(X.$$.fragment),la=h(),Ke=n("span"),oa=t("Retrieve Discussions and Pull Requests from the Hub"),qs=h(),V=n("p"),ra=t("The "),Qe=n("code"),ua=t("HfApi"),ca=t(" class allows you to retrieve Discussions and Pull Requests on a given repo:"),As=h(),k(Z.$$.fragment),ys=h(),b=n("p"),Xe=n("code"),ha=t("HfApi.get_repo_discussions"),pa=t(" returns a "),ee=n("a"),fa=t("generator"),da=t(` that yields
`),ce=n("a"),_a=t("Discussion"),ga=t(" objects. To get all the Discussions in a single list, run:"),js=h(),k(se.$$.fragment),Ds=h(),m=n("p"),ma=t("The "),he=n("a"),va=t("Discussion"),ba=t(" object returned by "),pe=n("a"),wa=t("HfApi.get_repo_discussions()"),Ea=t(` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),fe=n("a"),qa=t("HfApi.get_discussion_details()"),Aa=t(":"),ks=h(),k(ae.$$.fragment),$s=h(),g=n("p"),de=n("a"),ya=t("HfApi.get_discussion_details()"),ja=t(" returns a "),_e=n("a"),Da=t("DiscussionWithDetails"),ka=t(" object, which is a subclass of "),ge=n("a"),$a=t("Discussion"),Pa=t(`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the Discussion via `),Ze=n("code"),Ha=t("DiscussionWithDetails.events"),Ra=t("."),Ps=h(),E=n("p"),xa=t("In case of a Pull Request, you can retrieve the raw git diff with "),es=n("code"),Ta=t("DiscussionWithDetails.diff"),Ia=t(`. All the commits of the
Pull Request are listed in `),ss=n("code"),Ca=t("DiscussionWithDetails.events"),Sa=t("."),Hs=h(),S=n("h2"),U=n("a"),as=n("span"),k(te.$$.fragment),La=h(),ts=n("span"),Ma=t("Create and edit a Discussion or Pull Request programmatically"),Rs=h(),q=n("p"),Na=t("The "),me=n("a"),Oa=t("HfApi"),Wa=t(` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),ie=n("a"),Va=t("access token"),Ua=t(` to create and edit Discussions
or Pull Requests.`),xs=h(),f=n("p"),Fa=t("The simplest way to propose changes on a repo on the Hub is via the "),ve=n("a"),Ya=t("create_commit()"),Ba=t(` API: just
set the `),is=n("code"),za=t("create_pr"),Ga=t(" parameter to "),ns=n("code"),Ja=t("True"),Ka=t(". This parameter is also available on other methods that wrap "),be=n("a"),Qa=t("create_commit()"),Xa=t(":"),Ts=h(),d=n("ul"),ls=n("li"),we=n("a"),Za=t("upload_file()"),et=h(),os=n("li"),Ee=n("a"),st=t("upload_folder()"),at=h(),rs=n("li"),qe=n("a"),tt=t("delete_file()"),it=h(),us=n("li"),Ae=n("a"),nt=t("delete_folder()"),lt=h(),cs=n("li"),ye=n("a"),ot=t("metadata_update()"),Is=h(),k(ne.$$.fragment),Cs=h(),v=n("p"),rt=t("You can also use "),je=n("a"),ut=t("HfApi.create_discussion()"),ct=t(" (respectively "),De=n("a"),ht=t("HfApi.create_pull_request()"),pt=t(`) to create a Discussion (respectively a Pull Request) on a repo.
Opening a Pull Request this way can be useful if you need to work on changes locally. Pull Requests opened this way will be in `),hs=n("code"),ft=t('"draft"'),dt=t(" mode."),Ss=h(),k(le.$$.fragment),Ls=h(),F=n("p"),_t=t("Managing Pull Requests and Discussions can be done entirely with the "),ke=n("a"),gt=t("HfApi"),mt=t(" class. For example:"),Ms=h(),_=n("ul"),$e=n("li"),Pe=n("a"),vt=t("comment_discussion()"),bt=t(" to add comments"),wt=h(),He=n("li"),Re=n("a"),Et=t("edit_discussion_comment()"),qt=t(" to edit comments"),At=h(),xe=n("li"),Te=n("a"),yt=t("rename_discussion()"),jt=t(" to rename a Discussion or Pull Request"),Dt=h(),Ie=n("li"),Ce=n("a"),kt=t("change_discussion_status()"),$t=t(" to open or close a Discussion / Pull Request"),Pt=h(),Se=n("li"),Le=n("a"),Ht=t("merge_pull_request()"),Rt=t(" to merge a Pull Request"),Ns=h(),Y=n("p"),xt=t("Visit the "),Me=n("a"),Tt=t("HfApi"),It=t(" documentation page for an exhaustive reference of all available methods."),Os=h(),L=n("h2"),B=n("a"),ps=n("span"),k(oe.$$.fragment),Ct=h(),fs=n("span"),St=t("Push changes to a Pull Request"),Ws=h(),Ne=n("p"),ds=n("em"),Lt=t("Coming soon !"),Vs=h(),M=n("h2"),z=n("a"),_s=n("span"),k(re.$$.fragment),Mt=h(),gs=n("span"),Nt=t("See also"),Us=h(),A=n("p"),Ot=t("For a more detailed reference, visit the "),Oe=n("a"),Wt=t("community"),Vt=t(" and the "),We=n("a"),Ut=t("hf_api"),Ft=t(" documentation page."),this.h()},l(e){const u=on('[data-svelte="svelte-1phssyn"]',document.head);T=l(u,"META",{name:!0,content:!0}),u.forEach(a),bs=p(e),I=l(e,"H1",{class:!0});var Ys=o(I);O=l(Ys,"A",{id:!0,class:!0,href:!0});var Qt=o(O);Be=l(Qt,"SPAN",{});var Xt=o(Be);$(K.$$.fragment,Xt),Xt.forEach(a),Qt.forEach(a),Zs=p(Ys),ze=l(Ys,"SPAN",{});var Zt=o(ze);ea=i(Zt,"Interact with Discussions and Pull Requests"),Zt.forEach(a),Ys.forEach(a),ws=p(e),w=l(e,"P",{});var Ve=o(w);sa=i(Ve,"The "),Ge=l(Ve,"CODE",{});var ei=o(Ge);aa=i(ei,"huggingface_hub"),ei.forEach(a),ta=i(Ve,` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),Q=l(Ve,"A",{href:!0,rel:!0});var si=o(Q);ia=i(si,"the dedicated documentation page"),si.forEach(a),na=i(Ve,`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),Ve.forEach(a),Es=p(e),C=l(e,"H2",{class:!0});var Bs=o(C);W=l(Bs,"A",{id:!0,class:!0,href:!0});var ai=o(W);Je=l(ai,"SPAN",{});var ti=o(Je);$(X.$$.fragment,ti),ti.forEach(a),ai.forEach(a),la=p(Bs),Ke=l(Bs,"SPAN",{});var ii=o(Ke);oa=i(ii,"Retrieve Discussions and Pull Requests from the Hub"),ii.forEach(a),Bs.forEach(a),qs=p(e),V=l(e,"P",{});var zs=o(V);ra=i(zs,"The "),Qe=l(zs,"CODE",{});var ni=o(Qe);ua=i(ni,"HfApi"),ni.forEach(a),ca=i(zs," class allows you to retrieve Discussions and Pull Requests on a given repo:"),zs.forEach(a),As=p(e),$(Z.$$.fragment,e),ys=p(e),b=l(e,"P",{});var ue=o(b);Xe=l(ue,"CODE",{});var li=o(Xe);ha=i(li,"HfApi.get_repo_discussions"),li.forEach(a),pa=i(ue," returns a "),ee=l(ue,"A",{href:!0,rel:!0});var oi=o(ee);fa=i(oi,"generator"),oi.forEach(a),da=i(ue,` that yields
`),ce=l(ue,"A",{href:!0});var ri=o(ce);_a=i(ri,"Discussion"),ri.forEach(a),ga=i(ue," objects. To get all the Discussions in a single list, run:"),ue.forEach(a),js=p(e),$(se.$$.fragment,e),Ds=p(e),m=l(e,"P",{});var G=o(m);ma=i(G,"The "),he=l(G,"A",{href:!0});var ui=o(he);va=i(ui,"Discussion"),ui.forEach(a),ba=i(G," object returned by "),pe=l(G,"A",{href:!0});var ci=o(pe);wa=i(ci,"HfApi.get_repo_discussions()"),ci.forEach(a),Ea=i(G,` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),fe=l(G,"A",{href:!0});var hi=o(fe);qa=i(hi,"HfApi.get_discussion_details()"),hi.forEach(a),Aa=i(G,":"),G.forEach(a),ks=p(e),$(ae.$$.fragment,e),$s=p(e),g=l(e,"P",{});var N=o(g);de=l(N,"A",{href:!0});var pi=o(de);ya=i(pi,"HfApi.get_discussion_details()"),pi.forEach(a),ja=i(N," returns a "),_e=l(N,"A",{href:!0});var fi=o(_e);Da=i(fi,"DiscussionWithDetails"),fi.forEach(a),ka=i(N," object, which is a subclass of "),ge=l(N,"A",{href:!0});var di=o(ge);$a=i(di,"Discussion"),di.forEach(a),Pa=i(N,`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the Discussion via `),Ze=l(N,"CODE",{});var _i=o(Ze);Ha=i(_i,"DiscussionWithDetails.events"),_i.forEach(a),Ra=i(N,"."),N.forEach(a),Ps=p(e),E=l(e,"P",{});var Ue=o(E);xa=i(Ue,"In case of a Pull Request, you can retrieve the raw git diff with "),es=l(Ue,"CODE",{});var gi=o(es);Ta=i(gi,"DiscussionWithDetails.diff"),gi.forEach(a),Ia=i(Ue,`. All the commits of the
Pull Request are listed in `),ss=l(Ue,"CODE",{});var mi=o(ss);Ca=i(mi,"DiscussionWithDetails.events"),mi.forEach(a),Sa=i(Ue,"."),Ue.forEach(a),Hs=p(e),S=l(e,"H2",{class:!0});var Gs=o(S);U=l(Gs,"A",{id:!0,class:!0,href:!0});var vi=o(U);as=l(vi,"SPAN",{});var bi=o(as);$(te.$$.fragment,bi),bi.forEach(a),vi.forEach(a),La=p(Gs),ts=l(Gs,"SPAN",{});var wi=o(ts);Ma=i(wi,"Create and edit a Discussion or Pull Request programmatically"),wi.forEach(a),Gs.forEach(a),Rs=p(e),q=l(e,"P",{});var Fe=o(q);Na=i(Fe,"The "),me=l(Fe,"A",{href:!0});var Ei=o(me);Oa=i(Ei,"HfApi"),Ei.forEach(a),Wa=i(Fe,` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),ie=l(Fe,"A",{href:!0,rel:!0});var qi=o(ie);Va=i(qi,"access token"),qi.forEach(a),Ua=i(Fe,` to create and edit Discussions
or Pull Requests.`),Fe.forEach(a),xs=p(e),f=l(e,"P",{});var y=o(f);Fa=i(y,"The simplest way to propose changes on a repo on the Hub is via the "),ve=l(y,"A",{href:!0});var Ai=o(ve);Ya=i(Ai,"create_commit()"),Ai.forEach(a),Ba=i(y,` API: just
set the `),is=l(y,"CODE",{});var yi=o(is);za=i(yi,"create_pr"),yi.forEach(a),Ga=i(y," parameter to "),ns=l(y,"CODE",{});var ji=o(ns);Ja=i(ji,"True"),ji.forEach(a),Ka=i(y,". This parameter is also available on other methods that wrap "),be=l(y,"A",{href:!0});var Di=o(be);Qa=i(Di,"create_commit()"),Di.forEach(a),Xa=i(y,":"),y.forEach(a),Ts=p(e),d=l(e,"UL",{});var j=o(d);ls=l(j,"LI",{});var ki=o(ls);we=l(ki,"A",{href:!0});var $i=o(we);Za=i($i,"upload_file()"),$i.forEach(a),ki.forEach(a),et=p(j),os=l(j,"LI",{});var Pi=o(os);Ee=l(Pi,"A",{href:!0});var Hi=o(Ee);st=i(Hi,"upload_folder()"),Hi.forEach(a),Pi.forEach(a),at=p(j),rs=l(j,"LI",{});var Ri=o(rs);qe=l(Ri,"A",{href:!0});var xi=o(qe);tt=i(xi,"delete_file()"),xi.forEach(a),Ri.forEach(a),it=p(j),us=l(j,"LI",{});var Ti=o(us);Ae=l(Ti,"A",{href:!0});var Ii=o(Ae);nt=i(Ii,"delete_folder()"),Ii.forEach(a),Ti.forEach(a),lt=p(j),cs=l(j,"LI",{});var Ci=o(cs);ye=l(Ci,"A",{href:!0});var Si=o(ye);ot=i(Si,"metadata_update()"),Si.forEach(a),Ci.forEach(a),j.forEach(a),Is=p(e),$(ne.$$.fragment,e),Cs=p(e),v=l(e,"P",{});var J=o(v);rt=i(J,"You can also use "),je=l(J,"A",{href:!0});var Li=o(je);ut=i(Li,"HfApi.create_discussion()"),Li.forEach(a),ct=i(J," (respectively "),De=l(J,"A",{href:!0});var Mi=o(De);ht=i(Mi,"HfApi.create_pull_request()"),Mi.forEach(a),pt=i(J,`) to create a Discussion (respectively a Pull Request) on a repo.
Opening a Pull Request this way can be useful if you need to work on changes locally. Pull Requests opened this way will be in `),hs=l(J,"CODE",{});var Ni=o(hs);ft=i(Ni,'"draft"'),Ni.forEach(a),dt=i(J," mode."),J.forEach(a),Ss=p(e),$(le.$$.fragment,e),Ls=p(e),F=l(e,"P",{});var Js=o(F);_t=i(Js,"Managing Pull Requests and Discussions can be done entirely with the "),ke=l(Js,"A",{href:!0});var Oi=o(ke);gt=i(Oi,"HfApi"),Oi.forEach(a),mt=i(Js," class. For example:"),Js.forEach(a),Ms=p(e),_=l(e,"UL",{});var D=o(_);$e=l(D,"LI",{});var Yt=o($e);Pe=l(Yt,"A",{href:!0});var Wi=o(Pe);vt=i(Wi,"comment_discussion()"),Wi.forEach(a),bt=i(Yt," to add comments"),Yt.forEach(a),wt=p(D),He=l(D,"LI",{});var Bt=o(He);Re=l(Bt,"A",{href:!0});var Vi=o(Re);Et=i(Vi,"edit_discussion_comment()"),Vi.forEach(a),qt=i(Bt," to edit comments"),Bt.forEach(a),At=p(D),xe=l(D,"LI",{});var zt=o(xe);Te=l(zt,"A",{href:!0});var Ui=o(Te);yt=i(Ui,"rename_discussion()"),Ui.forEach(a),jt=i(zt," to rename a Discussion or Pull Request"),zt.forEach(a),Dt=p(D),Ie=l(D,"LI",{});var Gt=o(Ie);Ce=l(Gt,"A",{href:!0});var Fi=o(Ce);kt=i(Fi,"change_discussion_status()"),Fi.forEach(a),$t=i(Gt," to open or close a Discussion / Pull Request"),Gt.forEach(a),Pt=p(D),Se=l(D,"LI",{});var Jt=o(Se);Le=l(Jt,"A",{href:!0});var Yi=o(Le);Ht=i(Yi,"merge_pull_request()"),Yi.forEach(a),Rt=i(Jt," to merge a Pull Request"),Jt.forEach(a),D.forEach(a),Ns=p(e),Y=l(e,"P",{});var Ks=o(Y);xt=i(Ks,"Visit the "),Me=l(Ks,"A",{href:!0});var Bi=o(Me);Tt=i(Bi,"HfApi"),Bi.forEach(a),It=i(Ks," documentation page for an exhaustive reference of all available methods."),Ks.forEach(a),Os=p(e),L=l(e,"H2",{class:!0});var Qs=o(L);B=l(Qs,"A",{id:!0,class:!0,href:!0});var zi=o(B);ps=l(zi,"SPAN",{});var Gi=o(ps);$(oe.$$.fragment,Gi),Gi.forEach(a),zi.forEach(a),Ct=p(Qs),fs=l(Qs,"SPAN",{});var Ji=o(fs);St=i(Ji,"Push changes to a Pull Request"),Ji.forEach(a),Qs.forEach(a),Ws=p(e),Ne=l(e,"P",{});var Ki=o(Ne);ds=l(Ki,"EM",{});var Qi=o(ds);Lt=i(Qi,"Coming soon !"),Qi.forEach(a),Ki.forEach(a),Vs=p(e),M=l(e,"H2",{class:!0});var Xs=o(M);z=l(Xs,"A",{id:!0,class:!0,href:!0});var Xi=o(z);_s=l(Xi,"SPAN",{});var Zi=o(_s);$(re.$$.fragment,Zi),Zi.forEach(a),Xi.forEach(a),Mt=p(Xs),gs=l(Xs,"SPAN",{});var en=o(gs);Nt=i(en,"See also"),en.forEach(a),Xs.forEach(a),Us=p(e),A=l(e,"P",{});var Ye=o(A);Ot=i(Ye,"For a more detailed reference, visit the "),Oe=l(Ye,"A",{href:!0});var sn=o(Oe);Wt=i(sn,"community"),sn.forEach(a),Vt=i(Ye," and the "),We=l(Ye,"A",{href:!0});var an=o(We);Ut=i(an,"hf_api"),an.forEach(a),Ft=i(Ye," documentation page."),Ye.forEach(a),this.h()},h(){r(T,"name","hf:doc:metadata"),r(T,"content",JSON.stringify(hn)),r(O,"id","interact-with-discussions-and-pull-requests"),r(O,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),r(O,"href","#interact-with-discussions-and-pull-requests"),r(I,"class","relative group"),r(Q,"href","https://huggingface.co/docs/hub/repositories-pull-requests-discussions"),r(Q,"rel","nofollow"),r(W,"id","retrieve-discussions-and-pull-requests-from-the-hub"),r(W,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),r(W,"href","#retrieve-discussions-and-pull-requests-from-the-hub"),r(C,"class","relative group"),r(ee,"href","https://docs.python.org/3.7/howto/functional.html#generators"),r(ee,"rel","nofollow"),r(ce,"href","/docs/huggingface_hub/main/en/package_reference/community#huggingface_hub.Discussion"),r(he,"href","/docs/huggingface_hub/main/en/package_reference/community#huggingface_hub.Discussion"),r(pe,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.get_repo_discussions"),r(fe,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),r(de,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),r(_e,"href","/docs/huggingface_hub/main/en/package_reference/community#huggingface_hub.DiscussionWithDetails"),r(ge,"href","/docs/huggingface_hub/main/en/package_reference/community#huggingface_hub.Discussion"),r(U,"id","create-and-edit-a-discussion-or-pull-request-programmatically"),r(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),r(U,"href","#create-and-edit-a-discussion-or-pull-request-programmatically"),r(S,"class","relative group"),r(me,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi"),r(ie,"href","https://huggingface.co/docs/hub/security-tokens"),r(ie,"rel","nofollow"),r(ve,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit"),r(be,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit"),r(we,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.upload_file"),r(Ee,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.upload_folder"),r(qe,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.delete_file"),r(Ae,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.delete_folder"),r(ye,"href","/docs/huggingface_hub/main/en/package_reference/cards#huggingface_hub.metadata_update"),r(je,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.create_discussion"),r(De,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.create_pull_request"),r(ke,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi"),r(Pe,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.comment_discussion"),r(Re,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.edit_discussion_comment"),r(Te,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.rename_discussion"),r(Ce,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.change_discussion_status"),r(Le,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.merge_pull_request"),r(Me,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi"),r(B,"id","push-changes-to-a-pull-request"),r(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),r(B,"href","#push-changes-to-a-pull-request"),r(L,"class","relative group"),r(z,"id","see-also"),r(z,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),r(z,"href","#see-also"),r(M,"class","relative group"),r(Oe,"href","/source/package_reference/community"),r(We,"href","/source/package_reference/hf_api")},m(e,u){s(document.head,T),c(e,bs,u),c(e,I,u),s(I,O),s(O,Be),P(K,Be,null),s(I,Zs),s(I,ze),s(ze,ea),c(e,ws,u),c(e,w,u),s(w,sa),s(w,Ge),s(Ge,aa),s(w,ta),s(w,Q),s(Q,ia),s(w,na),c(e,Es,u),c(e,C,u),s(C,W),s(W,Je),P(X,Je,null),s(C,la),s(C,Ke),s(Ke,oa),c(e,qs,u),c(e,V,u),s(V,ra),s(V,Qe),s(Qe,ua),s(V,ca),c(e,As,u),P(Z,e,u),c(e,ys,u),c(e,b,u),s(b,Xe),s(Xe,ha),s(b,pa),s(b,ee),s(ee,fa),s(b,da),s(b,ce),s(ce,_a),s(b,ga),c(e,js,u),P(se,e,u),c(e,Ds,u),c(e,m,u),s(m,ma),s(m,he),s(he,va),s(m,ba),s(m,pe),s(pe,wa),s(m,Ea),s(m,fe),s(fe,qa),s(m,Aa),c(e,ks,u),P(ae,e,u),c(e,$s,u),c(e,g,u),s(g,de),s(de,ya),s(g,ja),s(g,_e),s(_e,Da),s(g,ka),s(g,ge),s(ge,$a),s(g,Pa),s(g,Ze),s(Ze,Ha),s(g,Ra),c(e,Ps,u),c(e,E,u),s(E,xa),s(E,es),s(es,Ta),s(E,Ia),s(E,ss),s(ss,Ca),s(E,Sa),c(e,Hs,u),c(e,S,u),s(S,U),s(U,as),P(te,as,null),s(S,La),s(S,ts),s(ts,Ma),c(e,Rs,u),c(e,q,u),s(q,Na),s(q,me),s(me,Oa),s(q,Wa),s(q,ie),s(ie,Va),s(q,Ua),c(e,xs,u),c(e,f,u),s(f,Fa),s(f,ve),s(ve,Ya),s(f,Ba),s(f,is),s(is,za),s(f,Ga),s(f,ns),s(ns,Ja),s(f,Ka),s(f,be),s(be,Qa),s(f,Xa),c(e,Ts,u),c(e,d,u),s(d,ls),s(ls,we),s(we,Za),s(d,et),s(d,os),s(os,Ee),s(Ee,st),s(d,at),s(d,rs),s(rs,qe),s(qe,tt),s(d,it),s(d,us),s(us,Ae),s(Ae,nt),s(d,lt),s(d,cs),s(cs,ye),s(ye,ot),c(e,Is,u),P(ne,e,u),c(e,Cs,u),c(e,v,u),s(v,rt),s(v,je),s(je,ut),s(v,ct),s(v,De),s(De,ht),s(v,pt),s(v,hs),s(hs,ft),s(v,dt),c(e,Ss,u),P(le,e,u),c(e,Ls,u),c(e,F,u),s(F,_t),s(F,ke),s(ke,gt),s(F,mt),c(e,Ms,u),c(e,_,u),s(_,$e),s($e,Pe),s(Pe,vt),s($e,bt),s(_,wt),s(_,He),s(He,Re),s(Re,Et),s(He,qt),s(_,At),s(_,xe),s(xe,Te),s(Te,yt),s(xe,jt),s(_,Dt),s(_,Ie),s(Ie,Ce),s(Ce,kt),s(Ie,$t),s(_,Pt),s(_,Se),s(Se,Le),s(Le,Ht),s(Se,Rt),c(e,Ns,u),c(e,Y,u),s(Y,xt),s(Y,Me),s(Me,Tt),s(Y,It),c(e,Os,u),c(e,L,u),s(L,B),s(B,ps),P(oe,ps,null),s(L,Ct),s(L,fs),s(fs,St),c(e,Ws,u),c(e,Ne,u),s(Ne,ds),s(ds,Lt),c(e,Vs,u),c(e,M,u),s(M,z),s(z,_s),P(re,_s,null),s(M,Mt),s(M,gs),s(gs,Nt),c(e,Us,u),c(e,A,u),s(A,Ot),s(A,Oe),s(Oe,Wt),s(A,Vt),s(A,We),s(We,Ut),s(A,Ft),Fs=!0},p:rn,i(e){Fs||(H(K.$$.fragment,e),H(X.$$.fragment,e),H(Z.$$.fragment,e),H(se.$$.fragment,e),H(ae.$$.fragment,e),H(te.$$.fragment,e),H(ne.$$.fragment,e),H(le.$$.fragment,e),H(oe.$$.fragment,e),H(re.$$.fragment,e),Fs=!0)},o(e){R(K.$$.fragment,e),R(X.$$.fragment,e),R(Z.$$.fragment,e),R(se.$$.fragment,e),R(ae.$$.fragment,e),R(te.$$.fragment,e),R(ne.$$.fragment,e),R(le.$$.fragment,e),R(oe.$$.fragment,e),R(re.$$.fragment,e),Fs=!1},d(e){a(T),e&&a(bs),e&&a(I),x(K),e&&a(ws),e&&a(w),e&&a(Es),e&&a(C),x(X),e&&a(qs),e&&a(V),e&&a(As),x(Z,e),e&&a(ys),e&&a(b),e&&a(js),x(se,e),e&&a(Ds),e&&a(m),e&&a(ks),x(ae,e),e&&a($s),e&&a(g),e&&a(Ps),e&&a(E),e&&a(Hs),e&&a(S),x(te),e&&a(Rs),e&&a(q),e&&a(xs),e&&a(f),e&&a(Ts),e&&a(d),e&&a(Is),x(ne,e),e&&a(Cs),e&&a(v),e&&a(Ss),x(le,e),e&&a(Ls),e&&a(F),e&&a(Ms),e&&a(_),e&&a(Ns),e&&a(Y),e&&a(Os),e&&a(L),x(oe),e&&a(Ws),e&&a(Ne),e&&a(Vs),e&&a(M),x(re),e&&a(Us),e&&a(A)}}}const hn={local:"interact-with-discussions-and-pull-requests",sections:[{local:"retrieve-discussions-and-pull-requests-from-the-hub",title:"Retrieve Discussions and Pull Requests from the Hub"},{local:"create-and-edit-a-discussion-or-pull-request-programmatically",title:"Create and edit a Discussion or Pull Request programmatically"},{local:"push-changes-to-a-pull-request",title:"Push changes to a Pull Request"},{local:"see-also",title:"See also"}],title:"Interact with Discussions and Pull Requests "};function pn(Kt){return un(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class gn extends tn{constructor(T){super();nn(this,T,pn,cn,ln,{})}}export{gn as default,hn as metadata};
