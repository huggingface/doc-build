import{S as Qi,i as Xi,s as Zi,e as n,k as h,w as D,t,M as en,c as l,d as a,m as p,a as o,x as k,h as i,b as u,G as s,g as c,y as $,L as sn,q as P,o as H,B as R,v as an}from"../chunks/vendor-hf-doc-builder.js";import{I as _s}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as gs}from"../chunks/CodeBlock-hf-doc-builder.js";function tn(Bt){let x,ms,T,N,Ye,K,Qs,Be,Xs,vs,w,Zs,ze,ea,sa,Q,aa,ta,bs,C,O,Ge,X,ia,Je,na,ws,W,la,Ke,oa,ra,Es,Z,qs,b,Qe,ua,ca,ee,ha,pa,ce,fa,da,ys,se,As,g,_a,he,ga,ma,pe,va,ba,fe,wa,Ea,js,ae,Ds,_,de,qa,ya,_e,Aa,ja,ge,Da,ka,Xe,$a,Pa,ks,E,Ha,Ze,Ra,xa,es,Ta,Ca,$s,I,V,ss,te,Ia,as,Sa,Ps,q,La,me,Ma,Na,ie,Oa,Wa,Hs,f,Va,ve,Ua,Fa,ts,Ya,Ba,is,za,Ga,be,Ja,Ka,Rs,m,ns,we,Qa,Xa,ls,Ee,Za,et,os,qe,st,at,rs,ye,tt,xs,ne,Ts,v,it,Ae,nt,lt,je,ot,rt,us,ut,ct,Cs,le,Is,U,ht,De,pt,ft,Ss,d,ke,$e,dt,_t,gt,Pe,He,mt,vt,bt,Re,xe,wt,Et,qt,Te,Ce,yt,At,jt,Ie,Se,Dt,kt,Ls,F,$t,Le,Pt,Ht,Ms,S,Y,cs,oe,Rt,hs,xt,Ns,Me,ps,Tt,Os,L,B,fs,re,Ct,ds,It,Ws,y,St,Ne,Lt,Mt,Oe,Nt,Ot,Vs;return K=new _s({}),X=new _s({}),Z=new gs({props:{code:`from huggingface_hub import get_repo_discussions
for discussion in get_repo_discussions(repo_id="bigscience/bloom-1b3"):
    print(f"{discussion.num} - {discussion.title}, pr: {discussion.is_pull_request}")
`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> discussion <span class="hljs-keyword">in</span> get_repo_discussions(repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">{discussion.num}</span> - <span class="hljs-subst">{discussion.title}</span>, pr: <span class="hljs-subst">{discussion.is_pull_request}</span>&quot;</span>)

<span class="hljs-comment"># 11 - Add Flax weights, pr: True</span>
<span class="hljs-comment"># 10 - Update README.md, pr: True</span>
<span class="hljs-comment"># 9 - Training languages in the model card, pr: True</span>
<span class="hljs-comment"># 8 - Update tokenizer_config.json, pr: True</span>
<span class="hljs-comment"># 7 - Slurm training script, pr: False</span>
[...]`}}),se=new gs({props:{code:`from huggingface_hub import get_repo_discussions
discussions_list = list(get_repo_discussions(repo_id="bert-base-uncased"))`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions
<span class="hljs-meta">&gt;&gt;&gt; </span>discussions_list = <span class="hljs-built_in">list</span>(get_repo_discussions(repo_id=<span class="hljs-string">&quot;bert-base-uncased&quot;</span>))`}}),ae=new gs({props:{code:`from huggingface_hub import get_discussion_details

get_discussion_details(
    repo_id="bigscience/bloom-1b3",
    discussion_num=2
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_discussion_details

<span class="hljs-meta">&gt;&gt;&gt; </span>get_discussion_details(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>,
<span class="hljs-meta">... </span>    discussion_num=<span class="hljs-number">2</span>
<span class="hljs-meta">... </span>)
DiscussionWithDetails(
    num=<span class="hljs-number">2</span>,
    author=<span class="hljs-string">&#x27;cakiki&#x27;</span>,
    title=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>,
    status=<span class="hljs-string">&#x27;open&#x27;</span>,
    is_pull_request=<span class="hljs-literal">True</span>,
    events=[
        DiscussionComment(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;comment&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, ...),
        DiscussionCommit(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;commit&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, summary=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>, oid=<span class="hljs-string">&#x27;1256f9d9a33fa8887e1c1bf0e09b4713da96773a&#x27;</span>, ...),
    ],
    conflicting_files=[],
    target_branch=<span class="hljs-string">&#x27;refs/heads/main&#x27;</span>,
    merge_commit_oid=<span class="hljs-literal">None</span>,
    diff=<span class="hljs-string">&#x27;diff --git a/README.md b/README.md\\nindex a6ae3b9294edf8d0eda0d67c7780a10241242a7e..3a1814f212bc3f0d3cc8f74bdbd316de4ae7b9e3 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -132,7 +132,7 [...]&#x27;</span>,
)`}}),te=new _s({}),ne=new gs({props:{code:`from huggingface_hub import metadata_update

metadata_update(
    repo_id="username/repo_name",
    metadata={"tags": ["computer-vision", "awesome-model"]},
    create_pr=True,
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> metadata_update

<span class="hljs-meta">&gt;&gt;&gt; </span>metadata_update(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo_name&quot;</span>,
<span class="hljs-meta">... </span>    metadata={<span class="hljs-string">&quot;tags&quot;</span>: [<span class="hljs-string">&quot;computer-vision&quot;</span>, <span class="hljs-string">&quot;awesome-model&quot;</span>]},
<span class="hljs-meta">... </span>    create_pr=<span class="hljs-literal">True</span>,
<span class="hljs-meta">... </span>)`}}),le=new gs({props:{code:`from huggingface_hub import create_discussion, create_pull_request

create_discussion(
    repo_id="username/repo-name",
    title="Hi from the huggingface_hub library!",
    token="<insert your access token here>",
)

create_pull_request(
    repo_id="username/repo-name",
    title="Hi from the huggingface_hub library!",
    token="<insert your access token here>",
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_discussion, create_pull_request

<span class="hljs-meta">&gt;&gt;&gt; </span>create_discussion(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo-name&quot;</span>,
<span class="hljs-meta">... </span>    title=<span class="hljs-string">&quot;Hi from the huggingface_hub library!&quot;</span>,
<span class="hljs-meta">... </span>    token=<span class="hljs-string">&quot;&lt;insert your access token here&gt;&quot;</span>,
<span class="hljs-meta">... </span>)
DiscussionWithDetails(...)

<span class="hljs-meta">&gt;&gt;&gt; </span>create_pull_request(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo-name&quot;</span>,
<span class="hljs-meta">... </span>    title=<span class="hljs-string">&quot;Hi from the huggingface_hub library!&quot;</span>,
<span class="hljs-meta">... </span>    token=<span class="hljs-string">&quot;&lt;insert your access token here&gt;&quot;</span>,
<span class="hljs-meta">... </span>)
DiscussionWithDetails(..., is_pull_request=<span class="hljs-literal">True</span>)`}}),oe=new _s({}),re=new _s({}),{c(){x=n("meta"),ms=h(),T=n("h1"),N=n("a"),Ye=n("span"),D(K.$$.fragment),Qs=h(),Be=n("span"),Xs=t("Interact with Discussions and Pull Requests"),vs=h(),w=n("p"),Zs=t("The "),ze=n("code"),ea=t("huggingface_hub"),sa=t(` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),Q=n("a"),aa=t("the dedicated documentation page"),ta=t(`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),bs=h(),C=n("h2"),O=n("a"),Ge=n("span"),D(X.$$.fragment),ia=h(),Je=n("span"),na=t("Retrieve Discussions and Pull Requests from the Hub"),ws=h(),W=n("p"),la=t("The "),Ke=n("code"),oa=t("HfApi"),ra=t(" class allows you to retrieve Discussions and Pull Requests on a given repo:"),Es=h(),D(Z.$$.fragment),qs=h(),b=n("p"),Qe=n("code"),ua=t("HfApi.get_repo_discussions"),ca=t(" returns a "),ee=n("a"),ha=t("generator"),pa=t(` that yields
`),ce=n("a"),fa=t("Discussion"),da=t(" objects. To get all the Discussions in a single list, run:"),ys=h(),D(se.$$.fragment),As=h(),g=n("p"),_a=t("The "),he=n("a"),ga=t("Discussion"),ma=t(" object returned by "),pe=n("a"),va=t("HfApi.get_repo_discussions()"),ba=t(` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),fe=n("a"),wa=t("HfApi.get_discussion_details()"),Ea=t(":"),js=h(),D(ae.$$.fragment),Ds=h(),_=n("p"),de=n("a"),qa=t("HfApi.get_discussion_details()"),ya=t(" returns a "),_e=n("a"),Aa=t("DiscussionWithDetails"),ja=t(" object, which is a subclass of "),ge=n("a"),Da=t("Discussion"),ka=t(`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the Discussion via `),Xe=n("code"),$a=t("DiscussionWithDetails.events"),Pa=t("."),ks=h(),E=n("p"),Ha=t("In case of a Pull Request, you can retrieve the raw git diff with "),Ze=n("code"),Ra=t("DiscussionWithDetails.diff"),xa=t(`. All the commits of the
Pull Request are listed in `),es=n("code"),Ta=t("DiscussionWithDetails.events"),Ca=t("."),$s=h(),I=n("h2"),V=n("a"),ss=n("span"),D(te.$$.fragment),Ia=h(),as=n("span"),Sa=t("Create and edit a Discussion or Pull Request programmatically"),Ps=h(),q=n("p"),La=t("The "),me=n("a"),Ma=t("HfApi"),Na=t(` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),ie=n("a"),Oa=t("access token"),Wa=t(` to create and edit Discussions
or Pull Requests.`),Hs=h(),f=n("p"),Va=t("The simplest way to propose changes on a repo on the Hub is via the "),ve=n("a"),Ua=t("create_commit()"),Fa=t(` API: just
set the `),ts=n("code"),Ya=t("create_pr"),Ba=t(" parameter to "),is=n("code"),za=t("True"),Ga=t(". This parameter is also available on other methods that wrap "),be=n("a"),Ja=t("create_commit()"),Ka=t(":"),Rs=h(),m=n("ul"),ns=n("li"),we=n("a"),Qa=t("upload_file()"),Xa=h(),ls=n("li"),Ee=n("a"),Za=t("upload_folder()"),et=h(),os=n("li"),qe=n("a"),st=t("delete_file()"),at=h(),rs=n("li"),ye=n("a"),tt=t("metadata_update()"),xs=h(),D(ne.$$.fragment),Ts=h(),v=n("p"),it=t("You can also use "),Ae=n("a"),nt=t("HfApi.create_discussion()"),lt=t(" (respectively "),je=n("a"),ot=t("HfApi.create_pull_request()"),rt=t(`) to create a Discussion (respectively a Pull Request) on a repo.
Opening a Pull Request this way can be useful if you need to work on changes locally. Pull Requests opened this way will be in `),us=n("code"),ut=t('"draft"'),ct=t(" mode."),Cs=h(),D(le.$$.fragment),Is=h(),U=n("p"),ht=t("Managing Pull Requests and Discussions can be done entirely with the "),De=n("a"),pt=t("HfApi"),ft=t(" class. For example:"),Ss=h(),d=n("ul"),ke=n("li"),$e=n("a"),dt=t("comment_discussion()"),_t=t(" to add comments"),gt=h(),Pe=n("li"),He=n("a"),mt=t("edit_discussion_comment()"),vt=t(" to edit comments"),bt=h(),Re=n("li"),xe=n("a"),wt=t("rename_discussion()"),Et=t(" to rename a Discussion or Pull Request"),qt=h(),Te=n("li"),Ce=n("a"),yt=t("change_discussion_status()"),At=t(" to open or close a Discussion / Pull Request"),jt=h(),Ie=n("li"),Se=n("a"),Dt=t("merge_pull_request()"),kt=t(" to merge a Pull Request"),Ls=h(),F=n("p"),$t=t("Visit the "),Le=n("a"),Pt=t("HfApi"),Ht=t(" documentation page for an exhaustive reference of all available methods."),Ms=h(),S=n("h2"),Y=n("a"),cs=n("span"),D(oe.$$.fragment),Rt=h(),hs=n("span"),xt=t("Push changes to a Pull Request"),Ns=h(),Me=n("p"),ps=n("em"),Tt=t("Coming soon !"),Os=h(),L=n("h2"),B=n("a"),fs=n("span"),D(re.$$.fragment),Ct=h(),ds=n("span"),It=t("See also"),Ws=h(),y=n("p"),St=t("For a more detailed reference, visit the "),Ne=n("a"),Lt=t("community"),Mt=t(" and the "),Oe=n("a"),Nt=t("hf_api"),Ot=t(" documentation page."),this.h()},l(e){const r=en('[data-svelte="svelte-1phssyn"]',document.head);x=l(r,"META",{name:!0,content:!0}),r.forEach(a),ms=p(e),T=l(e,"H1",{class:!0});var Us=o(T);N=l(Us,"A",{id:!0,class:!0,href:!0});var zt=o(N);Ye=l(zt,"SPAN",{});var Gt=o(Ye);k(K.$$.fragment,Gt),Gt.forEach(a),zt.forEach(a),Qs=p(Us),Be=l(Us,"SPAN",{});var Jt=o(Be);Xs=i(Jt,"Interact with Discussions and Pull Requests"),Jt.forEach(a),Us.forEach(a),vs=p(e),w=l(e,"P",{});var We=o(w);Zs=i(We,"The "),ze=l(We,"CODE",{});var Kt=o(ze);ea=i(Kt,"huggingface_hub"),Kt.forEach(a),sa=i(We,` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),Q=l(We,"A",{href:!0,rel:!0});var Qt=o(Q);aa=i(Qt,"the dedicated documentation page"),Qt.forEach(a),ta=i(We,`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),We.forEach(a),bs=p(e),C=l(e,"H2",{class:!0});var Fs=o(C);O=l(Fs,"A",{id:!0,class:!0,href:!0});var Xt=o(O);Ge=l(Xt,"SPAN",{});var Zt=o(Ge);k(X.$$.fragment,Zt),Zt.forEach(a),Xt.forEach(a),ia=p(Fs),Je=l(Fs,"SPAN",{});var ei=o(Je);na=i(ei,"Retrieve Discussions and Pull Requests from the Hub"),ei.forEach(a),Fs.forEach(a),ws=p(e),W=l(e,"P",{});var Ys=o(W);la=i(Ys,"The "),Ke=l(Ys,"CODE",{});var si=o(Ke);oa=i(si,"HfApi"),si.forEach(a),ra=i(Ys," class allows you to retrieve Discussions and Pull Requests on a given repo:"),Ys.forEach(a),Es=p(e),k(Z.$$.fragment,e),qs=p(e),b=l(e,"P",{});var ue=o(b);Qe=l(ue,"CODE",{});var ai=o(Qe);ua=i(ai,"HfApi.get_repo_discussions"),ai.forEach(a),ca=i(ue," returns a "),ee=l(ue,"A",{href:!0,rel:!0});var ti=o(ee);ha=i(ti,"generator"),ti.forEach(a),pa=i(ue,` that yields
`),ce=l(ue,"A",{href:!0});var ii=o(ce);fa=i(ii,"Discussion"),ii.forEach(a),da=i(ue," objects. To get all the Discussions in a single list, run:"),ue.forEach(a),ys=p(e),k(se.$$.fragment,e),As=p(e),g=l(e,"P",{});var z=o(g);_a=i(z,"The "),he=l(z,"A",{href:!0});var ni=o(he);ga=i(ni,"Discussion"),ni.forEach(a),ma=i(z," object returned by "),pe=l(z,"A",{href:!0});var li=o(pe);va=i(li,"HfApi.get_repo_discussions()"),li.forEach(a),ba=i(z,` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),fe=l(z,"A",{href:!0});var oi=o(fe);wa=i(oi,"HfApi.get_discussion_details()"),oi.forEach(a),Ea=i(z,":"),z.forEach(a),js=p(e),k(ae.$$.fragment,e),Ds=p(e),_=l(e,"P",{});var M=o(_);de=l(M,"A",{href:!0});var ri=o(de);qa=i(ri,"HfApi.get_discussion_details()"),ri.forEach(a),ya=i(M," returns a "),_e=l(M,"A",{href:!0});var ui=o(_e);Aa=i(ui,"DiscussionWithDetails"),ui.forEach(a),ja=i(M," object, which is a subclass of "),ge=l(M,"A",{href:!0});var ci=o(ge);Da=i(ci,"Discussion"),ci.forEach(a),ka=i(M,`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the Discussion via `),Xe=l(M,"CODE",{});var hi=o(Xe);$a=i(hi,"DiscussionWithDetails.events"),hi.forEach(a),Pa=i(M,"."),M.forEach(a),ks=p(e),E=l(e,"P",{});var Ve=o(E);Ha=i(Ve,"In case of a Pull Request, you can retrieve the raw git diff with "),Ze=l(Ve,"CODE",{});var pi=o(Ze);Ra=i(pi,"DiscussionWithDetails.diff"),pi.forEach(a),xa=i(Ve,`. All the commits of the
Pull Request are listed in `),es=l(Ve,"CODE",{});var fi=o(es);Ta=i(fi,"DiscussionWithDetails.events"),fi.forEach(a),Ca=i(Ve,"."),Ve.forEach(a),$s=p(e),I=l(e,"H2",{class:!0});var Bs=o(I);V=l(Bs,"A",{id:!0,class:!0,href:!0});var di=o(V);ss=l(di,"SPAN",{});var _i=o(ss);k(te.$$.fragment,_i),_i.forEach(a),di.forEach(a),Ia=p(Bs),as=l(Bs,"SPAN",{});var gi=o(as);Sa=i(gi,"Create and edit a Discussion or Pull Request programmatically"),gi.forEach(a),Bs.forEach(a),Ps=p(e),q=l(e,"P",{});var Ue=o(q);La=i(Ue,"The "),me=l(Ue,"A",{href:!0});var mi=o(me);Ma=i(mi,"HfApi"),mi.forEach(a),Na=i(Ue,` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),ie=l(Ue,"A",{href:!0,rel:!0});var vi=o(ie);Oa=i(vi,"access token"),vi.forEach(a),Wa=i(Ue,` to create and edit Discussions
or Pull Requests.`),Ue.forEach(a),Hs=p(e),f=l(e,"P",{});var A=o(f);Va=i(A,"The simplest way to propose changes on a repo on the Hub is via the "),ve=l(A,"A",{href:!0});var bi=o(ve);Ua=i(bi,"create_commit()"),bi.forEach(a),Fa=i(A,` API: just
set the `),ts=l(A,"CODE",{});var wi=o(ts);Ya=i(wi,"create_pr"),wi.forEach(a),Ba=i(A," parameter to "),is=l(A,"CODE",{});var Ei=o(is);za=i(Ei,"True"),Ei.forEach(a),Ga=i(A,". This parameter is also available on other methods that wrap "),be=l(A,"A",{href:!0});var qi=o(be);Ja=i(qi,"create_commit()"),qi.forEach(a),Ka=i(A,":"),A.forEach(a),Rs=p(e),m=l(e,"UL",{});var G=o(m);ns=l(G,"LI",{});var yi=o(ns);we=l(yi,"A",{href:!0});var Ai=o(we);Qa=i(Ai,"upload_file()"),Ai.forEach(a),yi.forEach(a),Xa=p(G),ls=l(G,"LI",{});var ji=o(ls);Ee=l(ji,"A",{href:!0});var Di=o(Ee);Za=i(Di,"upload_folder()"),Di.forEach(a),ji.forEach(a),et=p(G),os=l(G,"LI",{});var ki=o(os);qe=l(ki,"A",{href:!0});var $i=o(qe);st=i($i,"delete_file()"),$i.forEach(a),ki.forEach(a),at=p(G),rs=l(G,"LI",{});var Pi=o(rs);ye=l(Pi,"A",{href:!0});var Hi=o(ye);tt=i(Hi,"metadata_update()"),Hi.forEach(a),Pi.forEach(a),G.forEach(a),xs=p(e),k(ne.$$.fragment,e),Ts=p(e),v=l(e,"P",{});var J=o(v);it=i(J,"You can also use "),Ae=l(J,"A",{href:!0});var Ri=o(Ae);nt=i(Ri,"HfApi.create_discussion()"),Ri.forEach(a),lt=i(J," (respectively "),je=l(J,"A",{href:!0});var xi=o(je);ot=i(xi,"HfApi.create_pull_request()"),xi.forEach(a),rt=i(J,`) to create a Discussion (respectively a Pull Request) on a repo.
Opening a Pull Request this way can be useful if you need to work on changes locally. Pull Requests opened this way will be in `),us=l(J,"CODE",{});var Ti=o(us);ut=i(Ti,'"draft"'),Ti.forEach(a),ct=i(J," mode."),J.forEach(a),Cs=p(e),k(le.$$.fragment,e),Is=p(e),U=l(e,"P",{});var zs=o(U);ht=i(zs,"Managing Pull Requests and Discussions can be done entirely with the "),De=l(zs,"A",{href:!0});var Ci=o(De);pt=i(Ci,"HfApi"),Ci.forEach(a),ft=i(zs," class. For example:"),zs.forEach(a),Ss=p(e),d=l(e,"UL",{});var j=o(d);ke=l(j,"LI",{});var Wt=o(ke);$e=l(Wt,"A",{href:!0});var Ii=o($e);dt=i(Ii,"comment_discussion()"),Ii.forEach(a),_t=i(Wt," to add comments"),Wt.forEach(a),gt=p(j),Pe=l(j,"LI",{});var Vt=o(Pe);He=l(Vt,"A",{href:!0});var Si=o(He);mt=i(Si,"edit_discussion_comment()"),Si.forEach(a),vt=i(Vt," to edit comments"),Vt.forEach(a),bt=p(j),Re=l(j,"LI",{});var Ut=o(Re);xe=l(Ut,"A",{href:!0});var Li=o(xe);wt=i(Li,"rename_discussion()"),Li.forEach(a),Et=i(Ut," to rename a Discussion or Pull Request"),Ut.forEach(a),qt=p(j),Te=l(j,"LI",{});var Ft=o(Te);Ce=l(Ft,"A",{href:!0});var Mi=o(Ce);yt=i(Mi,"change_discussion_status()"),Mi.forEach(a),At=i(Ft," to open or close a Discussion / Pull Request"),Ft.forEach(a),jt=p(j),Ie=l(j,"LI",{});var Yt=o(Ie);Se=l(Yt,"A",{href:!0});var Ni=o(Se);Dt=i(Ni,"merge_pull_request()"),Ni.forEach(a),kt=i(Yt," to merge a Pull Request"),Yt.forEach(a),j.forEach(a),Ls=p(e),F=l(e,"P",{});var Gs=o(F);$t=i(Gs,"Visit the "),Le=l(Gs,"A",{href:!0});var Oi=o(Le);Pt=i(Oi,"HfApi"),Oi.forEach(a),Ht=i(Gs," documentation page for an exhaustive reference of all available methods."),Gs.forEach(a),Ms=p(e),S=l(e,"H2",{class:!0});var Js=o(S);Y=l(Js,"A",{id:!0,class:!0,href:!0});var Wi=o(Y);cs=l(Wi,"SPAN",{});var Vi=o(cs);k(oe.$$.fragment,Vi),Vi.forEach(a),Wi.forEach(a),Rt=p(Js),hs=l(Js,"SPAN",{});var Ui=o(hs);xt=i(Ui,"Push changes to a Pull Request"),Ui.forEach(a),Js.forEach(a),Ns=p(e),Me=l(e,"P",{});var Fi=o(Me);ps=l(Fi,"EM",{});var Yi=o(ps);Tt=i(Yi,"Coming soon !"),Yi.forEach(a),Fi.forEach(a),Os=p(e),L=l(e,"H2",{class:!0});var Ks=o(L);B=l(Ks,"A",{id:!0,class:!0,href:!0});var Bi=o(B);fs=l(Bi,"SPAN",{});var zi=o(fs);k(re.$$.fragment,zi),zi.forEach(a),Bi.forEach(a),Ct=p(Ks),ds=l(Ks,"SPAN",{});var Gi=o(ds);It=i(Gi,"See also"),Gi.forEach(a),Ks.forEach(a),Ws=p(e),y=l(e,"P",{});var Fe=o(y);St=i(Fe,"For a more detailed reference, visit the "),Ne=l(Fe,"A",{href:!0});var Ji=o(Ne);Lt=i(Ji,"community"),Ji.forEach(a),Mt=i(Fe," and the "),Oe=l(Fe,"A",{href:!0});var Ki=o(Oe);Nt=i(Ki,"hf_api"),Ki.forEach(a),Ot=i(Fe," documentation page."),Fe.forEach(a),this.h()},h(){u(x,"name","hf:doc:metadata"),u(x,"content",JSON.stringify(nn)),u(N,"id","interact-with-discussions-and-pull-requests"),u(N,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(N,"href","#interact-with-discussions-and-pull-requests"),u(T,"class","relative group"),u(Q,"href","https://huggingface.co/docs/hub/repositories-pull-requests-discussions"),u(Q,"rel","nofollow"),u(O,"id","retrieve-discussions-and-pull-requests-from-the-hub"),u(O,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(O,"href","#retrieve-discussions-and-pull-requests-from-the-hub"),u(C,"class","relative group"),u(ee,"href","https://docs.python.org/3.7/howto/functional.html#generators"),u(ee,"rel","nofollow"),u(ce,"href","/docs/huggingface_hub/main/en/package_reference/community#huggingface_hub.Discussion"),u(he,"href","/docs/huggingface_hub/main/en/package_reference/community#huggingface_hub.Discussion"),u(pe,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.get_repo_discussions"),u(fe,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),u(de,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),u(_e,"href","/docs/huggingface_hub/main/en/package_reference/community#huggingface_hub.DiscussionWithDetails"),u(ge,"href","/docs/huggingface_hub/main/en/package_reference/community#huggingface_hub.Discussion"),u(V,"id","create-and-edit-a-discussion-or-pull-request-programmatically"),u(V,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(V,"href","#create-and-edit-a-discussion-or-pull-request-programmatically"),u(I,"class","relative group"),u(me,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi"),u(ie,"href","https://huggingface.co/docs/hub/security-tokens"),u(ie,"rel","nofollow"),u(ve,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit"),u(be,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit"),u(we,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.upload_file"),u(Ee,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.upload_folder"),u(qe,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.delete_file"),u(ye,"href","/docs/huggingface_hub/main/en/package_reference/cards#huggingface_hub.metadata_update"),u(Ae,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.create_discussion"),u(je,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.create_pull_request"),u(De,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi"),u($e,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.comment_discussion"),u(He,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.edit_discussion_comment"),u(xe,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.rename_discussion"),u(Ce,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.change_discussion_status"),u(Se,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi.merge_pull_request"),u(Le,"href","/docs/huggingface_hub/main/en/package_reference/hf_api#huggingface_hub.HfApi"),u(Y,"id","push-changes-to-a-pull-request"),u(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(Y,"href","#push-changes-to-a-pull-request"),u(S,"class","relative group"),u(B,"id","see-also"),u(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(B,"href","#see-also"),u(L,"class","relative group"),u(Ne,"href","/source/package_reference/community"),u(Oe,"href","/source/package_reference/hf_api")},m(e,r){s(document.head,x),c(e,ms,r),c(e,T,r),s(T,N),s(N,Ye),$(K,Ye,null),s(T,Qs),s(T,Be),s(Be,Xs),c(e,vs,r),c(e,w,r),s(w,Zs),s(w,ze),s(ze,ea),s(w,sa),s(w,Q),s(Q,aa),s(w,ta),c(e,bs,r),c(e,C,r),s(C,O),s(O,Ge),$(X,Ge,null),s(C,ia),s(C,Je),s(Je,na),c(e,ws,r),c(e,W,r),s(W,la),s(W,Ke),s(Ke,oa),s(W,ra),c(e,Es,r),$(Z,e,r),c(e,qs,r),c(e,b,r),s(b,Qe),s(Qe,ua),s(b,ca),s(b,ee),s(ee,ha),s(b,pa),s(b,ce),s(ce,fa),s(b,da),c(e,ys,r),$(se,e,r),c(e,As,r),c(e,g,r),s(g,_a),s(g,he),s(he,ga),s(g,ma),s(g,pe),s(pe,va),s(g,ba),s(g,fe),s(fe,wa),s(g,Ea),c(e,js,r),$(ae,e,r),c(e,Ds,r),c(e,_,r),s(_,de),s(de,qa),s(_,ya),s(_,_e),s(_e,Aa),s(_,ja),s(_,ge),s(ge,Da),s(_,ka),s(_,Xe),s(Xe,$a),s(_,Pa),c(e,ks,r),c(e,E,r),s(E,Ha),s(E,Ze),s(Ze,Ra),s(E,xa),s(E,es),s(es,Ta),s(E,Ca),c(e,$s,r),c(e,I,r),s(I,V),s(V,ss),$(te,ss,null),s(I,Ia),s(I,as),s(as,Sa),c(e,Ps,r),c(e,q,r),s(q,La),s(q,me),s(me,Ma),s(q,Na),s(q,ie),s(ie,Oa),s(q,Wa),c(e,Hs,r),c(e,f,r),s(f,Va),s(f,ve),s(ve,Ua),s(f,Fa),s(f,ts),s(ts,Ya),s(f,Ba),s(f,is),s(is,za),s(f,Ga),s(f,be),s(be,Ja),s(f,Ka),c(e,Rs,r),c(e,m,r),s(m,ns),s(ns,we),s(we,Qa),s(m,Xa),s(m,ls),s(ls,Ee),s(Ee,Za),s(m,et),s(m,os),s(os,qe),s(qe,st),s(m,at),s(m,rs),s(rs,ye),s(ye,tt),c(e,xs,r),$(ne,e,r),c(e,Ts,r),c(e,v,r),s(v,it),s(v,Ae),s(Ae,nt),s(v,lt),s(v,je),s(je,ot),s(v,rt),s(v,us),s(us,ut),s(v,ct),c(e,Cs,r),$(le,e,r),c(e,Is,r),c(e,U,r),s(U,ht),s(U,De),s(De,pt),s(U,ft),c(e,Ss,r),c(e,d,r),s(d,ke),s(ke,$e),s($e,dt),s(ke,_t),s(d,gt),s(d,Pe),s(Pe,He),s(He,mt),s(Pe,vt),s(d,bt),s(d,Re),s(Re,xe),s(xe,wt),s(Re,Et),s(d,qt),s(d,Te),s(Te,Ce),s(Ce,yt),s(Te,At),s(d,jt),s(d,Ie),s(Ie,Se),s(Se,Dt),s(Ie,kt),c(e,Ls,r),c(e,F,r),s(F,$t),s(F,Le),s(Le,Pt),s(F,Ht),c(e,Ms,r),c(e,S,r),s(S,Y),s(Y,cs),$(oe,cs,null),s(S,Rt),s(S,hs),s(hs,xt),c(e,Ns,r),c(e,Me,r),s(Me,ps),s(ps,Tt),c(e,Os,r),c(e,L,r),s(L,B),s(B,fs),$(re,fs,null),s(L,Ct),s(L,ds),s(ds,It),c(e,Ws,r),c(e,y,r),s(y,St),s(y,Ne),s(Ne,Lt),s(y,Mt),s(y,Oe),s(Oe,Nt),s(y,Ot),Vs=!0},p:sn,i(e){Vs||(P(K.$$.fragment,e),P(X.$$.fragment,e),P(Z.$$.fragment,e),P(se.$$.fragment,e),P(ae.$$.fragment,e),P(te.$$.fragment,e),P(ne.$$.fragment,e),P(le.$$.fragment,e),P(oe.$$.fragment,e),P(re.$$.fragment,e),Vs=!0)},o(e){H(K.$$.fragment,e),H(X.$$.fragment,e),H(Z.$$.fragment,e),H(se.$$.fragment,e),H(ae.$$.fragment,e),H(te.$$.fragment,e),H(ne.$$.fragment,e),H(le.$$.fragment,e),H(oe.$$.fragment,e),H(re.$$.fragment,e),Vs=!1},d(e){a(x),e&&a(ms),e&&a(T),R(K),e&&a(vs),e&&a(w),e&&a(bs),e&&a(C),R(X),e&&a(ws),e&&a(W),e&&a(Es),R(Z,e),e&&a(qs),e&&a(b),e&&a(ys),R(se,e),e&&a(As),e&&a(g),e&&a(js),R(ae,e),e&&a(Ds),e&&a(_),e&&a(ks),e&&a(E),e&&a($s),e&&a(I),R(te),e&&a(Ps),e&&a(q),e&&a(Hs),e&&a(f),e&&a(Rs),e&&a(m),e&&a(xs),R(ne,e),e&&a(Ts),e&&a(v),e&&a(Cs),R(le,e),e&&a(Is),e&&a(U),e&&a(Ss),e&&a(d),e&&a(Ls),e&&a(F),e&&a(Ms),e&&a(S),R(oe),e&&a(Ns),e&&a(Me),e&&a(Os),e&&a(L),R(re),e&&a(Ws),e&&a(y)}}}const nn={local:"interact-with-discussions-and-pull-requests",sections:[{local:"retrieve-discussions-and-pull-requests-from-the-hub",title:"Retrieve Discussions and Pull Requests from the Hub"},{local:"create-and-edit-a-discussion-or-pull-request-programmatically",title:"Create and edit a Discussion or Pull Request programmatically"},{local:"push-changes-to-a-pull-request",title:"Push changes to a Pull Request"},{local:"see-also",title:"See also"}],title:"Interact with Discussions and Pull Requests "};function ln(Bt){return an(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class cn extends Qi{constructor(x){super();Xi(this,x,ln,tn,Zi,{})}}export{cn as default,nn as metadata};
