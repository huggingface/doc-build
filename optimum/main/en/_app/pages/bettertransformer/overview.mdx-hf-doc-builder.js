import{S as Ao,i as To,s as $o,e as o,k as f,w as De,t as i,M as xo,c as a,d as r,m as u,a as l,x as Me,h as n,b as s,G as e,g as p,y as Re,L as Po,q as qe,o as je,B as Ne,v as Io}from"../../chunks/vendor-hf-doc-builder.js";import{I as dt}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{C as Bo}from"../../chunks/CodeBlock-hf-doc-builder.js";function Lo(yr){let w,Ue,_,A,ie,S,ct,ne,pt,Fe,T,mt,fe,vt,wt,Ge,E,$,ue,C,_t,he,Et,He,x,gt,de,bt,yt,Ve,g,P,ce,O,kt,pe,At,Ye,K,Tt,Qe,h,me,D,$t,xt,ve,M,Pt,It,we,R,Bt,Lt,_e,q,St,Ct,Ee,j,Ot,Dt,ge,N,Mt,Rt,be,U,qt,jt,ye,F,Nt,Ut,ke,G,Ft,Gt,Ae,H,Ht,Vt,Te,V,Yt,Qt,$e,Y,Wt,Xt,xe,Q,Jt,Zt,Pe,W,zt,We,ee,Kt,Xe,b,I,Ie,X,er,Be,tr,Je,B,rr,Le,or,ar,Ze,J,ze,m,lr,Se,sr,ir,Ce,nr,fr,Ke,v,ur,Oe,hr,dr,Z,cr,pr,et,z,L,y,te,mr,vr,re,wr,_r,k,oe,Er,gr,ae,br,tt;return S=new dt({}),C=new dt({}),O=new dt({}),X=new dt({}),J=new Bo({props:{code:`from transformers import AutoModelForSequenceClassification
from optimum.bettertransformer import BetterTransformer
model_hf = AutoModelForSequenceClassification.from_pretrained("bert-base-cased")
model = BetterTransformer.transform(model_hf, keep_original_model=True)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModelForSequenceClassification
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> optimum.bettertransformer <span class="hljs-keyword">import</span> BetterTransformer
<span class="hljs-meta">&gt;&gt;&gt; </span>model_hf = AutoModelForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;bert-base-cased&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>model = BetterTransformer.transform(model_hf, keep_original_model=<span class="hljs-literal">True</span>)`}}),{c(){w=o("meta"),Ue=f(),_=o("h1"),A=o("a"),ie=o("span"),De(S.$$.fragment),ct=f(),ne=o("span"),pt=i("Overview"),Fe=f(),T=o("p"),mt=i("\u{1F917} Optimum provides an integration with "),fe=o("code"),vt=i("BetterTransformer"),wt=i(", a stable API from PyTorch to benefit from interesting speedups on CPU & GPU through sparsity and fused kernels."),Ge=f(),E=o("h2"),$=o("a"),ue=o("span"),De(C.$$.fragment),_t=f(),he=o("span"),Et=i("Quickstart"),He=f(),x=o("p"),gt=i("Since its 1.13 version, PyTorch released the stable version of "),de=o("code"),bt=i("BetterTransformer"),yt=i(` in its library. You can benefit from interesting speedup on most consumer-type devices, including CPUs, older and newer versions of NIVIDIA GPUs.
You can now use this feature in \u{1F917} Optimum together with Transformers and use it for major models in the Hugging Face ecosystem.`),Ve=f(),g=o("h3"),P=o("a"),ce=o("span"),De(O.$$.fragment),kt=f(),pe=o("span"),At=i("Supported models"),Ye=f(),K=o("p"),Tt=i("The list of supported model below:"),Qe=f(),h=o("ul"),me=o("li"),D=o("a"),$t=i("AlBERT"),xt=f(),ve=o("li"),M=o("a"),Pt=i("BART"),It=f(),we=o("li"),R=o("a"),Bt=i("BERT"),Lt=f(),_e=o("li"),q=o("a"),St=i("CamemBERT"),Ct=f(),Ee=o("li"),j=o("a"),Ot=i("Data2VecText"),Dt=f(),ge=o("li"),N=o("a"),Mt=i("DistilBert"),Rt=f(),be=o("li"),U=o("a"),qt=i("Electra"),jt=f(),ye=o("li"),F=o("a"),Nt=i("Ernie"),Ut=f(),ke=o("li"),G=o("a"),Ft=i("LayoutLM"),Gt=f(),Ae=o("li"),H=o("a"),Ht=i("MarkupLM"),Vt=f(),Te=o("li"),V=o("a"),Yt=i("RoBERTa"),Qt=f(),$e=o("li"),Y=o("a"),Wt=i("Splinter"),Xt=f(),xe=o("li"),Q=o("a"),Jt=i("XLMRoberta"),Zt=f(),Pe=o("li"),W=o("a"),zt=i("Whisper"),We=f(),ee=o("p"),Kt=i("Let us know by opening an issue in \u{1F917} Optimum if you want more models to be supported, or check out the contribution guideline if you want to add it by yourself!"),Xe=f(),b=o("h3"),I=o("a"),Ie=o("span"),De(X.$$.fragment),er=f(),Be=o("span"),tr=i("Quick usage"),Je=f(),B=o("p"),rr=i("In order to use the "),Le=o("code"),or=i("BetterTransformer"),ar=i(" API just run the following commands:"),Ze=f(),De(J.$$.fragment),ze=f(),m=o("p"),lr=i("You can leave "),Se=o("code"),sr=i("keep_original_model=False"),ir=i(" in case you want to overwrite the current model with its "),Ce=o("code"),nr=i("BetterTransformer"),fr=i(" version."),Ke=f(),v=o("p"),ur=i("More details on "),Oe=o("code"),hr=i("tutorials"),dr=i(" section to deeply understand how to use it, or check the "),Z=o("a"),cr=i("Google colab demo"),pr=i("!"),et=f(),z=o("div"),L=o("div"),y=o("a"),te=o("div"),mr=i("Tutorials"),vr=f(),re=o("p"),wr=i("Learn the basics and become familiar with \u{1F917} and `BetterTransformer` integration. Start here if you are using \u{1F917} Optimum for the first time!"),_r=f(),k=o("a"),oe=o("div"),Er=i("How-to guides"),gr=f(),ae=o("p"),br=i("You want to add your own model for `BetterTransformer` support? Start here to check the contribution guideline!"),this.h()},l(t){const d=xo('[data-svelte="svelte-1phssyn"]',document.head);w=a(d,"META",{name:!0,content:!0}),d.forEach(r),Ue=u(t),_=a(t,"H1",{class:!0});var rt=l(_);A=a(rt,"A",{id:!0,class:!0,href:!0});var kr=l(A);ie=a(kr,"SPAN",{});var Ar=l(ie);Me(S.$$.fragment,Ar),Ar.forEach(r),kr.forEach(r),ct=u(rt),ne=a(rt,"SPAN",{});var Tr=l(ne);pt=n(Tr,"Overview"),Tr.forEach(r),rt.forEach(r),Fe=u(t),T=a(t,"P",{});var ot=l(T);mt=n(ot,"\u{1F917} Optimum provides an integration with "),fe=a(ot,"CODE",{});var $r=l(fe);vt=n($r,"BetterTransformer"),$r.forEach(r),wt=n(ot,", a stable API from PyTorch to benefit from interesting speedups on CPU & GPU through sparsity and fused kernels."),ot.forEach(r),Ge=u(t),E=a(t,"H2",{class:!0});var at=l(E);$=a(at,"A",{id:!0,class:!0,href:!0});var xr=l($);ue=a(xr,"SPAN",{});var Pr=l(ue);Me(C.$$.fragment,Pr),Pr.forEach(r),xr.forEach(r),_t=u(at),he=a(at,"SPAN",{});var Ir=l(he);Et=n(Ir,"Quickstart"),Ir.forEach(r),at.forEach(r),He=u(t),x=a(t,"P",{});var lt=l(x);gt=n(lt,"Since its 1.13 version, PyTorch released the stable version of "),de=a(lt,"CODE",{});var Br=l(de);bt=n(Br,"BetterTransformer"),Br.forEach(r),yt=n(lt,` in its library. You can benefit from interesting speedup on most consumer-type devices, including CPUs, older and newer versions of NIVIDIA GPUs.
You can now use this feature in \u{1F917} Optimum together with Transformers and use it for major models in the Hugging Face ecosystem.`),lt.forEach(r),Ve=u(t),g=a(t,"H3",{class:!0});var st=l(g);P=a(st,"A",{id:!0,class:!0,href:!0});var Lr=l(P);ce=a(Lr,"SPAN",{});var Sr=l(ce);Me(O.$$.fragment,Sr),Sr.forEach(r),Lr.forEach(r),kt=u(st),pe=a(st,"SPAN",{});var Cr=l(pe);At=n(Cr,"Supported models"),Cr.forEach(r),st.forEach(r),Ye=u(t),K=a(t,"P",{});var Or=l(K);Tt=n(Or,"The list of supported model below:"),Or.forEach(r),Qe=u(t),h=a(t,"UL",{});var c=l(h);me=a(c,"LI",{});var Dr=l(me);D=a(Dr,"A",{href:!0,rel:!0});var Mr=l(D);$t=n(Mr,"AlBERT"),Mr.forEach(r),Dr.forEach(r),xt=u(c),ve=a(c,"LI",{});var Rr=l(ve);M=a(Rr,"A",{href:!0,rel:!0});var qr=l(M);Pt=n(qr,"BART"),qr.forEach(r),Rr.forEach(r),It=u(c),we=a(c,"LI",{});var jr=l(we);R=a(jr,"A",{href:!0,rel:!0});var Nr=l(R);Bt=n(Nr,"BERT"),Nr.forEach(r),jr.forEach(r),Lt=u(c),_e=a(c,"LI",{});var Ur=l(_e);q=a(Ur,"A",{href:!0,rel:!0});var Fr=l(q);St=n(Fr,"CamemBERT"),Fr.forEach(r),Ur.forEach(r),Ct=u(c),Ee=a(c,"LI",{});var Gr=l(Ee);j=a(Gr,"A",{href:!0,rel:!0});var Hr=l(j);Ot=n(Hr,"Data2VecText"),Hr.forEach(r),Gr.forEach(r),Dt=u(c),ge=a(c,"LI",{});var Vr=l(ge);N=a(Vr,"A",{href:!0,rel:!0});var Yr=l(N);Mt=n(Yr,"DistilBert"),Yr.forEach(r),Vr.forEach(r),Rt=u(c),be=a(c,"LI",{});var Qr=l(be);U=a(Qr,"A",{href:!0,rel:!0});var Wr=l(U);qt=n(Wr,"Electra"),Wr.forEach(r),Qr.forEach(r),jt=u(c),ye=a(c,"LI",{});var Xr=l(ye);F=a(Xr,"A",{href:!0,rel:!0});var Jr=l(F);Nt=n(Jr,"Ernie"),Jr.forEach(r),Xr.forEach(r),Ut=u(c),ke=a(c,"LI",{});var Zr=l(ke);G=a(Zr,"A",{href:!0,rel:!0});var zr=l(G);Ft=n(zr,"LayoutLM"),zr.forEach(r),Zr.forEach(r),Gt=u(c),Ae=a(c,"LI",{});var Kr=l(Ae);H=a(Kr,"A",{href:!0,rel:!0});var eo=l(H);Ht=n(eo,"MarkupLM"),eo.forEach(r),Kr.forEach(r),Vt=u(c),Te=a(c,"LI",{});var to=l(Te);V=a(to,"A",{href:!0,rel:!0});var ro=l(V);Yt=n(ro,"RoBERTa"),ro.forEach(r),to.forEach(r),Qt=u(c),$e=a(c,"LI",{});var oo=l($e);Y=a(oo,"A",{href:!0,rel:!0});var ao=l(Y);Wt=n(ao,"Splinter"),ao.forEach(r),oo.forEach(r),Xt=u(c),xe=a(c,"LI",{});var lo=l(xe);Q=a(lo,"A",{href:!0,rel:!0});var so=l(Q);Jt=n(so,"XLMRoberta"),so.forEach(r),lo.forEach(r),Zt=u(c),Pe=a(c,"LI",{});var io=l(Pe);W=a(io,"A",{href:!0,rel:!0});var no=l(W);zt=n(no,"Whisper"),no.forEach(r),io.forEach(r),c.forEach(r),We=u(t),ee=a(t,"P",{});var fo=l(ee);Kt=n(fo,"Let us know by opening an issue in \u{1F917} Optimum if you want more models to be supported, or check out the contribution guideline if you want to add it by yourself!"),fo.forEach(r),Xe=u(t),b=a(t,"H3",{class:!0});var it=l(b);I=a(it,"A",{id:!0,class:!0,href:!0});var uo=l(I);Ie=a(uo,"SPAN",{});var ho=l(Ie);Me(X.$$.fragment,ho),ho.forEach(r),uo.forEach(r),er=u(it),Be=a(it,"SPAN",{});var co=l(Be);tr=n(co,"Quick usage"),co.forEach(r),it.forEach(r),Je=u(t),B=a(t,"P",{});var nt=l(B);rr=n(nt,"In order to use the "),Le=a(nt,"CODE",{});var po=l(Le);or=n(po,"BetterTransformer"),po.forEach(r),ar=n(nt," API just run the following commands:"),nt.forEach(r),Ze=u(t),Me(J.$$.fragment,t),ze=u(t),m=a(t,"P",{});var le=l(m);lr=n(le,"You can leave "),Se=a(le,"CODE",{});var mo=l(Se);sr=n(mo,"keep_original_model=False"),mo.forEach(r),ir=n(le," in case you want to overwrite the current model with its "),Ce=a(le,"CODE",{});var vo=l(Ce);nr=n(vo,"BetterTransformer"),vo.forEach(r),fr=n(le," version."),le.forEach(r),Ke=u(t),v=a(t,"P",{});var se=l(v);ur=n(se,"More details on "),Oe=a(se,"CODE",{});var wo=l(Oe);hr=n(wo,"tutorials"),wo.forEach(r),dr=n(se," section to deeply understand how to use it, or check the "),Z=a(se,"A",{href:!0,rel:!0});var _o=l(Z);cr=n(_o,"Google colab demo"),_o.forEach(r),pr=n(se,"!"),se.forEach(r),et=u(t),z=a(t,"DIV",{class:!0});var Eo=l(z);L=a(Eo,"DIV",{class:!0});var ft=l(L);y=a(ft,"A",{class:!0,href:!0});var ut=l(y);te=a(ut,"DIV",{class:!0});var go=l(te);mr=n(go,"Tutorials"),go.forEach(r),vr=u(ut),re=a(ut,"P",{class:!0});var bo=l(re);wr=n(bo,"Learn the basics and become familiar with \u{1F917} and `BetterTransformer` integration. Start here if you are using \u{1F917} Optimum for the first time!"),bo.forEach(r),ut.forEach(r),_r=u(ft),k=a(ft,"A",{class:!0,href:!0});var ht=l(k);oe=a(ht,"DIV",{class:!0});var yo=l(oe);Er=n(yo,"How-to guides"),yo.forEach(r),gr=u(ht),ae=a(ht,"P",{class:!0});var ko=l(ae);br=n(ko,"You want to add your own model for `BetterTransformer` support? Start here to check the contribution guideline!"),ko.forEach(r),ht.forEach(r),ft.forEach(r),Eo.forEach(r),this.h()},h(){s(w,"name","hf:doc:metadata"),s(w,"content",JSON.stringify(So)),s(A,"id","overview"),s(A,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(A,"href","#overview"),s(_,"class","relative group"),s($,"id","quickstart"),s($,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s($,"href","#quickstart"),s(E,"class","relative group"),s(P,"id","supported-models"),s(P,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(P,"href","#supported-models"),s(g,"class","relative group"),s(D,"href","https://arxiv.org/abs/1909.11942"),s(D,"rel","nofollow"),s(M,"href","https://arxiv.org/abs/1910.13461"),s(M,"rel","nofollow"),s(R,"href","https://arxiv.org/abs/1810.04805"),s(R,"rel","nofollow"),s(q,"href","https://arxiv.org/abs/1911.03894"),s(q,"rel","nofollow"),s(j,"href","https://arxiv.org/abs/2202.03555"),s(j,"rel","nofollow"),s(N,"href","https://arxiv.org/abs/1910.01108"),s(N,"rel","nofollow"),s(U,"href","https://arxiv.org/abs/2003.10555"),s(U,"rel","nofollow"),s(F,"href","https://arxiv.org/abs/1904.09223"),s(F,"rel","nofollow"),s(G,"href","https://arxiv.org/abs/1912.13318"),s(G,"rel","nofollow"),s(H,"href","https://arxiv.org/abs/2110.08518"),s(H,"rel","nofollow"),s(V,"href","https://arxiv.org/abs/1907.11692"),s(V,"rel","nofollow"),s(Y,"href","https://arxiv.org/abs/2101.00438"),s(Y,"rel","nofollow"),s(Q,"href","https://arxiv.org/abs/1911.02116"),s(Q,"rel","nofollow"),s(W,"href","https://cdn.openai.com/papers/whisper.pdf"),s(W,"rel","nofollow"),s(I,"id","quick-usage"),s(I,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(I,"href","#quick-usage"),s(b,"class","relative group"),s(Z,"href","https://colab.research.google.com/drive/1Lv2RCG_AT6bZNdlL1oDDNNiwBBuirwI-?usp=sharing"),s(Z,"rel","nofollow"),s(te,"class","w-full text-center bg-gradient-to-br from-blue-400 to-blue-500 rounded-lg py-1.5 font-semibold mb-5 text-white text-lg leading-relaxed"),s(re,"class","text-gray-700"),s(y,"class","!no-underline border dark:border-gray-700 p-5 rounded-lg shadow hover:shadow-lg"),s(y,"href","./tutorials/content"),s(oe,"class","w-full text-center bg-gradient-to-br from-indigo-400 to-indigo-500 rounded-lg py-1.5 font-semibold mb-5 text-white text-lg leading-relaxed"),s(ae,"class","text-gray-700"),s(k,"class","!no-underline border dark:border-gray-700 p-5 rounded-lg shadow hover:shadow-lg"),s(k,"href","./contribution/content"),s(L,"class","w-full flex flex-col space-y-4 md:space-y-0 md:grid md:grid-cols-2 md:gap-y-4 md:gap-x-5"),s(z,"class","mt-10")},m(t,d){e(document.head,w),p(t,Ue,d),p(t,_,d),e(_,A),e(A,ie),Re(S,ie,null),e(_,ct),e(_,ne),e(ne,pt),p(t,Fe,d),p(t,T,d),e(T,mt),e(T,fe),e(fe,vt),e(T,wt),p(t,Ge,d),p(t,E,d),e(E,$),e($,ue),Re(C,ue,null),e(E,_t),e(E,he),e(he,Et),p(t,He,d),p(t,x,d),e(x,gt),e(x,de),e(de,bt),e(x,yt),p(t,Ve,d),p(t,g,d),e(g,P),e(P,ce),Re(O,ce,null),e(g,kt),e(g,pe),e(pe,At),p(t,Ye,d),p(t,K,d),e(K,Tt),p(t,Qe,d),p(t,h,d),e(h,me),e(me,D),e(D,$t),e(h,xt),e(h,ve),e(ve,M),e(M,Pt),e(h,It),e(h,we),e(we,R),e(R,Bt),e(h,Lt),e(h,_e),e(_e,q),e(q,St),e(h,Ct),e(h,Ee),e(Ee,j),e(j,Ot),e(h,Dt),e(h,ge),e(ge,N),e(N,Mt),e(h,Rt),e(h,be),e(be,U),e(U,qt),e(h,jt),e(h,ye),e(ye,F),e(F,Nt),e(h,Ut),e(h,ke),e(ke,G),e(G,Ft),e(h,Gt),e(h,Ae),e(Ae,H),e(H,Ht),e(h,Vt),e(h,Te),e(Te,V),e(V,Yt),e(h,Qt),e(h,$e),e($e,Y),e(Y,Wt),e(h,Xt),e(h,xe),e(xe,Q),e(Q,Jt),e(h,Zt),e(h,Pe),e(Pe,W),e(W,zt),p(t,We,d),p(t,ee,d),e(ee,Kt),p(t,Xe,d),p(t,b,d),e(b,I),e(I,Ie),Re(X,Ie,null),e(b,er),e(b,Be),e(Be,tr),p(t,Je,d),p(t,B,d),e(B,rr),e(B,Le),e(Le,or),e(B,ar),p(t,Ze,d),Re(J,t,d),p(t,ze,d),p(t,m,d),e(m,lr),e(m,Se),e(Se,sr),e(m,ir),e(m,Ce),e(Ce,nr),e(m,fr),p(t,Ke,d),p(t,v,d),e(v,ur),e(v,Oe),e(Oe,hr),e(v,dr),e(v,Z),e(Z,cr),e(v,pr),p(t,et,d),p(t,z,d),e(z,L),e(L,y),e(y,te),e(te,mr),e(y,vr),e(y,re),e(re,wr),e(L,_r),e(L,k),e(k,oe),e(oe,Er),e(k,gr),e(k,ae),e(ae,br),tt=!0},p:Po,i(t){tt||(qe(S.$$.fragment,t),qe(C.$$.fragment,t),qe(O.$$.fragment,t),qe(X.$$.fragment,t),qe(J.$$.fragment,t),tt=!0)},o(t){je(S.$$.fragment,t),je(C.$$.fragment,t),je(O.$$.fragment,t),je(X.$$.fragment,t),je(J.$$.fragment,t),tt=!1},d(t){r(w),t&&r(Ue),t&&r(_),Ne(S),t&&r(Fe),t&&r(T),t&&r(Ge),t&&r(E),Ne(C),t&&r(He),t&&r(x),t&&r(Ve),t&&r(g),Ne(O),t&&r(Ye),t&&r(K),t&&r(Qe),t&&r(h),t&&r(We),t&&r(ee),t&&r(Xe),t&&r(b),Ne(X),t&&r(Je),t&&r(B),t&&r(Ze),Ne(J,t),t&&r(ze),t&&r(m),t&&r(Ke),t&&r(v),t&&r(et),t&&r(z)}}}const So={local:"overview",sections:[{local:"quickstart",sections:[{local:"supported-models",title:"Supported models"},{local:"quick-usage",title:"Quick usage"}],title:"Quickstart"}],title:"Overview"};function Co(yr){return Io(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ro extends Ao{constructor(w){super();To(this,w,Co,Lo,$o,{})}}export{Ro as default,So as metadata};
