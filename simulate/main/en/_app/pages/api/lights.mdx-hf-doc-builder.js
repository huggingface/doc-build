import{S as te,i as oe,s as ne,e as a,k as f,w as C,t as q,M as ae,c as i,d as t,m as y,a as c,x as W,h as O,b as m,G as o,g as L,y as B,L as ie,q as G,o as H,B as J,v as se}from"../../chunks/vendor-hf-doc-builder.js";import{D as ee}from"../../chunks/Docstring-hf-doc-builder.js";import{I as re}from"../../chunks/IconCopyLink-hf-doc-builder.js";function le(j){let s,T,r,d,$,p,S,b,D,N,n,g,U,w,M,F,h,u,I,x,R,A,_,V,E;return p=new re({}),g=new ee({props:{name:"class simulate.Light",anchor:"simulate.Light",parameters:[{name:"intensity",val:": float = 1.0"},{name:"color",val:": typing.Optional[typing.List[float]] = None"},{name:"range",val:": typing.Optional[float] = None"},{name:"inner_cone_angle",val:": typing.Union[float, numpy.ndarray] = 0.0"},{name:"outer_cone_angle",val:": typing.Union[float, numpy.ndarray] = 45.0"},{name:"light_type",val:": str = 'directional'"},{name:"name",val:": typing.Optional[str] = None"},{name:"position",val:": typing.Optional[typing.List[float]] = None"},{name:"rotation",val:": typing.Optional[typing.List[float]] = None"},{name:"scaling",val:": typing.Union[float, typing.List[float], NoneType] = None"},{name:"is_actor",val:": bool = False"},{name:"parent",val:": typing.Optional[ForwardRef('Asset')] = None"},{name:"children",val:": typing.Optional[typing.List[ForwardRef('Asset')]] = None"}],parametersDescription:[{anchor:"simulate.Light.intensity",description:`<strong>intensity</strong> (<code>float</code>, <em>optional</em>, defaults to <code>1.0</code>) &#x2014;
The intensity of the light.`,name:"intensity"},{anchor:"simulate.Light.color",description:`<strong>color</strong> (<code>List[float]</code>, <em>optional</em>, defaults to <code>[1.0, 1.0, 1.0]</code>) &#x2014;
The color of the light.`,name:"color"},{anchor:"simulate.Light.range",description:`<strong>range</strong> (<code>float</code>, <em>optional</em>, defaults to <code>None</code>) &#x2014;
The range of the light.`,name:"range"},{anchor:"simulate.Light.inner_cone_angle",description:`<strong>inner_cone_angle</strong> (<code>float</code> or <code>np.ndarray</code>, <em>optional</em>, defaults to <code>0.0</code>) &#x2014;
The inner cone angle of the light.`,name:"inner_cone_angle"},{anchor:"simulate.Light.outer_cone_angle",description:`<strong>outer_cone_angle</strong> (<code>float</code> or <code>np.ndarray</code>, <em>optional</em>, defaults to <code>45.0</code>) &#x2014;
The outer cone angle of the light.`,name:"outer_cone_angle"},{anchor:"simulate.Light.light_type",description:`<strong>light_type</strong> (<code>str</code>, <em>optional</em>, defaults to <code>&quot;directional&quot;</code>) &#x2014;
The type of the light. 2 types of punctual lights are implemented:<ul>
<li><code>&quot;directional&quot;</code>: an infinitely distant point source</li>
<li><code>&quot;positional&quot;</code>: point sources located in the real-world.
A cone angle can be defined to limit the spatial distribution of a positional light beam in which case
these are often known as spotlight. a Value of None or above 90 degree means no spatial limitation.</li>
</ul>`,name:"light_type"},{anchor:"simulate.Light.name",description:`<strong>name</strong> (<code>str</code>, <em>optional</em>, defaults to <code>None</code>) &#x2014;
The name of the light.`,name:"name"},{anchor:"simulate.Light.position",description:`<strong>position</strong> (<code>List[float]</code>, <em>optional</em>, defaults to <code>[0.0, 0.0, 0.0]</code>) &#x2014;
The position of the light.`,name:"position"},{anchor:"simulate.Light.rotation",description:`<strong>rotation</strong> (<code>List[float]</code>, <em>optional</em>, defaults to <code>[0.0, 0.0, 0.0]</code>) &#x2014;
The rotation of the light.`,name:"rotation"},{anchor:"simulate.Light.scaling",description:`<strong>scaling</strong> (<code>float</code> or <code>List[float]</code>, <em>optional</em>, defaults to <code>1.0</code>) &#x2014;
The scaling of the light.`,name:"scaling"},{anchor:"simulate.Light.is_actor",description:`<strong>is_actor</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether the light is an actor.`,name:"is_actor"},{anchor:"simulate.Light.parent",description:`<strong>parent</strong> (<code>Asset</code>, <em>optional</em>, defaults to <code>None</code>) &#x2014;
The parent of the light.`,name:"parent"},{anchor:"simulate.Light.children",description:`<strong>children</strong> (<code>List[Asset]</code>, <em>optional</em>, defaults to <code>None</code>) &#x2014;
The children of the light.`,name:"children"}],source:"https://github.com/huggingface/simulate/blob/main/src/simulate/assets/light.py#L24"}}),u=new ee({props:{name:"copy",anchor:"simulate.Light.copy",parameters:[{name:"with_children",val:": bool = True"},{name:"**kwargs",val:": typing.Any"}],parametersDescription:[{anchor:"simulate.Light.copy.with_children",description:`<strong>with_children</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether to copy the children of the asset.`,name:"with_children"}],source:"https://github.com/huggingface/simulate/blob/main/src/simulate/assets/light.py#L103",returnDescription:`
<p>The copy of the asset.</p>
`,returnType:`
<p>copy (<code>Light</code>)</p>
`}}),{c(){s=a("meta"),T=f(),r=a("h1"),d=a("a"),$=a("span"),C(p.$$.fragment),S=f(),b=a("span"),D=q("Lights"),N=f(),n=a("div"),C(g.$$.fragment),U=f(),w=a("p"),M=q(`A Scene Light.
Punctual lights are defined as infinitely small points that emit light in well-defined directions and intensities.
Angles are in degrees.`),F=f(),h=a("div"),C(u.$$.fragment),I=f(),x=a("p"),R=q("Make a copy of the Asset."),A=f(),_=a("p"),V=q("Under construction \u{1F6A7}."),this.h()},l(e){const l=ae('[data-svelte="svelte-1phssyn"]',document.head);s=i(l,"META",{name:!0,content:!0}),l.forEach(t),T=y(e),r=i(e,"H1",{class:!0});var P=c(r);d=i(P,"A",{id:!0,class:!0,href:!0});var z=c(d);$=i(z,"SPAN",{});var K=c($);W(p.$$.fragment,K),K.forEach(t),z.forEach(t),S=y(P),b=i(P,"SPAN",{});var Q=c(b);D=O(Q,"Lights"),Q.forEach(t),P.forEach(t),N=y(e),n=i(e,"DIV",{class:!0});var v=c(n);W(g.$$.fragment,v),U=y(v),w=i(v,"P",{});var X=c(w);M=O(X,`A Scene Light.
Punctual lights are defined as infinitely small points that emit light in well-defined directions and intensities.
Angles are in degrees.`),X.forEach(t),F=y(v),h=i(v,"DIV",{class:!0});var k=c(h);W(u.$$.fragment,k),I=y(k),x=i(k,"P",{});var Y=c(x);R=O(Y,"Make a copy of the Asset."),Y.forEach(t),k.forEach(t),v.forEach(t),A=y(e),_=i(e,"P",{});var Z=c(_);V=O(Z,"Under construction \u{1F6A7}."),Z.forEach(t),this.h()},h(){m(s,"name","hf:doc:metadata"),m(s,"content",JSON.stringify(ce)),m(d,"id","simulate.Light"),m(d,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),m(d,"href","#simulate.Light"),m(r,"class","relative group"),m(h,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),m(n,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(e,l){o(document.head,s),L(e,T,l),L(e,r,l),o(r,d),o(d,$),B(p,$,null),o(r,S),o(r,b),o(b,D),L(e,N,l),L(e,n,l),B(g,n,null),o(n,U),o(n,w),o(w,M),o(n,F),o(n,h),B(u,h,null),o(h,I),o(h,x),o(x,R),L(e,A,l),L(e,_,l),o(_,V),E=!0},p:ie,i(e){E||(G(p.$$.fragment,e),G(g.$$.fragment,e),G(u.$$.fragment,e),E=!0)},o(e){H(p.$$.fragment,e),H(g.$$.fragment,e),H(u.$$.fragment,e),E=!1},d(e){t(s),e&&t(T),e&&t(r),J(p),e&&t(N),e&&t(n),J(g),J(u),e&&t(A),e&&t(_)}}}const ce={local:"simulate.Light",title:"Lights"};function de(j){return se(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ge extends te{constructor(s){super();oe(this,s,de,le,ne,{})}}export{ge as default,ce as metadata};
