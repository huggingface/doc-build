import{S as G,i as U,s as W,e as c,k as C,w as A,t as P,M as F,c as m,d as t,m as B,a as g,x as S,h as q,b as p,G as i,g as R,y as I,L as H,q as M,o as T,B as j,v as J}from"../../chunks/vendor-hf-doc-builder.js";import{D as K}from"../../chunks/Docstring-hf-doc-builder.js";import{I as V}from"../../chunks/IconCopyLink-hf-doc-builder.js";function Q(O){let o,_,n,s,u,r,$,f,N,y,a,d,w,h,L,v;return r=new V({}),d=new K({props:{name:"class simulate.RigidBodyComponent",anchor:"simulate.RigidBodyComponent",parameters:[{name:"name",val:": typing.Optional[str] = None"},{name:"mass",val:": typing.Optional[float] = None"},{name:"center_of_mass",val:": typing.Optional[typing.List[float]] = None"},{name:"inertia_tensor",val:": typing.Optional[typing.List[float]] = None"},{name:"linear_drag",val:": typing.Optional[float] = None"},{name:"angular_drag",val:": typing.Optional[float] = None"},{name:"constraints",val:": typing.Optional[typing.List[str]] = None"},{name:"use_gravity",val:": typing.Optional[bool] = None"},{name:"collision_detection",val:": typing.Optional[str] = None"},{name:"kinematic",val:": typing.Optional[bool] = None"}],parametersDescription:[{anchor:"simulate.RigidBodyComponent.name",description:`<strong>name</strong> (<code>string</code>, <em>optional</em>, defaults to <code>None</code>) &#x2014;
The user-defined name of this material.`,name:"name"},{anchor:"simulate.RigidBodyComponent.mass",description:`<strong>mass</strong> (<code>float</code>, <em>optional</em>, defaults to <code>1.0</code>) &#x2014;
Mass of the rigidbody.`,name:"mass"},{anchor:"simulate.RigidBodyComponent.center_of_mass",description:`<strong>center_of_mass</strong> (<code>List[float]</code>, <em>optional</em>, defaults to <code>[0.0, 0.0, 0.0]</code>) &#x2014;
Center of mass of the rigidbody.`,name:"center_of_mass"},{anchor:"simulate.RigidBodyComponent.inertia_tensor",description:`<strong>inertia_tensor</strong> (<code>List[float]</code>, <em>optional</em>, defaults to <code>None</code>) &#x2014;
Inertia tensor of the rigidbody.`,name:"inertia_tensor"},{anchor:"simulate.RigidBodyComponent.linear_drag",description:`<strong>linear_drag</strong> (<code>float</code>, <em>optional</em>, defaults to <code>0.0</code>) &#x2014;
Linear drag of the rigidbody.`,name:"linear_drag"},{anchor:"simulate.RigidBodyComponent.angular_drag",description:`<strong>angular_drag</strong> (<code>float</code>, <em>optional</em>, defaults to <code>0.0</code>) &#x2014;
Angular drag of the rigidbody.`,name:"angular_drag"},{anchor:"simulate.RigidBodyComponent.constraints",description:`<strong>constraints</strong> (List[str], <em>optional</em>, defaults to <code>[]</code>) &#x2014;
List of constraints to apply to the rigidbody, selected in:
[    &#x201C;freeze_position_x&#x201D;,
&#x201C;freeze_position_y&#x201D;,
&#x201C;freeze_position_z&#x201D;,
&#x201C;freeze_rotation_x&#x201D;,
&#x201C;freeze_rotation_y&#x201D;,
&#x201C;freeze_rotation_z&#x201D;,
]`,name:"constraints"},{anchor:"simulate.RigidBodyComponent.use_gravity",description:`<strong>use_gravity</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether the rigidbody should ignore gravity.`,name:"use_gravity"},{anchor:"simulate.RigidBodyComponent.collision_detection",description:`<strong>collision_detection</strong> (<code>str</code>, <em>optional</em>, defaults to <code>&quot;discrete&quot;</code>) &#x2014;
Whether to use discrete or continuous collision detection, for slower but more precise collision detection
(recommended for small but fast-moving objects).`,name:"collision_detection"},{anchor:"simulate.RigidBodyComponent.kinematic",description:`<strong>kinematic</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Set to True to ignore force collisions and treat the rigidbody as a fix/static object.
Equivalent to isKinematic in Unity, custom_integrator in Godot and a mass = 0 in Bullet.`,name:"kinematic"}],source:"https://github.com/huggingface/simulate/blob/main/src/simulate/assets/rigid_body.py#L37"}}),{c(){o=c("meta"),_=C(),n=c("h1"),s=c("a"),u=c("span"),A(r.$$.fragment),$=C(),f=c("span"),N=P("Rigid Bodies"),y=C(),a=c("div"),A(d.$$.fragment),w=C(),h=c("p"),L=P("A rigid body characteristics that can be added to a primitive."),this.h()},l(e){const l=F('[data-svelte="svelte-1phssyn"]',document.head);o=m(l,"META",{name:!0,content:!0}),l.forEach(t),_=B(e),n=m(e,"H1",{class:!0});var x=g(n);s=m(x,"A",{id:!0,class:!0,href:!0});var D=g(s);u=m(D,"SPAN",{});var k=g(u);S(r.$$.fragment,k),k.forEach(t),D.forEach(t),$=B(x),f=m(x,"SPAN",{});var E=g(f);N=q(E,"Rigid Bodies"),E.forEach(t),x.forEach(t),y=B(e),a=m(e,"DIV",{class:!0});var b=g(a);S(d.$$.fragment,b),w=B(b),h=m(b,"P",{});var z=g(h);L=q(z,"A rigid body characteristics that can be added to a primitive."),z.forEach(t),b.forEach(t),this.h()},h(){p(o,"name","hf:doc:metadata"),p(o,"content",JSON.stringify(X)),p(s,"id","simulate.RigidBodyComponent"),p(s,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(s,"href","#simulate.RigidBodyComponent"),p(n,"class","relative group"),p(a,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(e,l){i(document.head,o),R(e,_,l),R(e,n,l),i(n,s),i(s,u),I(r,u,null),i(n,$),i(n,f),i(f,N),R(e,y,l),R(e,a,l),I(d,a,null),i(a,w),i(a,h),i(h,L),v=!0},p:H,i(e){v||(M(r.$$.fragment,e),M(d.$$.fragment,e),v=!0)},o(e){T(r.$$.fragment,e),T(d.$$.fragment,e),v=!1},d(e){t(o),e&&t(_),e&&t(n),j(r),e&&t(y),e&&t(a),j(d)}}}const X={local:"simulate.RigidBodyComponent",title:"Rigid Bodies"};function Y(O){return J(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class oe extends G{constructor(o){super();U(this,o,Y,Q,W,{})}}export{oe as default,X as metadata};
