import{S as vh,i as uh,s as mh,e as o,k as l,w as ih,t as d,N as Dh,c as a,d as t,m as c,a as r,x as nh,h as s,b as R,G as e,g as de,y as hh,L as gh,q as fh,o as ph,B as Eh,v as Th}from"../chunks/vendor-hf-doc-builder.js";import{I as _h}from"../chunks/IconCopyLink-hf-doc-builder.js";function yh(Oc){let Z,Xo,ee,oe,me,se,Pa,De,Ha,Zo,F,Ba,le,ge,Ra,Wa,_e,Fa,Sa,ea,te,ae,Te,ce,Aa,ye,xa,ta,re,be,m,Oe,Na,La,Ce,ja,Ia,ve,we,Ua,Ya,Ma,Ge,qa,Ja,oa,Ka,_,D,ze,Qa,Va,i,Xa,$e,Za,er,ke,tr,or,Pe,ar,rr,He,dr,sr,Be,lr,cr,Re,ir,nr,We,hr,fr,Fe,pr,Er,Se,_r,vr,Ae,ur,mr,xe,Dr,gr,Ne,Tr,yr,Le,br,Or,je,Cr,wr,Ie,Gr,zr,Ue,$r,kr,Ye,Pr,Hr,Br,Me,qe,Rr,Wr,Je,Ke,Fr,Sr,aa,Ar,g,Qe,xr,Nr,Ve,Lr,jr,Xe,Ze,Ir,Ur,et,tt,Yr,Mr,ra,qr,T,ot,Jr,Kr,at,Qr,Vr,rt,dt,Xr,Zr,da,ed,sa,td,y,st,od,ad,h,rd,lt,dd,sd,ct,ld,cd,it,id,nd,nt,hd,fd,ht,pd,Ed,ft,_d,vd,pt,ud,md,Et,Dd,gd,_t,Td,yd,vt,bd,Od,ut,Cd,wd,mt,Gd,zd,Dt,$d,kd,gt,Pd,Hd,Tt,Bd,Rd,yt,Wd,Fd,Sd,bt,Ot,Ad,xd,Ct,wt,Nd,Ld,la,jd,b,Gt,Id,Ud,ie,Yd,zt,Md,qd,Jd,$t,kt,Kd,Qd,Pt,Ht,Vd,Xd,ca,Zd,O,Bt,es,ts,Rt,os,as,Wt,Ft,rs,ds,ia,ss,na,ls,C,St,cs,is,n,ns,At,hs,fs,xt,ps,Es,Nt,_s,vs,Lt,us,ms,jt,Ds,gs,It,Ts,ys,Ut,bs,Os,Yt,Cs,ws,Mt,Gs,zs,qt,$s,ks,Jt,Ps,Hs,Kt,Bs,Rs,Qt,Ws,Fs,Vt,Ss,As,Xt,xs,Ns,Zt,Ls,js,eo,Is,Us,Ys,to,oo,Ms,qs,ao,ro,Js,Ks,ha,Qs,w,so,Vs,Xs,lo,Zs,el,co,io,tl,ol,no,ho,al,rl,fa,dl,G,fo,sl,ll,po,cl,il,Eo,_o,nl,hl,pa,fl,Ea,pl,z,vo,El,_l,uo,vl,ul,mo,Do,ml,Dl,ne,go,gl,Tl,To,yl,bl,_a,Ol,$,yo,Cl,wl,bo,Gl,zl,Oo,Co,$l,kl,he,wo,Pl,Hl,Go,Bl,Rl,va,Wl,k,zo,Fl,Sl,$o,Al,xl,ko,Po,Nl,Ll,fe,Ho,jl,Il,Bo,Ul,Yl,ua,Ml,P,Ro,ql,Jl,Wo,Kl,Ql,Fo,So,Vl,Xl,pe,Ao,Zl,ec,xo,tc,oc,ma,ac,H,No,rc,dc,Lo,sc,lc,jo,Io,cc,ic,Ee,Uo,nc,hc,Yo,fc,pc,Da,Ec,B,Mo,_c,vc,qo,uc,mc,Jo,Ko,Dc,gc,Qo,Vo,Tc,yc,ga,Ta;return se=new _h({}),ce=new _h({}),{c(){Z=o("meta"),Xo=l(),ee=o("h1"),oe=o("a"),me=o("span"),ih(se.$$.fragment),Pa=l(),De=o("span"),Ha=d("Hub API Endpoints"),Zo=l(),F=o("p"),Ba=d("We have open endpoints that you can use to retrieve information from the Hub as well as perform certain actions such as creating model, dataset or Space repos. We offer a wrapper Python library, "),le=o("a"),ge=o("code"),Ra=d("huggingface_hub"),Wa=d(", that allows easy access to these endpoints. We also provide a "),_e=o("a"),Fa=d("webhook"),Sa=d(" to receive real-time incremental info about repos. Enjoy!"),ea=l(),te=o("h2"),ae=o("a"),Te=o("span"),ih(ce.$$.fragment),Aa=l(),ye=o("span"),xa=d("Endpoints table"),ta=l(),re=o("table"),be=o("thead"),m=o("tr"),Oe=o("th"),Na=d("Endpoint"),La=l(),Ce=o("th"),ja=d("Description"),Ia=l(),ve=o("th"),we=o("code"),Ua=d("huggingface_hub"),Ya=d(" root methods"),Ma=l(),Ge=o("th"),qa=d("Payload"),Ja=l(),oa=o("th"),Ka=l(),_=o("tbody"),D=o("tr"),ze=o("td"),Qa=d("/api/models     GET"),Va=l(),i=o("td"),Xa=d("Get information from all models in the Hub. You can specify additional parameters to have more specific results.   - "),$e=o("code"),Za=d("search"),er=d(": Filter based on substrings for repos and their usernames, such as "),ke=o("code"),tr=d("resnet"),or=d(" or "),Pe=o("code"),ar=d("microsoft"),rr=d(" - "),He=o("code"),dr=d("author"),sr=d(": Filter models by an author or organization, such as "),Be=o("code"),lr=d("huggingface"),cr=d(" or "),Re=o("code"),ir=d("microsoft"),nr=d(" - "),We=o("code"),hr=d("filter"),fr=d(": Filter based on tags, such as "),Fe=o("code"),pr=d("text-classification"),Er=d(" or "),Se=o("code"),_r=d("spacy"),vr=d(". - "),Ae=o("code"),ur=d("sort"),mr=d(": Property to use when sorting, such as "),xe=o("code"),Dr=d("downloads"),gr=d(" or "),Ne=o("code"),Tr=d("author"),yr=d(".  - "),Le=o("code"),br=d("direction"),Or=d(": Direction in which to sort, such as "),je=o("code"),Cr=d("-1"),wr=d(" for descending, and anything else for ascending. - "),Ie=o("code"),Gr=d("limit"),zr=d(": Limit the number of models fetched.  - "),Ue=o("code"),$r=d("full"),kr=d(": Whether to fetch most model data, such as all tags, the files, etc.  - "),Ye=o("code"),Pr=d("config"),Hr=d(": Whether to also fetch the repo config."),Br=l(),Me=o("td"),qe=o("code"),Rr=d("list_models()"),Wr=l(),Je=o("td"),Ke=o("code"),Fr=d('params= { "search":"search", "author":"author", "filter":"filter", "sort":"sort", "direction":"direction", "limit":"limit", "full":"full", "config":"config"}'),Sr=l(),aa=o("td"),Ar=l(),g=o("tr"),Qe=o("td"),xr=d("/api/models/{repo_id}   /api/models/{repo_id}/revision/{revision}    GET"),Nr=l(),Ve=o("td"),Lr=d("Get all information for a specific model."),jr=l(),Xe=o("td"),Ze=o("code"),Ir=d("model_info(repo_id, revision)"),Ur=l(),et=o("td"),tt=o("code"),Yr=d('headers = { "authorization" : "Bearer $token" }'),Mr=l(),ra=o("td"),qr=l(),T=o("tr"),ot=o("td"),Jr=d("/api/models-tags-by-type   GET"),Kr=l(),at=o("td"),Qr=d("Gets all the available model tags hosted in the Hub"),Vr=l(),rt=o("td"),dt=o("code"),Xr=d("get_model_tags()"),Zr=l(),da=o("td"),ed=l(),sa=o("td"),td=l(),y=o("tr"),st=o("td"),od=d("/api/datasets     GET"),ad=l(),h=o("td"),rd=d("Get information from all datasets in the Hub.  You can specify additional parameters to have more specific results. - "),lt=o("code"),dd=d("search"),sd=d(": Filter based on substrings for repos and their usernames, such as "),ct=o("code"),ld=d("pets"),cd=d(" or "),it=o("code"),id=d("microsoft"),nd=d("   - "),nt=o("code"),hd=d("author"),fd=d(": Filter datasets by an other or organization, such as "),ht=o("code"),pd=d("huggingface"),Ed=d(" or "),ft=o("code"),_d=d("microsoft"),vd=d(" - "),pt=o("code"),ud=d("filter"),md=d(": Filter based on tags, such as "),Et=o("code"),Dd=d("task_categories:text-classification"),gd=d(" or "),_t=o("code"),Td=d("languages:en"),yd=d(". - "),vt=o("code"),bd=d("sort"),Od=d(": Property to use when sorting, such as "),ut=o("code"),Cd=d("downloads"),wd=d(" or "),mt=o("code"),Gd=d("author"),zd=d(". - "),Dt=o("code"),$d=d("direction"),kd=d(": Direction in which to sort, such as "),gt=o("code"),Pd=d("-1"),Hd=d(" for descending, and anything else for ascending. - "),Tt=o("code"),Bd=d("limit"),Rd=d(": Limit the number of datasets fetched.  - "),yt=o("code"),Wd=d("full"),Fd=d(": Whether to fetch most dataset data, such as all tags, the files, etc."),Sd=l(),bt=o("td"),Ot=o("code"),Ad=d("list_datasets()"),xd=l(),Ct=o("td"),wt=o("code"),Nd=d('params= { "search":"search", "author":"author", "filter":"filter", "sort":"sort", "direction":"direction", "limit":"limit", "full":"full", "config":"config"}'),Ld=l(),la=o("td"),jd=l(),b=o("tr"),Gt=o("td"),Id=d("/api/datasets/{repo_id}   /api/datasets/{repo_id}/revision/{revision}    GET"),Ud=l(),ie=o("td"),Yd=d("Get all information for a specific dataset.   - "),zt=o("code"),Md=d("full"),qd=d(": Whether to fetch most dataset data, such as all tags, the files, etc."),Jd=l(),$t=o("td"),kt=o("code"),Kd=d("dataset_info(repo_id, revision)"),Qd=l(),Pt=o("td"),Ht=o("code"),Vd=d('headers = { "authorization" : "Bearer $token", "full" : "full" }'),Xd=l(),ca=o("td"),Zd=l(),O=o("tr"),Bt=o("td"),es=d("/api/datasets-tags-by-type   GET"),ts=l(),Rt=o("td"),os=d("Gets all the available dataset tags hosted in the Hub"),as=l(),Wt=o("td"),Ft=o("code"),rs=d("get_dataset_tags()"),ds=l(),ia=o("td"),ss=l(),na=o("td"),ls=l(),C=o("tr"),St=o("td"),cs=d("/api/spaces     GET"),is=l(),n=o("td"),ns=d("Get information from all Spaces in the Hub. You can specify additional parameters to have more specific results.   - "),At=o("code"),hs=d("search"),fs=d(": Filter based on substrings for repos and their usernames, such as "),xt=o("code"),ps=d("resnet"),Es=d(" or "),Nt=o("code"),_s=d("microsoft"),vs=d(" - "),Lt=o("code"),us=d("author"),ms=d(": Filter models by an author or organization, such as "),jt=o("code"),Ds=d("huggingface"),gs=d(" or "),It=o("code"),Ts=d("microsoft"),ys=d(" - "),Ut=o("code"),bs=d("filter"),Os=d(": Filter based on tags, such as "),Yt=o("code"),Cs=d("text-classification"),ws=d(" or "),Mt=o("code"),Gs=d("spacy"),zs=d(". - "),qt=o("code"),$s=d("sort"),ks=d(": Property to use when sorting, such as "),Jt=o("code"),Ps=d("downloads"),Hs=d(" or "),Kt=o("code"),Bs=d("author"),Rs=d(".  - "),Qt=o("code"),Ws=d("direction"),Fs=d(": Direction in which to sort, such as "),Vt=o("code"),Ss=d("-1"),As=d(" for descending, and anything else for ascending. - "),Xt=o("code"),xs=d("limit"),Ns=d(": Limit the number of models fetched.  - "),Zt=o("code"),Ls=d("full"),js=d(": Whether to fetch most model data, such as all tags, the files, etc.  - "),eo=o("code"),Is=d("config"),Us=d(": Whether to also fetch the repo config."),Ys=l(),to=o("td"),oo=o("code"),Ms=d("list_models()"),qs=l(),ao=o("td"),ro=o("code"),Js=d('params= { "search":"search", "author":"author", "filter":"filter", "sort":"sort", "direction":"direction", "limit":"limit", "full":"full", "config":"config"}'),Ks=l(),ha=o("td"),Qs=l(),w=o("tr"),so=o("td"),Vs=d("/api/spaces/{repo_id}   /api/spaces/{repo_id}/revision/{revision}    GET"),Xs=l(),lo=o("td"),Zs=d("Get all information for a specific model."),el=l(),co=o("td"),io=o("code"),tl=d("model_info(repo_id, revision)"),ol=l(),no=o("td"),ho=o("code"),al=d('headers = { "authorization" : "Bearer $token" }'),rl=l(),fa=o("td"),dl=l(),G=o("tr"),fo=o("td"),sl=d("/api/metrics     GET"),ll=l(),po=o("td"),cl=d("Get information from all metrics in the Hub."),il=l(),Eo=o("td"),_o=o("code"),nl=d("list_metrics()"),hl=l(),pa=o("td"),fl=l(),Ea=o("td"),pl=l(),z=o("tr"),vo=o("td"),El=d("/api/repos/create     POST"),_l=l(),uo=o("td"),vl=d("Create a repository. It\u2019s a model repo by default.   -         type: Type of repo (datasets or spaces; model by default).   - name: Name of repo.   - organization: Name of organization. -   - private: Whether the repo is private."),ul=l(),mo=o("td"),Do=o("code"),ml=d("create_repo()"),Dl=l(),ne=o("td"),go=o("code"),gl=d('headers = { authorization : "Bearer $token" }'),Tl=l(),To=o("code"),yl=d('json= {"type":"type", "repo_id":"repo_id", "private":"private"}'),bl=l(),_a=o("td"),Ol=l(),$=o("tr"),yo=o("td"),Cl=d("/api/repos/delete    DELETE"),wl=l(),bo=o("td"),Gl=d("Delete a repository. It\u2019s a model repo by default.   -         type: Type of repo (datasets or spaces; model by default).   - name: Name of repo.   - organization: Name of organization."),zl=l(),Oo=o("td"),Co=o("code"),$l=d("delete_repo()"),kl=l(),he=o("td"),wo=o("code"),Pl=d('headers = { "authorization" : "Bearer $token" }'),Hl=l(),Go=o("code"),Bl=d('json= {"type":"type", "repo_id":"repo_id"}'),Rl=l(),va=o("td"),Wl=l(),k=o("tr"),zo=o("td"),Fl=d("/api/repos/{type}/{repo_id}/settings   PUT"),Sl=l(),$o=o("td"),Al=d("Update repo visibility."),xl=l(),ko=o("td"),Po=o("code"),Nl=d("update_repo_visibility()"),Ll=l(),fe=o("td"),Ho=o("code"),jl=d('headers = { "authorization" : "Bearer $token" }'),Il=l(),Bo=o("code"),Ul=d('json= {"private":"private"}'),Yl=l(),ua=o("td"),Ml=l(),P=o("tr"),Ro=o("td"),ql=d("/api/repos/move POST"),Jl=l(),Wo=o("td"),Kl=d("Move a repository (rename within same namespace or transfer from user to organization)."),Ql=l(),Fo=o("td"),So=o("code"),Vl=d("move_repo()"),Xl=l(),pe=o("td"),Ao=o("code"),Zl=d('headers = { "authorization" : "Bearer $token" }'),ec=l(),xo=o("code"),tc=d('json= {"fromRepo" : "namespace/repo_name", "toRepo" : "namespace2/repo_name2"}'),oc=l(),ma=o("td"),ac=l(),H=o("tr"),No=o("td"),rc=d("/api/{type}/{repo_id}/upload/{revision}/{path_in_repo}    POST"),dc=l(),Lo=o("td"),sc=d("Upload a file to a specific repository."),lc=l(),jo=o("td"),Io=o("code"),cc=d("upload_file()"),ic=l(),Ee=o("td"),Uo=o("code"),nc=d('headers = { "authorization" : "Bearer $token" }'),hc=l(),Yo=o("code"),fc=d('"data"="bytestream"'),pc=l(),Da=o("td"),Ec=l(),B=o("tr"),Mo=o("td"),_c=d("/api/whoami-v2    GET"),vc=l(),qo=o("td"),uc=d("Get username and organizations the user belongs to."),mc=l(),Jo=o("td"),Ko=o("code"),Dc=d("whoami(token)"),gc=l(),Qo=o("td"),Vo=o("code"),Tc=d('headers = { "authorization" : "Bearer $token" }'),yc=l(),ga=o("td"),this.h()},l(v){const W=Dh('[data-svelte="svelte-1phssyn"]',document.head);Z=a(W,"META",{name:!0,content:!0}),W.forEach(t),Xo=c(v),ee=a(v,"H1",{class:!0});var ya=r(ee);oe=a(ya,"A",{id:!0,class:!0,href:!0});var Cc=r(oe);me=a(Cc,"SPAN",{});var wc=r(me);nh(se.$$.fragment,wc),wc.forEach(t),Cc.forEach(t),Pa=c(ya),De=a(ya,"SPAN",{});var Gc=r(De);Ha=s(Gc,"Hub API Endpoints"),Gc.forEach(t),ya.forEach(t),Zo=c(v),F=a(v,"P",{});var ue=r(F);Ba=s(ue,"We have open endpoints that you can use to retrieve information from the Hub as well as perform certain actions such as creating model, dataset or Space repos. We offer a wrapper Python library, "),le=a(ue,"A",{href:!0,rel:!0});var zc=r(le);ge=a(zc,"CODE",{});var $c=r(ge);Ra=s($c,"huggingface_hub"),$c.forEach(t),zc.forEach(t),Wa=s(ue,", that allows easy access to these endpoints. We also provide a "),_e=a(ue,"A",{href:!0});var kc=r(_e);Fa=s(kc,"webhook"),kc.forEach(t),Sa=s(ue," to receive real-time incremental info about repos. Enjoy!"),ue.forEach(t),ea=c(v),te=a(v,"H2",{class:!0});var ba=r(te);ae=a(ba,"A",{id:!0,class:!0,href:!0});var Pc=r(ae);Te=a(Pc,"SPAN",{});var Hc=r(Te);nh(ce.$$.fragment,Hc),Hc.forEach(t),Pc.forEach(t),Aa=c(ba),ye=a(ba,"SPAN",{});var Bc=r(ye);xa=s(Bc,"Endpoints table"),Bc.forEach(t),ba.forEach(t),ta=c(v),re=a(v,"TABLE",{});var Oa=r(re);be=a(Oa,"THEAD",{});var Rc=r(be);m=a(Rc,"TR",{});var S=r(m);Oe=a(S,"TH",{});var Wc=r(Oe);Na=s(Wc,"Endpoint"),Wc.forEach(t),La=c(S),Ce=a(S,"TH",{});var Fc=r(Ce);ja=s(Fc,"Description"),Fc.forEach(t),Ia=c(S),ve=a(S,"TH",{});var bc=r(ve);we=a(bc,"CODE",{});var Sc=r(we);Ua=s(Sc,"huggingface_hub"),Sc.forEach(t),Ya=s(bc," root methods"),bc.forEach(t),Ma=c(S),Ge=a(S,"TH",{});var Ac=r(Ge);qa=s(Ac,"Payload"),Ac.forEach(t),Ja=c(S),oa=a(S,"TH",{}),r(oa).forEach(t),S.forEach(t),Rc.forEach(t),Ka=c(Oa),_=a(Oa,"TBODY",{});var u=r(_);D=a(u,"TR",{});var A=r(D);ze=a(A,"TD",{});var xc=r(ze);Qa=s(xc,"/api/models     GET"),xc.forEach(t),Va=c(A),i=a(A,"TD",{});var f=r(i);Xa=s(f,"Get information from all models in the Hub. You can specify additional parameters to have more specific results.   - "),$e=a(f,"CODE",{});var Nc=r($e);Za=s(Nc,"search"),Nc.forEach(t),er=s(f,": Filter based on substrings for repos and their usernames, such as "),ke=a(f,"CODE",{});var Lc=r(ke);tr=s(Lc,"resnet"),Lc.forEach(t),or=s(f," or "),Pe=a(f,"CODE",{});var jc=r(Pe);ar=s(jc,"microsoft"),jc.forEach(t),rr=s(f," - "),He=a(f,"CODE",{});var Ic=r(He);dr=s(Ic,"author"),Ic.forEach(t),sr=s(f,": Filter models by an author or organization, such as "),Be=a(f,"CODE",{});var Uc=r(Be);lr=s(Uc,"huggingface"),Uc.forEach(t),cr=s(f," or "),Re=a(f,"CODE",{});var Yc=r(Re);ir=s(Yc,"microsoft"),Yc.forEach(t),nr=s(f," - "),We=a(f,"CODE",{});var Mc=r(We);hr=s(Mc,"filter"),Mc.forEach(t),fr=s(f,": Filter based on tags, such as "),Fe=a(f,"CODE",{});var qc=r(Fe);pr=s(qc,"text-classification"),qc.forEach(t),Er=s(f," or "),Se=a(f,"CODE",{});var Jc=r(Se);_r=s(Jc,"spacy"),Jc.forEach(t),vr=s(f,". - "),Ae=a(f,"CODE",{});var Kc=r(Ae);ur=s(Kc,"sort"),Kc.forEach(t),mr=s(f,": Property to use when sorting, such as "),xe=a(f,"CODE",{});var Qc=r(xe);Dr=s(Qc,"downloads"),Qc.forEach(t),gr=s(f," or "),Ne=a(f,"CODE",{});var Vc=r(Ne);Tr=s(Vc,"author"),Vc.forEach(t),yr=s(f,".  - "),Le=a(f,"CODE",{});var Xc=r(Le);br=s(Xc,"direction"),Xc.forEach(t),Or=s(f,": Direction in which to sort, such as "),je=a(f,"CODE",{});var Zc=r(je);Cr=s(Zc,"-1"),Zc.forEach(t),wr=s(f," for descending, and anything else for ascending. - "),Ie=a(f,"CODE",{});var ei=r(Ie);Gr=s(ei,"limit"),ei.forEach(t),zr=s(f,": Limit the number of models fetched.  - "),Ue=a(f,"CODE",{});var ti=r(Ue);$r=s(ti,"full"),ti.forEach(t),kr=s(f,": Whether to fetch most model data, such as all tags, the files, etc.  - "),Ye=a(f,"CODE",{});var oi=r(Ye);Pr=s(oi,"config"),oi.forEach(t),Hr=s(f,": Whether to also fetch the repo config."),f.forEach(t),Br=c(A),Me=a(A,"TD",{});var ai=r(Me);qe=a(ai,"CODE",{});var ri=r(qe);Rr=s(ri,"list_models()"),ri.forEach(t),ai.forEach(t),Wr=c(A),Je=a(A,"TD",{});var di=r(Je);Ke=a(di,"CODE",{});var si=r(Ke);Fr=s(si,'params= { "search":"search", "author":"author", "filter":"filter", "sort":"sort", "direction":"direction", "limit":"limit", "full":"full", "config":"config"}'),si.forEach(t),di.forEach(t),Sr=c(A),aa=a(A,"TD",{}),r(aa).forEach(t),A.forEach(t),Ar=c(u),g=a(u,"TR",{});var x=r(g);Qe=a(x,"TD",{});var li=r(Qe);xr=s(li,"/api/models/{repo_id}   /api/models/{repo_id}/revision/{revision}    GET"),li.forEach(t),Nr=c(x),Ve=a(x,"TD",{});var ci=r(Ve);Lr=s(ci,"Get all information for a specific model."),ci.forEach(t),jr=c(x),Xe=a(x,"TD",{});var ii=r(Xe);Ze=a(ii,"CODE",{});var ni=r(Ze);Ir=s(ni,"model_info(repo_id, revision)"),ni.forEach(t),ii.forEach(t),Ur=c(x),et=a(x,"TD",{});var hi=r(et);tt=a(hi,"CODE",{});var fi=r(tt);Yr=s(fi,'headers = { "authorization" : "Bearer $token" }'),fi.forEach(t),hi.forEach(t),Mr=c(x),ra=a(x,"TD",{}),r(ra).forEach(t),x.forEach(t),qr=c(u),T=a(u,"TR",{});var N=r(T);ot=a(N,"TD",{});var pi=r(ot);Jr=s(pi,"/api/models-tags-by-type   GET"),pi.forEach(t),Kr=c(N),at=a(N,"TD",{});var Ei=r(at);Qr=s(Ei,"Gets all the available model tags hosted in the Hub"),Ei.forEach(t),Vr=c(N),rt=a(N,"TD",{});var _i=r(rt);dt=a(_i,"CODE",{});var vi=r(dt);Xr=s(vi,"get_model_tags()"),vi.forEach(t),_i.forEach(t),Zr=c(N),da=a(N,"TD",{}),r(da).forEach(t),ed=c(N),sa=a(N,"TD",{}),r(sa).forEach(t),N.forEach(t),td=c(u),y=a(u,"TR",{});var L=r(y);st=a(L,"TD",{});var ui=r(st);od=s(ui,"/api/datasets     GET"),ui.forEach(t),ad=c(L),h=a(L,"TD",{});var E=r(h);rd=s(E,"Get information from all datasets in the Hub.  You can specify additional parameters to have more specific results. - "),lt=a(E,"CODE",{});var mi=r(lt);dd=s(mi,"search"),mi.forEach(t),sd=s(E,": Filter based on substrings for repos and their usernames, such as "),ct=a(E,"CODE",{});var Di=r(ct);ld=s(Di,"pets"),Di.forEach(t),cd=s(E," or "),it=a(E,"CODE",{});var gi=r(it);id=s(gi,"microsoft"),gi.forEach(t),nd=s(E,"   - "),nt=a(E,"CODE",{});var Ti=r(nt);hd=s(Ti,"author"),Ti.forEach(t),fd=s(E,": Filter datasets by an other or organization, such as "),ht=a(E,"CODE",{});var yi=r(ht);pd=s(yi,"huggingface"),yi.forEach(t),Ed=s(E," or "),ft=a(E,"CODE",{});var bi=r(ft);_d=s(bi,"microsoft"),bi.forEach(t),vd=s(E," - "),pt=a(E,"CODE",{});var Oi=r(pt);ud=s(Oi,"filter"),Oi.forEach(t),md=s(E,": Filter based on tags, such as "),Et=a(E,"CODE",{});var Ci=r(Et);Dd=s(Ci,"task_categories:text-classification"),Ci.forEach(t),gd=s(E," or "),_t=a(E,"CODE",{});var wi=r(_t);Td=s(wi,"languages:en"),wi.forEach(t),yd=s(E,". - "),vt=a(E,"CODE",{});var Gi=r(vt);bd=s(Gi,"sort"),Gi.forEach(t),Od=s(E,": Property to use when sorting, such as "),ut=a(E,"CODE",{});var zi=r(ut);Cd=s(zi,"downloads"),zi.forEach(t),wd=s(E," or "),mt=a(E,"CODE",{});var $i=r(mt);Gd=s($i,"author"),$i.forEach(t),zd=s(E,". - "),Dt=a(E,"CODE",{});var ki=r(Dt);$d=s(ki,"direction"),ki.forEach(t),kd=s(E,": Direction in which to sort, such as "),gt=a(E,"CODE",{});var Pi=r(gt);Pd=s(Pi,"-1"),Pi.forEach(t),Hd=s(E," for descending, and anything else for ascending. - "),Tt=a(E,"CODE",{});var Hi=r(Tt);Bd=s(Hi,"limit"),Hi.forEach(t),Rd=s(E,": Limit the number of datasets fetched.  - "),yt=a(E,"CODE",{});var Bi=r(yt);Wd=s(Bi,"full"),Bi.forEach(t),Fd=s(E,": Whether to fetch most dataset data, such as all tags, the files, etc."),E.forEach(t),Sd=c(L),bt=a(L,"TD",{});var Ri=r(bt);Ot=a(Ri,"CODE",{});var Wi=r(Ot);Ad=s(Wi,"list_datasets()"),Wi.forEach(t),Ri.forEach(t),xd=c(L),Ct=a(L,"TD",{});var Fi=r(Ct);wt=a(Fi,"CODE",{});var Si=r(wt);Nd=s(Si,'params= { "search":"search", "author":"author", "filter":"filter", "sort":"sort", "direction":"direction", "limit":"limit", "full":"full", "config":"config"}'),Si.forEach(t),Fi.forEach(t),Ld=c(L),la=a(L,"TD",{}),r(la).forEach(t),L.forEach(t),jd=c(u),b=a(u,"TR",{});var j=r(b);Gt=a(j,"TD",{});var Ai=r(Gt);Id=s(Ai,"/api/datasets/{repo_id}   /api/datasets/{repo_id}/revision/{revision}    GET"),Ai.forEach(t),Ud=c(j),ie=a(j,"TD",{});var Ca=r(ie);Yd=s(Ca,"Get all information for a specific dataset.   - "),zt=a(Ca,"CODE",{});var xi=r(zt);Md=s(xi,"full"),xi.forEach(t),qd=s(Ca,": Whether to fetch most dataset data, such as all tags, the files, etc."),Ca.forEach(t),Jd=c(j),$t=a(j,"TD",{});var Ni=r($t);kt=a(Ni,"CODE",{});var Li=r(kt);Kd=s(Li,"dataset_info(repo_id, revision)"),Li.forEach(t),Ni.forEach(t),Qd=c(j),Pt=a(j,"TD",{});var ji=r(Pt);Ht=a(ji,"CODE",{});var Ii=r(Ht);Vd=s(Ii,'headers = { "authorization" : "Bearer $token", "full" : "full" }'),Ii.forEach(t),ji.forEach(t),Xd=c(j),ca=a(j,"TD",{}),r(ca).forEach(t),j.forEach(t),Zd=c(u),O=a(u,"TR",{});var I=r(O);Bt=a(I,"TD",{});var Ui=r(Bt);es=s(Ui,"/api/datasets-tags-by-type   GET"),Ui.forEach(t),ts=c(I),Rt=a(I,"TD",{});var Yi=r(Rt);os=s(Yi,"Gets all the available dataset tags hosted in the Hub"),Yi.forEach(t),as=c(I),Wt=a(I,"TD",{});var Mi=r(Wt);Ft=a(Mi,"CODE",{});var qi=r(Ft);rs=s(qi,"get_dataset_tags()"),qi.forEach(t),Mi.forEach(t),ds=c(I),ia=a(I,"TD",{}),r(ia).forEach(t),ss=c(I),na=a(I,"TD",{}),r(na).forEach(t),I.forEach(t),ls=c(u),C=a(u,"TR",{});var U=r(C);St=a(U,"TD",{});var Ji=r(St);cs=s(Ji,"/api/spaces     GET"),Ji.forEach(t),is=c(U),n=a(U,"TD",{});var p=r(n);ns=s(p,"Get information from all Spaces in the Hub. You can specify additional parameters to have more specific results.   - "),At=a(p,"CODE",{});var Ki=r(At);hs=s(Ki,"search"),Ki.forEach(t),fs=s(p,": Filter based on substrings for repos and their usernames, such as "),xt=a(p,"CODE",{});var Qi=r(xt);ps=s(Qi,"resnet"),Qi.forEach(t),Es=s(p," or "),Nt=a(p,"CODE",{});var Vi=r(Nt);_s=s(Vi,"microsoft"),Vi.forEach(t),vs=s(p," - "),Lt=a(p,"CODE",{});var Xi=r(Lt);us=s(Xi,"author"),Xi.forEach(t),ms=s(p,": Filter models by an author or organization, such as "),jt=a(p,"CODE",{});var Zi=r(jt);Ds=s(Zi,"huggingface"),Zi.forEach(t),gs=s(p," or "),It=a(p,"CODE",{});var en=r(It);Ts=s(en,"microsoft"),en.forEach(t),ys=s(p," - "),Ut=a(p,"CODE",{});var tn=r(Ut);bs=s(tn,"filter"),tn.forEach(t),Os=s(p,": Filter based on tags, such as "),Yt=a(p,"CODE",{});var on=r(Yt);Cs=s(on,"text-classification"),on.forEach(t),ws=s(p," or "),Mt=a(p,"CODE",{});var an=r(Mt);Gs=s(an,"spacy"),an.forEach(t),zs=s(p,". - "),qt=a(p,"CODE",{});var rn=r(qt);$s=s(rn,"sort"),rn.forEach(t),ks=s(p,": Property to use when sorting, such as "),Jt=a(p,"CODE",{});var dn=r(Jt);Ps=s(dn,"downloads"),dn.forEach(t),Hs=s(p," or "),Kt=a(p,"CODE",{});var sn=r(Kt);Bs=s(sn,"author"),sn.forEach(t),Rs=s(p,".  - "),Qt=a(p,"CODE",{});var ln=r(Qt);Ws=s(ln,"direction"),ln.forEach(t),Fs=s(p,": Direction in which to sort, such as "),Vt=a(p,"CODE",{});var cn=r(Vt);Ss=s(cn,"-1"),cn.forEach(t),As=s(p," for descending, and anything else for ascending. - "),Xt=a(p,"CODE",{});var nn=r(Xt);xs=s(nn,"limit"),nn.forEach(t),Ns=s(p,": Limit the number of models fetched.  - "),Zt=a(p,"CODE",{});var hn=r(Zt);Ls=s(hn,"full"),hn.forEach(t),js=s(p,": Whether to fetch most model data, such as all tags, the files, etc.  - "),eo=a(p,"CODE",{});var fn=r(eo);Is=s(fn,"config"),fn.forEach(t),Us=s(p,": Whether to also fetch the repo config."),p.forEach(t),Ys=c(U),to=a(U,"TD",{});var pn=r(to);oo=a(pn,"CODE",{});var En=r(oo);Ms=s(En,"list_models()"),En.forEach(t),pn.forEach(t),qs=c(U),ao=a(U,"TD",{});var _n=r(ao);ro=a(_n,"CODE",{});var vn=r(ro);Js=s(vn,'params= { "search":"search", "author":"author", "filter":"filter", "sort":"sort", "direction":"direction", "limit":"limit", "full":"full", "config":"config"}'),vn.forEach(t),_n.forEach(t),Ks=c(U),ha=a(U,"TD",{}),r(ha).forEach(t),U.forEach(t),Qs=c(u),w=a(u,"TR",{});var Y=r(w);so=a(Y,"TD",{});var un=r(so);Vs=s(un,"/api/spaces/{repo_id}   /api/spaces/{repo_id}/revision/{revision}    GET"),un.forEach(t),Xs=c(Y),lo=a(Y,"TD",{});var mn=r(lo);Zs=s(mn,"Get all information for a specific model."),mn.forEach(t),el=c(Y),co=a(Y,"TD",{});var Dn=r(co);io=a(Dn,"CODE",{});var gn=r(io);tl=s(gn,"model_info(repo_id, revision)"),gn.forEach(t),Dn.forEach(t),ol=c(Y),no=a(Y,"TD",{});var Tn=r(no);ho=a(Tn,"CODE",{});var yn=r(ho);al=s(yn,'headers = { "authorization" : "Bearer $token" }'),yn.forEach(t),Tn.forEach(t),rl=c(Y),fa=a(Y,"TD",{}),r(fa).forEach(t),Y.forEach(t),dl=c(u),G=a(u,"TR",{});var M=r(G);fo=a(M,"TD",{});var bn=r(fo);sl=s(bn,"/api/metrics     GET"),bn.forEach(t),ll=c(M),po=a(M,"TD",{});var On=r(po);cl=s(On,"Get information from all metrics in the Hub."),On.forEach(t),il=c(M),Eo=a(M,"TD",{});var Cn=r(Eo);_o=a(Cn,"CODE",{});var wn=r(_o);nl=s(wn,"list_metrics()"),wn.forEach(t),Cn.forEach(t),hl=c(M),pa=a(M,"TD",{}),r(pa).forEach(t),fl=c(M),Ea=a(M,"TD",{}),r(Ea).forEach(t),M.forEach(t),pl=c(u),z=a(u,"TR",{});var q=r(z);vo=a(q,"TD",{});var Gn=r(vo);El=s(Gn,"/api/repos/create     POST"),Gn.forEach(t),_l=c(q),uo=a(q,"TD",{});var zn=r(uo);vl=s(zn,"Create a repository. It\u2019s a model repo by default.   -         type: Type of repo (datasets or spaces; model by default).   - name: Name of repo.   - organization: Name of organization. -   - private: Whether the repo is private."),zn.forEach(t),ul=c(q),mo=a(q,"TD",{});var $n=r(mo);Do=a($n,"CODE",{});var kn=r(Do);ml=s(kn,"create_repo()"),kn.forEach(t),$n.forEach(t),Dl=c(q),ne=a(q,"TD",{});var wa=r(ne);go=a(wa,"CODE",{});var Pn=r(go);gl=s(Pn,'headers = { authorization : "Bearer $token" }'),Pn.forEach(t),Tl=c(wa),To=a(wa,"CODE",{});var Hn=r(To);yl=s(Hn,'json= {"type":"type", "repo_id":"repo_id", "private":"private"}'),Hn.forEach(t),wa.forEach(t),bl=c(q),_a=a(q,"TD",{}),r(_a).forEach(t),q.forEach(t),Ol=c(u),$=a(u,"TR",{});var J=r($);yo=a(J,"TD",{});var Bn=r(yo);Cl=s(Bn,"/api/repos/delete    DELETE"),Bn.forEach(t),wl=c(J),bo=a(J,"TD",{});var Rn=r(bo);Gl=s(Rn,"Delete a repository. It\u2019s a model repo by default.   -         type: Type of repo (datasets or spaces; model by default).   - name: Name of repo.   - organization: Name of organization."),Rn.forEach(t),zl=c(J),Oo=a(J,"TD",{});var Wn=r(Oo);Co=a(Wn,"CODE",{});var Fn=r(Co);$l=s(Fn,"delete_repo()"),Fn.forEach(t),Wn.forEach(t),kl=c(J),he=a(J,"TD",{});var Ga=r(he);wo=a(Ga,"CODE",{});var Sn=r(wo);Pl=s(Sn,'headers = { "authorization" : "Bearer $token" }'),Sn.forEach(t),Hl=c(Ga),Go=a(Ga,"CODE",{});var An=r(Go);Bl=s(An,'json= {"type":"type", "repo_id":"repo_id"}'),An.forEach(t),Ga.forEach(t),Rl=c(J),va=a(J,"TD",{}),r(va).forEach(t),J.forEach(t),Wl=c(u),k=a(u,"TR",{});var K=r(k);zo=a(K,"TD",{});var xn=r(zo);Fl=s(xn,"/api/repos/{type}/{repo_id}/settings   PUT"),xn.forEach(t),Sl=c(K),$o=a(K,"TD",{});var Nn=r($o);Al=s(Nn,"Update repo visibility."),Nn.forEach(t),xl=c(K),ko=a(K,"TD",{});var Ln=r(ko);Po=a(Ln,"CODE",{});var jn=r(Po);Nl=s(jn,"update_repo_visibility()"),jn.forEach(t),Ln.forEach(t),Ll=c(K),fe=a(K,"TD",{});var za=r(fe);Ho=a(za,"CODE",{});var In=r(Ho);jl=s(In,'headers = { "authorization" : "Bearer $token" }'),In.forEach(t),Il=c(za),Bo=a(za,"CODE",{});var Un=r(Bo);Ul=s(Un,'json= {"private":"private"}'),Un.forEach(t),za.forEach(t),Yl=c(K),ua=a(K,"TD",{}),r(ua).forEach(t),K.forEach(t),Ml=c(u),P=a(u,"TR",{});var Q=r(P);Ro=a(Q,"TD",{});var Yn=r(Ro);ql=s(Yn,"/api/repos/move POST"),Yn.forEach(t),Jl=c(Q),Wo=a(Q,"TD",{});var Mn=r(Wo);Kl=s(Mn,"Move a repository (rename within same namespace or transfer from user to organization)."),Mn.forEach(t),Ql=c(Q),Fo=a(Q,"TD",{});var qn=r(Fo);So=a(qn,"CODE",{});var Jn=r(So);Vl=s(Jn,"move_repo()"),Jn.forEach(t),qn.forEach(t),Xl=c(Q),pe=a(Q,"TD",{});var $a=r(pe);Ao=a($a,"CODE",{});var Kn=r(Ao);Zl=s(Kn,'headers = { "authorization" : "Bearer $token" }'),Kn.forEach(t),ec=c($a),xo=a($a,"CODE",{});var Qn=r(xo);tc=s(Qn,'json= {"fromRepo" : "namespace/repo_name", "toRepo" : "namespace2/repo_name2"}'),Qn.forEach(t),$a.forEach(t),oc=c(Q),ma=a(Q,"TD",{}),r(ma).forEach(t),Q.forEach(t),ac=c(u),H=a(u,"TR",{});var V=r(H);No=a(V,"TD",{});var Vn=r(No);rc=s(Vn,"/api/{type}/{repo_id}/upload/{revision}/{path_in_repo}    POST"),Vn.forEach(t),dc=c(V),Lo=a(V,"TD",{});var Xn=r(Lo);sc=s(Xn,"Upload a file to a specific repository."),Xn.forEach(t),lc=c(V),jo=a(V,"TD",{});var Zn=r(jo);Io=a(Zn,"CODE",{});var eh=r(Io);cc=s(eh,"upload_file()"),eh.forEach(t),Zn.forEach(t),ic=c(V),Ee=a(V,"TD",{});var ka=r(Ee);Uo=a(ka,"CODE",{});var th=r(Uo);nc=s(th,'headers = { "authorization" : "Bearer $token" }'),th.forEach(t),hc=c(ka),Yo=a(ka,"CODE",{});var oh=r(Yo);fc=s(oh,'"data"="bytestream"'),oh.forEach(t),ka.forEach(t),pc=c(V),Da=a(V,"TD",{}),r(Da).forEach(t),V.forEach(t),Ec=c(u),B=a(u,"TR",{});var X=r(B);Mo=a(X,"TD",{});var ah=r(Mo);_c=s(ah,"/api/whoami-v2    GET"),ah.forEach(t),vc=c(X),qo=a(X,"TD",{});var rh=r(qo);uc=s(rh,"Get username and organizations the user belongs to."),rh.forEach(t),mc=c(X),Jo=a(X,"TD",{});var dh=r(Jo);Ko=a(dh,"CODE",{});var sh=r(Ko);Dc=s(sh,"whoami(token)"),sh.forEach(t),dh.forEach(t),gc=c(X),Qo=a(X,"TD",{});var lh=r(Qo);Vo=a(lh,"CODE",{});var ch=r(Vo);Tc=s(ch,'headers = { "authorization" : "Bearer $token" }'),ch.forEach(t),lh.forEach(t),yc=c(X),ga=a(X,"TD",{}),r(ga).forEach(t),X.forEach(t),u.forEach(t),Oa.forEach(t),this.h()},h(){R(Z,"name","hf:doc:metadata"),R(Z,"content",JSON.stringify(bh)),R(oe,"id","hub-api-endpoints"),R(oe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),R(oe,"href","#hub-api-endpoints"),R(ee,"class","relative group"),R(le,"href","https://github.com/huggingface/huggingface_hub"),R(le,"rel","nofollow"),R(_e,"href","./api-webhook"),R(ae,"id","endpoints-table"),R(ae,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),R(ae,"href","#endpoints-table"),R(te,"class","relative group")},m(v,W){e(document.head,Z),de(v,Xo,W),de(v,ee,W),e(ee,oe),e(oe,me),hh(se,me,null),e(ee,Pa),e(ee,De),e(De,Ha),de(v,Zo,W),de(v,F,W),e(F,Ba),e(F,le),e(le,ge),e(ge,Ra),e(F,Wa),e(F,_e),e(_e,Fa),e(F,Sa),de(v,ea,W),de(v,te,W),e(te,ae),e(ae,Te),hh(ce,Te,null),e(te,Aa),e(te,ye),e(ye,xa),de(v,ta,W),de(v,re,W),e(re,be),e(be,m),e(m,Oe),e(Oe,Na),e(m,La),e(m,Ce),e(Ce,ja),e(m,Ia),e(m,ve),e(ve,we),e(we,Ua),e(ve,Ya),e(m,Ma),e(m,Ge),e(Ge,qa),e(m,Ja),e(m,oa),e(re,Ka),e(re,_),e(_,D),e(D,ze),e(ze,Qa),e(D,Va),e(D,i),e(i,Xa),e(i,$e),e($e,Za),e(i,er),e(i,ke),e(ke,tr),e(i,or),e(i,Pe),e(Pe,ar),e(i,rr),e(i,He),e(He,dr),e(i,sr),e(i,Be),e(Be,lr),e(i,cr),e(i,Re),e(Re,ir),e(i,nr),e(i,We),e(We,hr),e(i,fr),e(i,Fe),e(Fe,pr),e(i,Er),e(i,Se),e(Se,_r),e(i,vr),e(i,Ae),e(Ae,ur),e(i,mr),e(i,xe),e(xe,Dr),e(i,gr),e(i,Ne),e(Ne,Tr),e(i,yr),e(i,Le),e(Le,br),e(i,Or),e(i,je),e(je,Cr),e(i,wr),e(i,Ie),e(Ie,Gr),e(i,zr),e(i,Ue),e(Ue,$r),e(i,kr),e(i,Ye),e(Ye,Pr),e(i,Hr),e(D,Br),e(D,Me),e(Me,qe),e(qe,Rr),e(D,Wr),e(D,Je),e(Je,Ke),e(Ke,Fr),e(D,Sr),e(D,aa),e(_,Ar),e(_,g),e(g,Qe),e(Qe,xr),e(g,Nr),e(g,Ve),e(Ve,Lr),e(g,jr),e(g,Xe),e(Xe,Ze),e(Ze,Ir),e(g,Ur),e(g,et),e(et,tt),e(tt,Yr),e(g,Mr),e(g,ra),e(_,qr),e(_,T),e(T,ot),e(ot,Jr),e(T,Kr),e(T,at),e(at,Qr),e(T,Vr),e(T,rt),e(rt,dt),e(dt,Xr),e(T,Zr),e(T,da),e(T,ed),e(T,sa),e(_,td),e(_,y),e(y,st),e(st,od),e(y,ad),e(y,h),e(h,rd),e(h,lt),e(lt,dd),e(h,sd),e(h,ct),e(ct,ld),e(h,cd),e(h,it),e(it,id),e(h,nd),e(h,nt),e(nt,hd),e(h,fd),e(h,ht),e(ht,pd),e(h,Ed),e(h,ft),e(ft,_d),e(h,vd),e(h,pt),e(pt,ud),e(h,md),e(h,Et),e(Et,Dd),e(h,gd),e(h,_t),e(_t,Td),e(h,yd),e(h,vt),e(vt,bd),e(h,Od),e(h,ut),e(ut,Cd),e(h,wd),e(h,mt),e(mt,Gd),e(h,zd),e(h,Dt),e(Dt,$d),e(h,kd),e(h,gt),e(gt,Pd),e(h,Hd),e(h,Tt),e(Tt,Bd),e(h,Rd),e(h,yt),e(yt,Wd),e(h,Fd),e(y,Sd),e(y,bt),e(bt,Ot),e(Ot,Ad),e(y,xd),e(y,Ct),e(Ct,wt),e(wt,Nd),e(y,Ld),e(y,la),e(_,jd),e(_,b),e(b,Gt),e(Gt,Id),e(b,Ud),e(b,ie),e(ie,Yd),e(ie,zt),e(zt,Md),e(ie,qd),e(b,Jd),e(b,$t),e($t,kt),e(kt,Kd),e(b,Qd),e(b,Pt),e(Pt,Ht),e(Ht,Vd),e(b,Xd),e(b,ca),e(_,Zd),e(_,O),e(O,Bt),e(Bt,es),e(O,ts),e(O,Rt),e(Rt,os),e(O,as),e(O,Wt),e(Wt,Ft),e(Ft,rs),e(O,ds),e(O,ia),e(O,ss),e(O,na),e(_,ls),e(_,C),e(C,St),e(St,cs),e(C,is),e(C,n),e(n,ns),e(n,At),e(At,hs),e(n,fs),e(n,xt),e(xt,ps),e(n,Es),e(n,Nt),e(Nt,_s),e(n,vs),e(n,Lt),e(Lt,us),e(n,ms),e(n,jt),e(jt,Ds),e(n,gs),e(n,It),e(It,Ts),e(n,ys),e(n,Ut),e(Ut,bs),e(n,Os),e(n,Yt),e(Yt,Cs),e(n,ws),e(n,Mt),e(Mt,Gs),e(n,zs),e(n,qt),e(qt,$s),e(n,ks),e(n,Jt),e(Jt,Ps),e(n,Hs),e(n,Kt),e(Kt,Bs),e(n,Rs),e(n,Qt),e(Qt,Ws),e(n,Fs),e(n,Vt),e(Vt,Ss),e(n,As),e(n,Xt),e(Xt,xs),e(n,Ns),e(n,Zt),e(Zt,Ls),e(n,js),e(n,eo),e(eo,Is),e(n,Us),e(C,Ys),e(C,to),e(to,oo),e(oo,Ms),e(C,qs),e(C,ao),e(ao,ro),e(ro,Js),e(C,Ks),e(C,ha),e(_,Qs),e(_,w),e(w,so),e(so,Vs),e(w,Xs),e(w,lo),e(lo,Zs),e(w,el),e(w,co),e(co,io),e(io,tl),e(w,ol),e(w,no),e(no,ho),e(ho,al),e(w,rl),e(w,fa),e(_,dl),e(_,G),e(G,fo),e(fo,sl),e(G,ll),e(G,po),e(po,cl),e(G,il),e(G,Eo),e(Eo,_o),e(_o,nl),e(G,hl),e(G,pa),e(G,fl),e(G,Ea),e(_,pl),e(_,z),e(z,vo),e(vo,El),e(z,_l),e(z,uo),e(uo,vl),e(z,ul),e(z,mo),e(mo,Do),e(Do,ml),e(z,Dl),e(z,ne),e(ne,go),e(go,gl),e(ne,Tl),e(ne,To),e(To,yl),e(z,bl),e(z,_a),e(_,Ol),e(_,$),e($,yo),e(yo,Cl),e($,wl),e($,bo),e(bo,Gl),e($,zl),e($,Oo),e(Oo,Co),e(Co,$l),e($,kl),e($,he),e(he,wo),e(wo,Pl),e(he,Hl),e(he,Go),e(Go,Bl),e($,Rl),e($,va),e(_,Wl),e(_,k),e(k,zo),e(zo,Fl),e(k,Sl),e(k,$o),e($o,Al),e(k,xl),e(k,ko),e(ko,Po),e(Po,Nl),e(k,Ll),e(k,fe),e(fe,Ho),e(Ho,jl),e(fe,Il),e(fe,Bo),e(Bo,Ul),e(k,Yl),e(k,ua),e(_,Ml),e(_,P),e(P,Ro),e(Ro,ql),e(P,Jl),e(P,Wo),e(Wo,Kl),e(P,Ql),e(P,Fo),e(Fo,So),e(So,Vl),e(P,Xl),e(P,pe),e(pe,Ao),e(Ao,Zl),e(pe,ec),e(pe,xo),e(xo,tc),e(P,oc),e(P,ma),e(_,ac),e(_,H),e(H,No),e(No,rc),e(H,dc),e(H,Lo),e(Lo,sc),e(H,lc),e(H,jo),e(jo,Io),e(Io,cc),e(H,ic),e(H,Ee),e(Ee,Uo),e(Uo,nc),e(Ee,hc),e(Ee,Yo),e(Yo,fc),e(H,pc),e(H,Da),e(_,Ec),e(_,B),e(B,Mo),e(Mo,_c),e(B,vc),e(B,qo),e(qo,uc),e(B,mc),e(B,Jo),e(Jo,Ko),e(Ko,Dc),e(B,gc),e(B,Qo),e(Qo,Vo),e(Vo,Tc),e(B,yc),e(B,ga),Ta=!0},p:gh,i(v){Ta||(fh(se.$$.fragment,v),fh(ce.$$.fragment,v),Ta=!0)},o(v){ph(se.$$.fragment,v),ph(ce.$$.fragment,v),Ta=!1},d(v){t(Z),v&&t(Xo),v&&t(ee),Eh(se),v&&t(Zo),v&&t(F),v&&t(ea),v&&t(te),Eh(ce),v&&t(ta),v&&t(re)}}}const bh={local:"hub-api-endpoints",sections:[{local:"endpoints-table",title:"Endpoints table"}],title:"Hub API Endpoints"};function Oh(Oc){return Th(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Gh extends vh{constructor(Z){super();uh(this,Z,Oh,yh,mh,{})}}export{Gh as default,bh as metadata};
