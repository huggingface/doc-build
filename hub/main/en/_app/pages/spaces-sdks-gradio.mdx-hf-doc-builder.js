import{S as Zo,i as er,s as tr,e as s,k as d,w as F,t as o,N as ar,c as i,d as a,m as c,a as l,x as L,h as r,b as n,P as Qo,G as t,g as h,y as Y,L as or,q as B,o as W,B as z,v as rr}from"../chunks/vendor-hf-doc-builder.js";import{I as be}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Xo}from"../chunks/CodeBlock-hf-doc-builder.js";function sr(Za){let $,Je,k,T,Ee,K,St,$e,At,Qe,y,ke,Pt,jt,U,Nt,Tt,V,Ct,Dt,Xe,f,qt,Ge,Ht,Ot,J,xt,Mt,Se,Rt,It,Ae,Ft,Lt,Pe,Yt,Bt,je,Wt,zt,Ze,_,Kt,Q,Ut,Vt,X,Jt,Qt,et,G,C,Ne,Z,Xt,Te,Zt,tt,b,ea,Ce,ta,aa,ee,oa,ra,at,D,sa,te,ia,la,ot,S,q,De,ae,na,qe,pa,rt,v,ha,oe,da,ca,He,fa,ua,ue,ga,ma,st,A,H,Oe,re,va,xe,wa,it,w,ya,Me,_a,ba,se,Ea,$a,Re,ka,Ga,lt,ie,nt,ge,Sa,pt,P,O,Ie,le,Aa,Fe,Pa,ht,x,ja,Le,Na,Ta,dt,ne,ct,u,Ca,pe,Da,qa,he,Ha,Oa,Ye,xa,Ma,Be,Ra,Ia,We,Fa,La,ze,Ya,Ba,ft,j,me,eo,Wa,ve,to,ut,N,M,Ke,de,za,Ue,Ka,gt,E,Ua,Ve,Va,Ja,ce,Qa,Xa,mt;return K=new be({}),Z=new be({}),ae=new be({}),re=new be({}),ie=new Xo({props:{code:`transformers
torch`,highlighted:`<span class="hljs-attribute">transformers
torch</span>`}}),le=new be({}),ne=new Xo({props:{code:`import gradio as gr
from transformers import pipeline

pipeline = pipeline(task="image-classification", model="julien-c/hotdog-not-hotdog")

def predict(image):
  predictions = pipeline(image)
  return {p["label"]: p["score"] for p in predictions}

gr.Interface(
    predict,
    inputs=gr.inputs.Image(label="Upload hot dog candidate", type="filepath"),
    outputs=gr.outputs.Label(num_top_classes=2),
    title="Hot Dog? Or Not?",
).launch()`,highlighted:`<span class="hljs-keyword">import</span> gradio <span class="hljs-keyword">as</span> gr
<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline

pipeline = pipeline(task=<span class="hljs-string">&quot;image-classification&quot;</span>, model=<span class="hljs-string">&quot;julien-c/hotdog-not-hotdog&quot;</span>)

<span class="hljs-keyword">def</span> <span class="hljs-title function_">predict</span>(<span class="hljs-params">image</span>):
  predictions = pipeline(image)
  <span class="hljs-keyword">return</span> {p[<span class="hljs-string">&quot;label&quot;</span>]: p[<span class="hljs-string">&quot;score&quot;</span>] <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> predictions}

gr.Interface(
    predict,
    inputs=gr.inputs.Image(label=<span class="hljs-string">&quot;Upload hot dog candidate&quot;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;filepath&quot;</span>),
    outputs=gr.outputs.Label(num_top_classes=<span class="hljs-number">2</span>),
    title=<span class="hljs-string">&quot;Hot Dog? Or Not?&quot;</span>,
).launch()`}}),de=new be({}),{c(){$=s("meta"),Je=d(),k=s("h1"),T=s("a"),Ee=s("span"),F(K.$$.fragment),St=d(),$e=s("span"),At=o("Gradio Spaces"),Qe=d(),y=s("p"),ke=s("strong"),Pt=o("Gradio"),jt=o(" provides an easy and intuitive interface for running a model from a list of inputs and displaying the outputs in formats such as images, audio, 3D objects, and more. Gradio now even has a "),U=s("a"),Nt=o("Plot output component"),Tt=o(" for creating data visualizations with Matplotlib, Bokeh, and Plotly! For more details, take a look at the "),V=s("a"),Ct=o("Getting started"),Dt=o(" guide from the Gradio team."),Xe=d(),f=s("p"),qt=o("Selecting "),Ge=s("strong"),Ht=o("Gradio"),Ot=o(" as the SDK when "),J=s("a"),xt=o("creating a new Space"),Mt=o(" will initialize your Space with the latest version of Gradio by setting the "),Se=s("code"),Rt=o("sdk"),It=o(" property to "),Ae=s("code"),Ft=o("gradio"),Lt=o(" in your "),Pe=s("code"),Yt=o("README.md"),Bt=o(" file\u2019s YAML block. If you\u2019d like to change the Gradio version, you can edit the "),je=s("code"),Wt=o("sdk_version"),zt=o(" property."),Ze=d(),_=s("p"),Kt=o("Visit the "),Q=s("a"),Ut=o("Gradio documentation"),Vt=o(" to learn all about its features and check out the "),X=s("a"),Jt=o("Gradio Guides"),Qt=o(" for some handy tutorials to help you get started!"),et=d(),G=s("h2"),C=s("a"),Ne=s("span"),F(Z.$$.fragment),Xt=d(),Te=s("span"),Zt=o("Your First Gradio Space: Hot Dog Classifier"),tt=d(),b=s("p"),ea=o("In the following sections, you\u2019ll learn the basics of creating a Space, configuring it, and deploying your code to it. We\u2019ll create a "),Ce=s("strong"),ta=o("Hot Dog Classifier"),aa=o(" Space with Gradio that\u2019ll be used to demo the "),ee=s("a"),oa=o("julien-c/hotdog-not-hotdog"),ra=o(" model, which can detect whether a given picture contains a hot dog \u{1F32D}"),at=d(),D=s("p"),sa=o("You can find a completed version of this hosted at "),te=s("a"),ia=o("NimaBoscarino/hotdog-gradio"),la=o("."),ot=d(),S=s("h2"),q=s("a"),De=s("span"),F(ae.$$.fragment),na=d(),qe=s("span"),pa=o("Create a new Gradio Space"),rt=d(),v=s("p"),ha=o("We\u2019ll start by "),oe=s("a"),da=o("creating a brand new Space"),ca=o(" and choosing "),He=s("strong"),fa=o("Gradio"),ua=o(" as our SDK. Hugging Face Spaces are Git repositories, meaning that you can work on your Space incrementally (and collaboratively) by pushing commits. Take a look at the "),ue=s("a"),ga=o("Getting Started with Repositories"),ma=o(" guide to learn about how you can create and edit files before continuing."),st=d(),A=s("h2"),H=s("a"),Oe=s("span"),F(re.$$.fragment),va=d(),xe=s("span"),wa=o("Add the dependencies"),it=d(),w=s("p"),ya=o("For the "),Me=s("strong"),_a=o("Hot Dog Classifier"),ba=o(" we\u2019ll be using a "),se=s("a"),Ea=o("\u{1F917} Transformers pipeline"),$a=o(" to use the model, so we need to start by installing a few dependencies. This can be done by creating a "),Re=s("strong"),ka=o("requirements.txt"),Ga=o(" file in our repository, and adding the following dependencies to it:"),lt=d(),F(ie.$$.fragment),nt=d(),ge=s("p"),Sa=o("The Spaces runtime will handle installing the dependencies!"),pt=d(),P=s("h2"),O=s("a"),Ie=s("span"),F(le.$$.fragment),Aa=d(),Fe=s("span"),Pa=o("Create the Gradio interface"),ht=d(),x=s("p"),ja=o("To create the Gradio app, make a new file in the repository called "),Le=s("strong"),Na=o("app.py"),Ta=o(", and add the following code:"),dt=d(),F(ne.$$.fragment),ct=d(),u=s("p"),Ca=o("This Python script uses a "),pe=s("a"),Da=o("\u{1F917} Transformers pipeline"),qa=o(" to load the "),he=s("a"),Ha=o("julien-c/hotdog-not-hotdog"),Oa=o(" model, which is used by the Gradio interface. The Gradio app will expect you to upload an image, which it\u2019ll then classify as "),Ye=s("em"),xa=o("hot dog"),Ma=o(" or "),Be=s("em"),Ra=o("not hot dog"),Ia=o(". Once you\u2019ve saved the code to the "),We=s("strong"),Fa=o("app.py"),La=o(" file, visit the "),ze=s("strong"),Ya=o("App"),Ba=o(" tab to see your app in action!"),ft=d(),j=s("div"),me=s("img"),Wa=d(),ve=s("img"),ut=d(),N=s("h2"),M=s("a"),Ke=s("span"),F(de.$$.fragment),za=d(),Ue=s("span"),Ka=o("Embed Gradio Spaces on other webpages"),gt=d(),E=s("p"),Ua=o("You can embed a Gradio Space on other webpages by using either Web Components or the HTML "),Ve=s("code"),Va=o("<iframe>"),Ja=o(" tag. Check out the "),ce=s("a"),Qa=o("Gradio documentation"),Xa=o(" for more details."),this.h()},l(e){const p=ar('[data-svelte="svelte-1phssyn"]',document.head);$=i(p,"META",{name:!0,content:!0}),p.forEach(a),Je=c(e),k=i(e,"H1",{class:!0});var vt=l(k);T=i(vt,"A",{id:!0,class:!0,href:!0});var ao=l(T);Ee=i(ao,"SPAN",{});var oo=l(Ee);L(K.$$.fragment,oo),oo.forEach(a),ao.forEach(a),St=c(vt),$e=i(vt,"SPAN",{});var ro=l($e);At=r(ro,"Gradio Spaces"),ro.forEach(a),vt.forEach(a),Qe=c(e),y=i(e,"P",{});var fe=l(y);ke=i(fe,"STRONG",{});var so=l(ke);Pt=r(so,"Gradio"),so.forEach(a),jt=r(fe," provides an easy and intuitive interface for running a model from a list of inputs and displaying the outputs in formats such as images, audio, 3D objects, and more. Gradio now even has a "),U=i(fe,"A",{href:!0,rel:!0});var io=l(U);Nt=r(io,"Plot output component"),io.forEach(a),Tt=r(fe," for creating data visualizations with Matplotlib, Bokeh, and Plotly! For more details, take a look at the "),V=i(fe,"A",{href:!0,rel:!0});var lo=l(V);Ct=r(lo,"Getting started"),lo.forEach(a),Dt=r(fe," guide from the Gradio team."),fe.forEach(a),Xe=c(e),f=i(e,"P",{});var g=l(f);qt=r(g,"Selecting "),Ge=i(g,"STRONG",{});var no=l(Ge);Ht=r(no,"Gradio"),no.forEach(a),Ot=r(g," as the SDK when "),J=i(g,"A",{href:!0,rel:!0});var po=l(J);xt=r(po,"creating a new Space"),po.forEach(a),Mt=r(g," will initialize your Space with the latest version of Gradio by setting the "),Se=i(g,"CODE",{});var ho=l(Se);Rt=r(ho,"sdk"),ho.forEach(a),It=r(g," property to "),Ae=i(g,"CODE",{});var co=l(Ae);Ft=r(co,"gradio"),co.forEach(a),Lt=r(g," in your "),Pe=i(g,"CODE",{});var fo=l(Pe);Yt=r(fo,"README.md"),fo.forEach(a),Bt=r(g," file\u2019s YAML block. If you\u2019d like to change the Gradio version, you can edit the "),je=i(g,"CODE",{});var uo=l(je);Wt=r(uo,"sdk_version"),uo.forEach(a),zt=r(g," property."),g.forEach(a),Ze=c(e),_=i(e,"P",{});var we=l(_);Kt=r(we,"Visit the "),Q=i(we,"A",{href:!0,rel:!0});var go=l(Q);Ut=r(go,"Gradio documentation"),go.forEach(a),Vt=r(we," to learn all about its features and check out the "),X=i(we,"A",{href:!0,rel:!0});var mo=l(X);Jt=r(mo,"Gradio Guides"),mo.forEach(a),Qt=r(we," for some handy tutorials to help you get started!"),we.forEach(a),et=c(e),G=i(e,"H2",{class:!0});var wt=l(G);C=i(wt,"A",{id:!0,class:!0,href:!0});var vo=l(C);Ne=i(vo,"SPAN",{});var wo=l(Ne);L(Z.$$.fragment,wo),wo.forEach(a),vo.forEach(a),Xt=c(wt),Te=i(wt,"SPAN",{});var yo=l(Te);Zt=r(yo,"Your First Gradio Space: Hot Dog Classifier"),yo.forEach(a),wt.forEach(a),tt=c(e),b=i(e,"P",{});var ye=l(b);ea=r(ye,"In the following sections, you\u2019ll learn the basics of creating a Space, configuring it, and deploying your code to it. We\u2019ll create a "),Ce=i(ye,"STRONG",{});var _o=l(Ce);ta=r(_o,"Hot Dog Classifier"),_o.forEach(a),aa=r(ye," Space with Gradio that\u2019ll be used to demo the "),ee=i(ye,"A",{href:!0,rel:!0});var bo=l(ee);oa=r(bo,"julien-c/hotdog-not-hotdog"),bo.forEach(a),ra=r(ye," model, which can detect whether a given picture contains a hot dog \u{1F32D}"),ye.forEach(a),at=c(e),D=i(e,"P",{});var yt=l(D);sa=r(yt,"You can find a completed version of this hosted at "),te=i(yt,"A",{href:!0,rel:!0});var Eo=l(te);ia=r(Eo,"NimaBoscarino/hotdog-gradio"),Eo.forEach(a),la=r(yt,"."),yt.forEach(a),ot=c(e),S=i(e,"H2",{class:!0});var _t=l(S);q=i(_t,"A",{id:!0,class:!0,href:!0});var $o=l(q);De=i($o,"SPAN",{});var ko=l(De);L(ae.$$.fragment,ko),ko.forEach(a),$o.forEach(a),na=c(_t),qe=i(_t,"SPAN",{});var Go=l(qe);pa=r(Go,"Create a new Gradio Space"),Go.forEach(a),_t.forEach(a),rt=c(e),v=i(e,"P",{});var R=l(v);ha=r(R,"We\u2019ll start by "),oe=i(R,"A",{href:!0,rel:!0});var So=l(oe);da=r(So,"creating a brand new Space"),So.forEach(a),ca=r(R," and choosing "),He=i(R,"STRONG",{});var Ao=l(He);fa=r(Ao,"Gradio"),Ao.forEach(a),ua=r(R," as our SDK. Hugging Face Spaces are Git repositories, meaning that you can work on your Space incrementally (and collaboratively) by pushing commits. Take a look at the "),ue=i(R,"A",{href:!0});var Po=l(ue);ga=r(Po,"Getting Started with Repositories"),Po.forEach(a),ma=r(R," guide to learn about how you can create and edit files before continuing."),R.forEach(a),st=c(e),A=i(e,"H2",{class:!0});var bt=l(A);H=i(bt,"A",{id:!0,class:!0,href:!0});var jo=l(H);Oe=i(jo,"SPAN",{});var No=l(Oe);L(re.$$.fragment,No),No.forEach(a),jo.forEach(a),va=c(bt),xe=i(bt,"SPAN",{});var To=l(xe);wa=r(To,"Add the dependencies"),To.forEach(a),bt.forEach(a),it=c(e),w=i(e,"P",{});var I=l(w);ya=r(I,"For the "),Me=i(I,"STRONG",{});var Co=l(Me);_a=r(Co,"Hot Dog Classifier"),Co.forEach(a),ba=r(I," we\u2019ll be using a "),se=i(I,"A",{href:!0,rel:!0});var Do=l(se);Ea=r(Do,"\u{1F917} Transformers pipeline"),Do.forEach(a),$a=r(I," to use the model, so we need to start by installing a few dependencies. This can be done by creating a "),Re=i(I,"STRONG",{});var qo=l(Re);ka=r(qo,"requirements.txt"),qo.forEach(a),Ga=r(I," file in our repository, and adding the following dependencies to it:"),I.forEach(a),lt=c(e),L(ie.$$.fragment,e),nt=c(e),ge=i(e,"P",{});var Ho=l(ge);Sa=r(Ho,"The Spaces runtime will handle installing the dependencies!"),Ho.forEach(a),pt=c(e),P=i(e,"H2",{class:!0});var Et=l(P);O=i(Et,"A",{id:!0,class:!0,href:!0});var Oo=l(O);Ie=i(Oo,"SPAN",{});var xo=l(Ie);L(le.$$.fragment,xo),xo.forEach(a),Oo.forEach(a),Aa=c(Et),Fe=i(Et,"SPAN",{});var Mo=l(Fe);Pa=r(Mo,"Create the Gradio interface"),Mo.forEach(a),Et.forEach(a),ht=c(e),x=i(e,"P",{});var $t=l(x);ja=r($t,"To create the Gradio app, make a new file in the repository called "),Le=i($t,"STRONG",{});var Ro=l(Le);Na=r(Ro,"app.py"),Ro.forEach(a),Ta=r($t,", and add the following code:"),$t.forEach(a),dt=c(e),L(ne.$$.fragment,e),ct=c(e),u=i(e,"P",{});var m=l(u);Ca=r(m,"This Python script uses a "),pe=i(m,"A",{href:!0,rel:!0});var Io=l(pe);Da=r(Io,"\u{1F917} Transformers pipeline"),Io.forEach(a),qa=r(m," to load the "),he=i(m,"A",{href:!0,rel:!0});var Fo=l(he);Ha=r(Fo,"julien-c/hotdog-not-hotdog"),Fo.forEach(a),Oa=r(m," model, which is used by the Gradio interface. The Gradio app will expect you to upload an image, which it\u2019ll then classify as "),Ye=i(m,"EM",{});var Lo=l(Ye);xa=r(Lo,"hot dog"),Lo.forEach(a),Ma=r(m," or "),Be=i(m,"EM",{});var Yo=l(Be);Ra=r(Yo,"not hot dog"),Yo.forEach(a),Ia=r(m,". Once you\u2019ve saved the code to the "),We=i(m,"STRONG",{});var Bo=l(We);Fa=r(Bo,"app.py"),Bo.forEach(a),La=r(m," file, visit the "),ze=i(m,"STRONG",{});var Wo=l(ze);Ya=r(Wo,"App"),Wo.forEach(a),Ba=r(m," tab to see your app in action!"),m.forEach(a),ft=c(e),j=i(e,"DIV",{class:!0});var kt=l(j);me=i(kt,"IMG",{class:!0,src:!0}),Wa=c(kt),ve=i(kt,"IMG",{class:!0,src:!0}),kt.forEach(a),ut=c(e),N=i(e,"H2",{class:!0});var Gt=l(N);M=i(Gt,"A",{id:!0,class:!0,href:!0});var zo=l(M);Ke=i(zo,"SPAN",{});var Ko=l(Ke);L(de.$$.fragment,Ko),Ko.forEach(a),zo.forEach(a),za=c(Gt),Ue=i(Gt,"SPAN",{});var Uo=l(Ue);Ka=r(Uo,"Embed Gradio Spaces on other webpages"),Uo.forEach(a),Gt.forEach(a),gt=c(e),E=i(e,"P",{});var _e=l(E);Ua=r(_e,"You can embed a Gradio Space on other webpages by using either Web Components or the HTML "),Ve=i(_e,"CODE",{});var Vo=l(Ve);Va=r(Vo,"<iframe>"),Vo.forEach(a),Ja=r(_e," tag. Check out the "),ce=i(_e,"A",{href:!0,rel:!0});var Jo=l(ce);Qa=r(Jo,"Gradio documentation"),Jo.forEach(a),Xa=r(_e," for more details."),_e.forEach(a),this.h()},h(){n($,"name","hf:doc:metadata"),n($,"content",JSON.stringify(ir)),n(T,"id","gradio-spaces"),n(T,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(T,"href","#gradio-spaces"),n(k,"class","relative group"),n(U,"href","https://gradio.app/docs/#o_plot"),n(U,"rel","nofollow"),n(V,"href","https://gradio.app/getting_started/"),n(V,"rel","nofollow"),n(J,"href","https://huggingface.co/new-space"),n(J,"rel","nofollow"),n(Q,"href","https://gradio.app/docs/"),n(Q,"rel","nofollow"),n(X,"href","https://gradio.app/guides/"),n(X,"rel","nofollow"),n(C,"id","your-first-gradio-space-hot-dog-classifier"),n(C,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(C,"href","#your-first-gradio-space-hot-dog-classifier"),n(G,"class","relative group"),n(ee,"href","https://huggingface.co/julien-c/hotdog-not-hotdog"),n(ee,"rel","nofollow"),n(te,"href","https://huggingface.co/spaces/NimaBoscarino/hotdog-gradio"),n(te,"rel","nofollow"),n(q,"id","create-a-new-gradio-space"),n(q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(q,"href","#create-a-new-gradio-space"),n(S,"class","relative group"),n(oe,"href","https://huggingface.co/new-space"),n(oe,"rel","nofollow"),n(ue,"href","./repositories-getting-started"),n(H,"id","add-the-dependencies"),n(H,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(H,"href","#add-the-dependencies"),n(A,"class","relative group"),n(se,"href","https://huggingface.co/docs/transformers/pipeline_tutorial"),n(se,"rel","nofollow"),n(O,"id","create-the-gradio-interface"),n(O,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(O,"href","#create-the-gradio-interface"),n(P,"class","relative group"),n(pe,"href","https://huggingface.co/docs/transformers/pipeline_tutorial"),n(pe,"rel","nofollow"),n(he,"href","https://huggingface.co/julien-c/hotdog-not-hotdog"),n(he,"rel","nofollow"),n(me,"class","block dark:hidden"),Qo(me.src,eo="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-hot-dog-gradio.png")||n(me,"src",eo),n(ve,"class","hidden dark:block"),Qo(ve.src,to="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-hot-dog-gradio-dark.png")||n(ve,"src",to),n(j,"class","flex justify-center"),n(M,"id","embed-gradio-spaces-on-other-webpages"),n(M,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(M,"href","#embed-gradio-spaces-on-other-webpages"),n(N,"class","relative group"),n(ce,"href","https://gradio.app/sharing_your_app/#embedding-hosted-spaces"),n(ce,"rel","nofollow")},m(e,p){t(document.head,$),h(e,Je,p),h(e,k,p),t(k,T),t(T,Ee),Y(K,Ee,null),t(k,St),t(k,$e),t($e,At),h(e,Qe,p),h(e,y,p),t(y,ke),t(ke,Pt),t(y,jt),t(y,U),t(U,Nt),t(y,Tt),t(y,V),t(V,Ct),t(y,Dt),h(e,Xe,p),h(e,f,p),t(f,qt),t(f,Ge),t(Ge,Ht),t(f,Ot),t(f,J),t(J,xt),t(f,Mt),t(f,Se),t(Se,Rt),t(f,It),t(f,Ae),t(Ae,Ft),t(f,Lt),t(f,Pe),t(Pe,Yt),t(f,Bt),t(f,je),t(je,Wt),t(f,zt),h(e,Ze,p),h(e,_,p),t(_,Kt),t(_,Q),t(Q,Ut),t(_,Vt),t(_,X),t(X,Jt),t(_,Qt),h(e,et,p),h(e,G,p),t(G,C),t(C,Ne),Y(Z,Ne,null),t(G,Xt),t(G,Te),t(Te,Zt),h(e,tt,p),h(e,b,p),t(b,ea),t(b,Ce),t(Ce,ta),t(b,aa),t(b,ee),t(ee,oa),t(b,ra),h(e,at,p),h(e,D,p),t(D,sa),t(D,te),t(te,ia),t(D,la),h(e,ot,p),h(e,S,p),t(S,q),t(q,De),Y(ae,De,null),t(S,na),t(S,qe),t(qe,pa),h(e,rt,p),h(e,v,p),t(v,ha),t(v,oe),t(oe,da),t(v,ca),t(v,He),t(He,fa),t(v,ua),t(v,ue),t(ue,ga),t(v,ma),h(e,st,p),h(e,A,p),t(A,H),t(H,Oe),Y(re,Oe,null),t(A,va),t(A,xe),t(xe,wa),h(e,it,p),h(e,w,p),t(w,ya),t(w,Me),t(Me,_a),t(w,ba),t(w,se),t(se,Ea),t(w,$a),t(w,Re),t(Re,ka),t(w,Ga),h(e,lt,p),Y(ie,e,p),h(e,nt,p),h(e,ge,p),t(ge,Sa),h(e,pt,p),h(e,P,p),t(P,O),t(O,Ie),Y(le,Ie,null),t(P,Aa),t(P,Fe),t(Fe,Pa),h(e,ht,p),h(e,x,p),t(x,ja),t(x,Le),t(Le,Na),t(x,Ta),h(e,dt,p),Y(ne,e,p),h(e,ct,p),h(e,u,p),t(u,Ca),t(u,pe),t(pe,Da),t(u,qa),t(u,he),t(he,Ha),t(u,Oa),t(u,Ye),t(Ye,xa),t(u,Ma),t(u,Be),t(Be,Ra),t(u,Ia),t(u,We),t(We,Fa),t(u,La),t(u,ze),t(ze,Ya),t(u,Ba),h(e,ft,p),h(e,j,p),t(j,me),t(j,Wa),t(j,ve),h(e,ut,p),h(e,N,p),t(N,M),t(M,Ke),Y(de,Ke,null),t(N,za),t(N,Ue),t(Ue,Ka),h(e,gt,p),h(e,E,p),t(E,Ua),t(E,Ve),t(Ve,Va),t(E,Ja),t(E,ce),t(ce,Qa),t(E,Xa),mt=!0},p:or,i(e){mt||(B(K.$$.fragment,e),B(Z.$$.fragment,e),B(ae.$$.fragment,e),B(re.$$.fragment,e),B(ie.$$.fragment,e),B(le.$$.fragment,e),B(ne.$$.fragment,e),B(de.$$.fragment,e),mt=!0)},o(e){W(K.$$.fragment,e),W(Z.$$.fragment,e),W(ae.$$.fragment,e),W(re.$$.fragment,e),W(ie.$$.fragment,e),W(le.$$.fragment,e),W(ne.$$.fragment,e),W(de.$$.fragment,e),mt=!1},d(e){a($),e&&a(Je),e&&a(k),z(K),e&&a(Qe),e&&a(y),e&&a(Xe),e&&a(f),e&&a(Ze),e&&a(_),e&&a(et),e&&a(G),z(Z),e&&a(tt),e&&a(b),e&&a(at),e&&a(D),e&&a(ot),e&&a(S),z(ae),e&&a(rt),e&&a(v),e&&a(st),e&&a(A),z(re),e&&a(it),e&&a(w),e&&a(lt),z(ie,e),e&&a(nt),e&&a(ge),e&&a(pt),e&&a(P),z(le),e&&a(ht),e&&a(x),e&&a(dt),z(ne,e),e&&a(ct),e&&a(u),e&&a(ft),e&&a(j),e&&a(ut),e&&a(N),z(de),e&&a(gt),e&&a(E)}}}const ir={local:"gradio-spaces",sections:[{local:"your-first-gradio-space-hot-dog-classifier",title:"Your First Gradio Space: Hot Dog Classifier"},{local:"create-a-new-gradio-space",title:"Create a new Gradio Space"},{local:"add-the-dependencies",title:"Add the dependencies"},{local:"create-the-gradio-interface",title:"Create the Gradio interface"},{local:"embed-gradio-spaces-on-other-webpages",title:"Embed Gradio Spaces on other webpages"}],title:"Gradio Spaces"};function lr(Za){return rr(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class dr extends Zo{constructor($){super();er(this,$,lr,sr,tr,{})}}export{dr as default,ir as metadata};
