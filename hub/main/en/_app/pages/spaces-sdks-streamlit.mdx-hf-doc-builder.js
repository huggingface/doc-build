import{S as Ho,i as Mo,s as Go,e as r,k as h,w as k,t as s,N as Io,c as l,d as a,m as f,a as i,x as j,h as o,b as n,P as Ds,G as t,g as c,y as A,L as Lo,q as P,o as T,B as N,v as Yo}from"../chunks/vendor-hf-doc-builder.js";import{I as Ae}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Ut}from"../chunks/CodeBlock-hf-doc-builder.js";function Fo(Cs){let x,nt,D,G,Pe,X,Kt,Te,zt,pt,b,Ne,Wt,Jt,xe,Vt,Qt,Z,Xt,Zt,ct,d,ea,De,ta,aa,ee,sa,oa,Ce,ra,la,Re,ia,na,Oe,pa,ca,qe,ha,fa,ht,w,da,He,ma,ua,I,Me,ga,va,wa,Ge,Sa,ya,ft,te,dt,_,ba,Ie,_a,Ea,we,$a,ka,mt,L,ja,ae,Aa,Pa,ut,C,Y,Le,se,Ta,Ye,Na,gt,E,xa,Fe,Da,Ca,oe,Ra,Oa,vt,F,qa,re,Ha,Ma,wt,R,B,Be,le,Ga,Ue,Ia,St,S,La,ie,Ya,Fa,Ke,Ba,Ua,Se,Ka,za,yt,O,U,ze,ne,Wa,We,Ja,bt,y,Va,Je,Qa,Xa,pe,Za,es,Ve,ts,as,_t,ce,Et,ye,ss,$t,q,K,Qe,he,os,Xe,rs,kt,z,ls,Ze,is,ns,jt,fe,At,m,ps,de,cs,hs,me,fs,ds,et,ms,us,tt,gs,vs,at,ws,Ss,st,ys,bs,Pt,H,be,Rs,_s,_e,Os,Tt,M,W,ot,ue,Es,rt,$s,Nt,$,ks,lt,js,As,it,Ps,Ts,xt,Ee,Ns,Dt,ge,Ct,v,qs,Rt;return X=new Ae({}),te=new Ut({props:{code:`sdk: streamlit
sdk_version: 1.10.0 # The latest supported version`,highlighted:`<span class="hljs-attr">sdk:</span> <span class="hljs-string">streamlit</span>
<span class="hljs-attr">sdk_version:</span> <span class="hljs-number">1.10</span><span class="hljs-number">.0</span> <span class="hljs-comment"># The latest supported version</span>`}}),se=new Ae({}),le=new Ae({}),ne=new Ae({}),ce=new Ut({props:{code:`transformers
torch`,highlighted:`<span class="hljs-attribute">transformers
torch</span>`}}),he=new Ae({}),fe=new Ut({props:{code:`import streamlit as st
from transformers import pipeline
from PIL import Image

pipeline = pipeline(task="image-classification", model="julien-c/hotdog-not-hotdog")

st.title("Hot Dog? Or Not?")

file_name = st.file_uploader("Upload a hot dog candidate image")

if file_name is not None:
  col1, col2 = st.columns(2)

  image = Image.open(file_name)
  col1.image(image, use_column_width=True)
  predictions = pipeline(image)

  col2.header("Probabilities")
  for p in predictions:
    col2.subheader(f"{ p['label'] }: { round(p['score'] * 100, 1)}%")`,highlighted:`<span class="hljs-keyword">import</span> streamlit <span class="hljs-keyword">as</span> st
<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline
<span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image

pipeline = pipeline(task=<span class="hljs-string">&quot;image-classification&quot;</span>, model=<span class="hljs-string">&quot;julien-c/hotdog-not-hotdog&quot;</span>)

st.title(<span class="hljs-string">&quot;Hot Dog? Or Not?&quot;</span>)

file_name = st.file_uploader(<span class="hljs-string">&quot;Upload a hot dog candidate image&quot;</span>)

<span class="hljs-keyword">if</span> file_name <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:
  col1, col2 = st.columns(<span class="hljs-number">2</span>)

  image = Image.<span class="hljs-built_in">open</span>(file_name)
  col1.image(image, use_column_width=<span class="hljs-literal">True</span>)
  predictions = pipeline(image)

  col2.header(<span class="hljs-string">&quot;Probabilities&quot;</span>)
  <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> predictions:
    col2.subheader(<span class="hljs-string">f&quot;<span class="hljs-subst">{ p[<span class="hljs-string">&#x27;label&#x27;</span>] }</span>: <span class="hljs-subst">{ <span class="hljs-built_in">round</span>(p[<span class="hljs-string">&#x27;score&#x27;</span>] * <span class="hljs-number">100</span>, <span class="hljs-number">1</span>)}</span>%&quot;</span>)`}}),ue=new Ae({}),ge=new Ut({props:{code:'<iframe src="https://NimaBoscarino-hotdog-streamlit.hf.space" title="My awesome Streamlit Space"></iframe>',highlighted:'&lt;iframe <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;https://NimaBoscarino-hotdog-streamlit.hf.space&quot;</span> <span class="hljs-attribute">title</span>=<span class="hljs-string">&quot;My awesome Streamlit Space&quot;</span>&gt;&lt;/iframe&gt;'}}),{c(){x=r("meta"),nt=h(),D=r("h1"),G=r("a"),Pe=r("span"),k(X.$$.fragment),Kt=h(),Te=r("span"),zt=s("Streamlit Spaces"),pt=h(),b=r("p"),Ne=r("strong"),Wt=s("Streamlit"),Jt=s(" gives users more freedom to build a full-featured web app with Python in a "),xe=r("em"),Vt=s("reactive"),Qt=s(" way. Your code is rerun each time the state of the app changes. Streamlit is also great for data visualization and supports several charting libraries such as Bokeh, Plotly, and Altair. Read this "),Z=r("a"),Xt=s("blog post"),Zt=s(" about building and hosting Streamlit apps in Spaces."),ct=h(),d=r("p"),ea=s("Selecting "),De=r("strong"),ta=s("Streamlit"),aa=s(" as the SDK when "),ee=r("a"),sa=s("creating a new Space"),oa=s(" will initialize your Space with the latest version of Streamlit by setting the "),Ce=r("code"),ra=s("sdk"),la=s(" property to "),Re=r("code"),ia=s("streamlit"),na=s(" in your "),Oe=r("code"),pa=s("README.md"),ca=s(" file\u2019s YAML block. If you\u2019d like to change the Streamlit version, you can edit the "),qe=r("code"),ha=s("sdk_version"),fa=s(" property."),ht=h(),w=r("p"),da=s("To use Streamlit in a Space, select "),He=r("strong"),ma=s("Streamlit"),ua=s(" as the SDK when you create a Space through the "),I=r("a"),Me=r("strong"),ga=s("New Space"),va=s(" form"),wa=s(". This will create a repository with a "),Ge=r("code"),Sa=s("README.md"),ya=s(" that contains the following properties in the YAML configuration block:"),ft=h(),k(te.$$.fragment),dt=h(),_=r("p"),ba=s("You can edit the "),Ie=r("code"),_a=s("sdk_version"),Ea=s(", but note that issues may occur when you use an unsupported Streamlit version. Not all Streamlit versions are supported, so please refer to the "),we=r("a"),$a=s("reference section"),ka=s(" to see which versions are available."),mt=h(),L=r("p"),ja=s("For in-depth information about Streamlit, refer to the "),ae=r("a"),Aa=s("Streamlit documentation"),Pa=s("."),ut=h(),C=r("h2"),Y=r("a"),Le=r("span"),k(se.$$.fragment),Ta=h(),Ye=r("span"),Na=s("Your First Streamlit Space: Hot Dog Classifier"),gt=h(),E=r("p"),xa=s("In the following sections, you\u2019ll learn the basics of creating a Space, configuring it, and deploying your code to it. We\u2019ll create a "),Fe=r("strong"),Da=s("Hot Dog Classifier"),Ca=s(" Space with Streamlit that\u2019ll be used to demo the "),oe=r("a"),Ra=s("julien-c/hotdog-not-hotdog"),Oa=s(" model, which can detect whether a given picture contains a hot dog \u{1F32D}"),vt=h(),F=r("p"),qa=s("You can find a completed version of this hosted at "),re=r("a"),Ha=s("NimaBoscarino/hotdog-streamlit"),Ma=s("."),wt=h(),R=r("h2"),B=r("a"),Be=r("span"),k(le.$$.fragment),Ga=h(),Ue=r("span"),Ia=s("Create a new Streamlit Space"),St=h(),S=r("p"),La=s("We\u2019ll start by "),ie=r("a"),Ya=s("creating a brand new Space"),Fa=s(" and choosing "),Ke=r("strong"),Ba=s("Streamlit"),Ua=s(" as our SDK. Hugging Face Spaces are Git repositories, meaning that you can work on your Space incrementally (and collaboratively) by pushing commits. Take a look at the "),Se=r("a"),Ka=s("Getting Started with Repositories"),za=s(" guide to learn about how you can create and edit files before continuing."),yt=h(),O=r("h2"),U=r("a"),ze=r("span"),k(ne.$$.fragment),Wa=h(),We=r("span"),Ja=s("Add the dependencies"),bt=h(),y=r("p"),Va=s("For the "),Je=r("strong"),Qa=s("Hot Dog Classifier"),Xa=s(" we\u2019ll be using a "),pe=r("a"),Za=s("\u{1F917} Transformers pipeline"),es=s(" to use the model, so we need to start by installing a few dependencies. This can be done by creating a "),Ve=r("strong"),ts=s("requirements.txt"),as=s(" file in our repository, and adding the following dependencies to it:"),_t=h(),k(ce.$$.fragment),Et=h(),ye=r("p"),ss=s("The Spaces runtime will handle installing the dependencies!"),$t=h(),q=r("h2"),K=r("a"),Qe=r("span"),k(he.$$.fragment),os=h(),Xe=r("span"),rs=s("Create the Streamlit app"),kt=h(),z=r("p"),ls=s("To create the Streamlit app, make a new file in the repository called "),Ze=r("strong"),is=s("app.py"),ns=s(", and add the following code:"),jt=h(),k(fe.$$.fragment),At=h(),m=r("p"),ps=s("This Python script uses a "),de=r("a"),cs=s("\u{1F917} Transformers pipeline"),hs=s(" to load the "),me=r("a"),fs=s("julien-c/hotdog-not-hotdog"),ds=s(" model, which is used by the Streamlit interface. The Streamlit app will expect you to upload an image, which it\u2019ll then classify as "),et=r("em"),ms=s("hot dog"),us=s(" or "),tt=r("em"),gs=s("not hot dog"),vs=s(". Once you\u2019ve saved the code to the "),at=r("strong"),ws=s("app.py"),Ss=s(" file, visit the "),st=r("strong"),ys=s("App"),bs=s(" tab to see your app in action!"),Pt=h(),H=r("div"),be=r("img"),_s=h(),_e=r("img"),Tt=h(),M=r("h2"),W=r("a"),ot=r("span"),k(ue.$$.fragment),Es=h(),rt=r("span"),$s=s("Embed Steamlit Spaces on other webpages"),Nt=h(),$=r("p"),ks=s("You can use the HTML "),lt=r("code"),js=s("<iframe>"),As=s(" tag to embed a Streamlit Space as an inline frame on other webpages. Simply include the URL of your Space, ending with the "),it=r("code"),Ps=s(".hf.space"),Ts=s(" suffix. To find the URL of your Space, you can use \u201CInspect element\u201D in your browser, or use the \u201CHow to embed\u201D button we\u2019ll ship shortly on all Spaces pages."),xt=h(),Ee=r("p"),Ns=s("For example, the demo above can be embedded in these docs with the following tag:"),Dt=h(),k(ge.$$.fragment),Ct=h(),v=r("iframe"),this.h()},l(e){const p=Io('[data-svelte="svelte-1phssyn"]',document.head);x=l(p,"META",{name:!0,content:!0}),p.forEach(a),nt=f(e),D=l(e,"H1",{class:!0});var Ot=i(D);G=l(Ot,"A",{id:!0,class:!0,href:!0});var Hs=i(G);Pe=l(Hs,"SPAN",{});var Ms=i(Pe);j(X.$$.fragment,Ms),Ms.forEach(a),Hs.forEach(a),Kt=f(Ot),Te=l(Ot,"SPAN",{});var Gs=i(Te);zt=o(Gs,"Streamlit Spaces"),Gs.forEach(a),Ot.forEach(a),pt=f(e),b=l(e,"P",{});var ve=i(b);Ne=l(ve,"STRONG",{});var Is=i(Ne);Wt=o(Is,"Streamlit"),Is.forEach(a),Jt=o(ve," gives users more freedom to build a full-featured web app with Python in a "),xe=l(ve,"EM",{});var Ls=i(xe);Vt=o(Ls,"reactive"),Ls.forEach(a),Qt=o(ve," way. Your code is rerun each time the state of the app changes. Streamlit is also great for data visualization and supports several charting libraries such as Bokeh, Plotly, and Altair. Read this "),Z=l(ve,"A",{href:!0,rel:!0});var Ys=i(Z);Xt=o(Ys,"blog post"),Ys.forEach(a),Zt=o(ve," about building and hosting Streamlit apps in Spaces."),ve.forEach(a),ct=f(e),d=l(e,"P",{});var u=i(d);ea=o(u,"Selecting "),De=l(u,"STRONG",{});var Fs=i(De);ta=o(Fs,"Streamlit"),Fs.forEach(a),aa=o(u," as the SDK when "),ee=l(u,"A",{href:!0,rel:!0});var Bs=i(ee);sa=o(Bs,"creating a new Space"),Bs.forEach(a),oa=o(u," will initialize your Space with the latest version of Streamlit by setting the "),Ce=l(u,"CODE",{});var Us=i(Ce);ra=o(Us,"sdk"),Us.forEach(a),la=o(u," property to "),Re=l(u,"CODE",{});var Ks=i(Re);ia=o(Ks,"streamlit"),Ks.forEach(a),na=o(u," in your "),Oe=l(u,"CODE",{});var zs=i(Oe);pa=o(zs,"README.md"),zs.forEach(a),ca=o(u," file\u2019s YAML block. If you\u2019d like to change the Streamlit version, you can edit the "),qe=l(u,"CODE",{});var Ws=i(qe);ha=o(Ws,"sdk_version"),Ws.forEach(a),fa=o(u," property."),u.forEach(a),ht=f(e),w=l(e,"P",{});var J=i(w);da=o(J,"To use Streamlit in a Space, select "),He=l(J,"STRONG",{});var Js=i(He);ma=o(Js,"Streamlit"),Js.forEach(a),ua=o(J," as the SDK when you create a Space through the "),I=l(J,"A",{href:!0,rel:!0});var xs=i(I);Me=l(xs,"STRONG",{});var Vs=i(Me);ga=o(Vs,"New Space"),Vs.forEach(a),va=o(xs," form"),xs.forEach(a),wa=o(J,". This will create a repository with a "),Ge=l(J,"CODE",{});var Qs=i(Ge);Sa=o(Qs,"README.md"),Qs.forEach(a),ya=o(J," that contains the following properties in the YAML configuration block:"),J.forEach(a),ft=f(e),j(te.$$.fragment,e),dt=f(e),_=l(e,"P",{});var $e=i(_);ba=o($e,"You can edit the "),Ie=l($e,"CODE",{});var Xs=i(Ie);_a=o(Xs,"sdk_version"),Xs.forEach(a),Ea=o($e,", but note that issues may occur when you use an unsupported Streamlit version. Not all Streamlit versions are supported, so please refer to the "),we=l($e,"A",{href:!0});var Zs=i(we);$a=o(Zs,"reference section"),Zs.forEach(a),ka=o($e," to see which versions are available."),$e.forEach(a),mt=f(e),L=l(e,"P",{});var qt=i(L);ja=o(qt,"For in-depth information about Streamlit, refer to the "),ae=l(qt,"A",{href:!0,rel:!0});var eo=i(ae);Aa=o(eo,"Streamlit documentation"),eo.forEach(a),Pa=o(qt,"."),qt.forEach(a),ut=f(e),C=l(e,"H2",{class:!0});var Ht=i(C);Y=l(Ht,"A",{id:!0,class:!0,href:!0});var to=i(Y);Le=l(to,"SPAN",{});var ao=i(Le);j(se.$$.fragment,ao),ao.forEach(a),to.forEach(a),Ta=f(Ht),Ye=l(Ht,"SPAN",{});var so=i(Ye);Na=o(so,"Your First Streamlit Space: Hot Dog Classifier"),so.forEach(a),Ht.forEach(a),gt=f(e),E=l(e,"P",{});var ke=i(E);xa=o(ke,"In the following sections, you\u2019ll learn the basics of creating a Space, configuring it, and deploying your code to it. We\u2019ll create a "),Fe=l(ke,"STRONG",{});var oo=i(Fe);Da=o(oo,"Hot Dog Classifier"),oo.forEach(a),Ca=o(ke," Space with Streamlit that\u2019ll be used to demo the "),oe=l(ke,"A",{href:!0,rel:!0});var ro=i(oe);Ra=o(ro,"julien-c/hotdog-not-hotdog"),ro.forEach(a),Oa=o(ke," model, which can detect whether a given picture contains a hot dog \u{1F32D}"),ke.forEach(a),vt=f(e),F=l(e,"P",{});var Mt=i(F);qa=o(Mt,"You can find a completed version of this hosted at "),re=l(Mt,"A",{href:!0,rel:!0});var lo=i(re);Ha=o(lo,"NimaBoscarino/hotdog-streamlit"),lo.forEach(a),Ma=o(Mt,"."),Mt.forEach(a),wt=f(e),R=l(e,"H2",{class:!0});var Gt=i(R);B=l(Gt,"A",{id:!0,class:!0,href:!0});var io=i(B);Be=l(io,"SPAN",{});var no=i(Be);j(le.$$.fragment,no),no.forEach(a),io.forEach(a),Ga=f(Gt),Ue=l(Gt,"SPAN",{});var po=i(Ue);Ia=o(po,"Create a new Streamlit Space"),po.forEach(a),Gt.forEach(a),St=f(e),S=l(e,"P",{});var V=i(S);La=o(V,"We\u2019ll start by "),ie=l(V,"A",{href:!0,rel:!0});var co=i(ie);Ya=o(co,"creating a brand new Space"),co.forEach(a),Fa=o(V," and choosing "),Ke=l(V,"STRONG",{});var ho=i(Ke);Ba=o(ho,"Streamlit"),ho.forEach(a),Ua=o(V," as our SDK. Hugging Face Spaces are Git repositories, meaning that you can work on your Space incrementally (and collaboratively) by pushing commits. Take a look at the "),Se=l(V,"A",{href:!0});var fo=i(Se);Ka=o(fo,"Getting Started with Repositories"),fo.forEach(a),za=o(V," guide to learn about how you can create and edit files before continuing."),V.forEach(a),yt=f(e),O=l(e,"H2",{class:!0});var It=i(O);U=l(It,"A",{id:!0,class:!0,href:!0});var mo=i(U);ze=l(mo,"SPAN",{});var uo=i(ze);j(ne.$$.fragment,uo),uo.forEach(a),mo.forEach(a),Wa=f(It),We=l(It,"SPAN",{});var go=i(We);Ja=o(go,"Add the dependencies"),go.forEach(a),It.forEach(a),bt=f(e),y=l(e,"P",{});var Q=i(y);Va=o(Q,"For the "),Je=l(Q,"STRONG",{});var vo=i(Je);Qa=o(vo,"Hot Dog Classifier"),vo.forEach(a),Xa=o(Q," we\u2019ll be using a "),pe=l(Q,"A",{href:!0,rel:!0});var wo=i(pe);Za=o(wo,"\u{1F917} Transformers pipeline"),wo.forEach(a),es=o(Q," to use the model, so we need to start by installing a few dependencies. This can be done by creating a "),Ve=l(Q,"STRONG",{});var So=i(Ve);ts=o(So,"requirements.txt"),So.forEach(a),as=o(Q," file in our repository, and adding the following dependencies to it:"),Q.forEach(a),_t=f(e),j(ce.$$.fragment,e),Et=f(e),ye=l(e,"P",{});var yo=i(ye);ss=o(yo,"The Spaces runtime will handle installing the dependencies!"),yo.forEach(a),$t=f(e),q=l(e,"H2",{class:!0});var Lt=i(q);K=l(Lt,"A",{id:!0,class:!0,href:!0});var bo=i(K);Qe=l(bo,"SPAN",{});var _o=i(Qe);j(he.$$.fragment,_o),_o.forEach(a),bo.forEach(a),os=f(Lt),Xe=l(Lt,"SPAN",{});var Eo=i(Xe);rs=o(Eo,"Create the Streamlit app"),Eo.forEach(a),Lt.forEach(a),kt=f(e),z=l(e,"P",{});var Yt=i(z);ls=o(Yt,"To create the Streamlit app, make a new file in the repository called "),Ze=l(Yt,"STRONG",{});var $o=i(Ze);is=o($o,"app.py"),$o.forEach(a),ns=o(Yt,", and add the following code:"),Yt.forEach(a),jt=f(e),j(fe.$$.fragment,e),At=f(e),m=l(e,"P",{});var g=i(m);ps=o(g,"This Python script uses a "),de=l(g,"A",{href:!0,rel:!0});var ko=i(de);cs=o(ko,"\u{1F917} Transformers pipeline"),ko.forEach(a),hs=o(g," to load the "),me=l(g,"A",{href:!0,rel:!0});var jo=i(me);fs=o(jo,"julien-c/hotdog-not-hotdog"),jo.forEach(a),ds=o(g," model, which is used by the Streamlit interface. The Streamlit app will expect you to upload an image, which it\u2019ll then classify as "),et=l(g,"EM",{});var Ao=i(et);ms=o(Ao,"hot dog"),Ao.forEach(a),us=o(g," or "),tt=l(g,"EM",{});var Po=i(tt);gs=o(Po,"not hot dog"),Po.forEach(a),vs=o(g,". Once you\u2019ve saved the code to the "),at=l(g,"STRONG",{});var To=i(at);ws=o(To,"app.py"),To.forEach(a),Ss=o(g," file, visit the "),st=l(g,"STRONG",{});var No=i(st);ys=o(No,"App"),No.forEach(a),bs=o(g," tab to see your app in action!"),g.forEach(a),Pt=f(e),H=l(e,"DIV",{class:!0});var Ft=i(H);be=l(Ft,"IMG",{class:!0,src:!0}),_s=f(Ft),_e=l(Ft,"IMG",{class:!0,src:!0}),Ft.forEach(a),Tt=f(e),M=l(e,"H2",{class:!0});var Bt=i(M);W=l(Bt,"A",{id:!0,class:!0,href:!0});var xo=i(W);ot=l(xo,"SPAN",{});var Do=i(ot);j(ue.$$.fragment,Do),Do.forEach(a),xo.forEach(a),Es=f(Bt),rt=l(Bt,"SPAN",{});var Co=i(rt);$s=o(Co,"Embed Steamlit Spaces on other webpages"),Co.forEach(a),Bt.forEach(a),Nt=f(e),$=l(e,"P",{});var je=i($);ks=o(je,"You can use the HTML "),lt=l(je,"CODE",{});var Ro=i(lt);js=o(Ro,"<iframe>"),Ro.forEach(a),As=o(je," tag to embed a Streamlit Space as an inline frame on other webpages. Simply include the URL of your Space, ending with the "),it=l(je,"CODE",{});var Oo=i(it);Ps=o(Oo,".hf.space"),Oo.forEach(a),Ts=o(je," suffix. To find the URL of your Space, you can use \u201CInspect element\u201D in your browser, or use the \u201CHow to embed\u201D button we\u2019ll ship shortly on all Spaces pages."),je.forEach(a),xt=f(e),Ee=l(e,"P",{});var qo=i(Ee);Ns=o(qo,"For example, the demo above can be embedded in these docs with the following tag:"),qo.forEach(a),Dt=f(e),j(ge.$$.fragment,e),Ct=f(e),v=l(e,"IFRAME",{src:!0,frameborder:!0,height:!0,title:!0,class:!0,allow:!0,sandbox:!0}),i(v).forEach(a),this.h()},h(){n(x,"name","hf:doc:metadata"),n(x,"content",JSON.stringify(Bo)),n(G,"id","streamlit-spaces"),n(G,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(G,"href","#streamlit-spaces"),n(D,"class","relative group"),n(Z,"href","https://huggingface.co/blog/streamlit-spaces"),n(Z,"rel","nofollow"),n(ee,"href","https://huggingface.co/new-space"),n(ee,"rel","nofollow"),n(I,"href","https://huggingface.co/new-space"),n(I,"rel","nofollow"),n(we,"href","./spaces-config-reference"),n(ae,"href","https://docs.streamlit.io/"),n(ae,"rel","nofollow"),n(Y,"id","your-first-streamlit-space-hot-dog-classifier"),n(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(Y,"href","#your-first-streamlit-space-hot-dog-classifier"),n(C,"class","relative group"),n(oe,"href","https://huggingface.co/julien-c/hotdog-not-hotdog"),n(oe,"rel","nofollow"),n(re,"href","https://huggingface.co/spaces/NimaBoscarino/hotdog-streamlit"),n(re,"rel","nofollow"),n(B,"id","create-a-new-streamlit-space"),n(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(B,"href","#create-a-new-streamlit-space"),n(R,"class","relative group"),n(ie,"href","https://huggingface.co/new-space"),n(ie,"rel","nofollow"),n(Se,"href","./repositories-getting-started"),n(U,"id","add-the-dependencies"),n(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(U,"href","#add-the-dependencies"),n(O,"class","relative group"),n(pe,"href","https://huggingface.co/docs/transformers/pipeline_tutorial"),n(pe,"rel","nofollow"),n(K,"id","create-the-streamlit-app"),n(K,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(K,"href","#create-the-streamlit-app"),n(q,"class","relative group"),n(de,"href","https://huggingface.co/docs/transformers/pipeline_tutorial"),n(de,"rel","nofollow"),n(me,"href","https://huggingface.co/julien-c/hotdog-not-hotdog"),n(me,"rel","nofollow"),n(be,"class","block dark:hidden"),Ds(be.src,Rs="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-hot-dog-streamlit.png")||n(be,"src",Rs),n(_e,"class","hidden dark:block"),Ds(_e.src,Os="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/spaces-hot-dog-streamlit-dark.png")||n(_e,"src",Os),n(H,"class","flex justify-center"),n(W,"id","embed-steamlit-spaces-on-other-webpages"),n(W,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(W,"href","#embed-steamlit-spaces-on-other-webpages"),n(M,"class","relative group"),Ds(v.src,qs="https://NimaBoscarino-hotdog-streamlit.hf.space")||n(v,"src",qs),n(v,"frameborder","0"),n(v,"height","600"),n(v,"title","Streamlit app"),n(v,"class","container p-0 flex-grow space-iframe"),n(v,"allow","accelerometer; ambient-light-sensor; autoplay; battery; camera; document-domain; encrypted-media; fullscreen; geolocation; gyroscope; layout-animations; legacy-image-formats; magnetometer; microphone; midi; oversized-images; payment; picture-in-picture; publickey-credentials-get; sync-xhr; usb; vr ; wake-lock; xr-spatial-tracking"),n(v,"sandbox","allow-forms allow-modals allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-downloads")},m(e,p){t(document.head,x),c(e,nt,p),c(e,D,p),t(D,G),t(G,Pe),A(X,Pe,null),t(D,Kt),t(D,Te),t(Te,zt),c(e,pt,p),c(e,b,p),t(b,Ne),t(Ne,Wt),t(b,Jt),t(b,xe),t(xe,Vt),t(b,Qt),t(b,Z),t(Z,Xt),t(b,Zt),c(e,ct,p),c(e,d,p),t(d,ea),t(d,De),t(De,ta),t(d,aa),t(d,ee),t(ee,sa),t(d,oa),t(d,Ce),t(Ce,ra),t(d,la),t(d,Re),t(Re,ia),t(d,na),t(d,Oe),t(Oe,pa),t(d,ca),t(d,qe),t(qe,ha),t(d,fa),c(e,ht,p),c(e,w,p),t(w,da),t(w,He),t(He,ma),t(w,ua),t(w,I),t(I,Me),t(Me,ga),t(I,va),t(w,wa),t(w,Ge),t(Ge,Sa),t(w,ya),c(e,ft,p),A(te,e,p),c(e,dt,p),c(e,_,p),t(_,ba),t(_,Ie),t(Ie,_a),t(_,Ea),t(_,we),t(we,$a),t(_,ka),c(e,mt,p),c(e,L,p),t(L,ja),t(L,ae),t(ae,Aa),t(L,Pa),c(e,ut,p),c(e,C,p),t(C,Y),t(Y,Le),A(se,Le,null),t(C,Ta),t(C,Ye),t(Ye,Na),c(e,gt,p),c(e,E,p),t(E,xa),t(E,Fe),t(Fe,Da),t(E,Ca),t(E,oe),t(oe,Ra),t(E,Oa),c(e,vt,p),c(e,F,p),t(F,qa),t(F,re),t(re,Ha),t(F,Ma),c(e,wt,p),c(e,R,p),t(R,B),t(B,Be),A(le,Be,null),t(R,Ga),t(R,Ue),t(Ue,Ia),c(e,St,p),c(e,S,p),t(S,La),t(S,ie),t(ie,Ya),t(S,Fa),t(S,Ke),t(Ke,Ba),t(S,Ua),t(S,Se),t(Se,Ka),t(S,za),c(e,yt,p),c(e,O,p),t(O,U),t(U,ze),A(ne,ze,null),t(O,Wa),t(O,We),t(We,Ja),c(e,bt,p),c(e,y,p),t(y,Va),t(y,Je),t(Je,Qa),t(y,Xa),t(y,pe),t(pe,Za),t(y,es),t(y,Ve),t(Ve,ts),t(y,as),c(e,_t,p),A(ce,e,p),c(e,Et,p),c(e,ye,p),t(ye,ss),c(e,$t,p),c(e,q,p),t(q,K),t(K,Qe),A(he,Qe,null),t(q,os),t(q,Xe),t(Xe,rs),c(e,kt,p),c(e,z,p),t(z,ls),t(z,Ze),t(Ze,is),t(z,ns),c(e,jt,p),A(fe,e,p),c(e,At,p),c(e,m,p),t(m,ps),t(m,de),t(de,cs),t(m,hs),t(m,me),t(me,fs),t(m,ds),t(m,et),t(et,ms),t(m,us),t(m,tt),t(tt,gs),t(m,vs),t(m,at),t(at,ws),t(m,Ss),t(m,st),t(st,ys),t(m,bs),c(e,Pt,p),c(e,H,p),t(H,be),t(H,_s),t(H,_e),c(e,Tt,p),c(e,M,p),t(M,W),t(W,ot),A(ue,ot,null),t(M,Es),t(M,rt),t(rt,$s),c(e,Nt,p),c(e,$,p),t($,ks),t($,lt),t(lt,js),t($,As),t($,it),t(it,Ps),t($,Ts),c(e,xt,p),c(e,Ee,p),t(Ee,Ns),c(e,Dt,p),A(ge,e,p),c(e,Ct,p),c(e,v,p),Rt=!0},p:Lo,i(e){Rt||(P(X.$$.fragment,e),P(te.$$.fragment,e),P(se.$$.fragment,e),P(le.$$.fragment,e),P(ne.$$.fragment,e),P(ce.$$.fragment,e),P(he.$$.fragment,e),P(fe.$$.fragment,e),P(ue.$$.fragment,e),P(ge.$$.fragment,e),Rt=!0)},o(e){T(X.$$.fragment,e),T(te.$$.fragment,e),T(se.$$.fragment,e),T(le.$$.fragment,e),T(ne.$$.fragment,e),T(ce.$$.fragment,e),T(he.$$.fragment,e),T(fe.$$.fragment,e),T(ue.$$.fragment,e),T(ge.$$.fragment,e),Rt=!1},d(e){a(x),e&&a(nt),e&&a(D),N(X),e&&a(pt),e&&a(b),e&&a(ct),e&&a(d),e&&a(ht),e&&a(w),e&&a(ft),N(te,e),e&&a(dt),e&&a(_),e&&a(mt),e&&a(L),e&&a(ut),e&&a(C),N(se),e&&a(gt),e&&a(E),e&&a(vt),e&&a(F),e&&a(wt),e&&a(R),N(le),e&&a(St),e&&a(S),e&&a(yt),e&&a(O),N(ne),e&&a(bt),e&&a(y),e&&a(_t),N(ce,e),e&&a(Et),e&&a(ye),e&&a($t),e&&a(q),N(he),e&&a(kt),e&&a(z),e&&a(jt),N(fe,e),e&&a(At),e&&a(m),e&&a(Pt),e&&a(H),e&&a(Tt),e&&a(M),N(ue),e&&a(Nt),e&&a($),e&&a(xt),e&&a(Ee),e&&a(Dt),N(ge,e),e&&a(Ct),e&&a(v)}}}const Bo={local:"streamlit-spaces",sections:[{local:"your-first-streamlit-space-hot-dog-classifier",title:"Your First Streamlit Space: Hot Dog Classifier"},{local:"create-a-new-streamlit-space",title:"Create a new Streamlit Space"},{local:"add-the-dependencies",title:"Add the dependencies"},{local:"create-the-streamlit-app",title:"Create the Streamlit app"},{local:"embed-steamlit-spaces-on-other-webpages",title:"Embed Steamlit Spaces on other webpages"}],title:"Streamlit Spaces"};function Uo(Cs){return Yo(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Jo extends Ho{constructor(x){super();Mo(this,x,Uo,Fo,Go,{})}}export{Jo as default,Bo as metadata};
