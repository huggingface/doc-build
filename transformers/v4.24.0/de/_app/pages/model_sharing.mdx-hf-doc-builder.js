import{S as _s,i as $s,s as bs,e as r,k as d,w as S,t as l,M as vs,c as i,d as n,m,a as o,x as z,h as s,b as p,N as Tr,G as t,g as a,y,q as M,o as T,B as D,v as ks,L as ct}from"../chunks/vendor-hf-doc-builder.js";import{T as ws}from"../chunks/Tip-hf-doc-builder.js";import{Y as Es}from"../chunks/Youtube-hf-doc-builder.js";import{I as Ge}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as V}from"../chunks/CodeBlock-hf-doc-builder.js";import{F as gs,M as gt}from"../chunks/Markdown-hf-doc-builder.js";function Ss(C){let h,_,u,c,v;return{c(){h=r("p"),_=l("Um ein Modell mit der \xD6ffentlichkeit zu teilen, ben\xF6tigen Sie ein Konto auf "),u=r("a"),c=l("huggingface.co"),v=l(". Sie k\xF6nnen auch einer bestehenden Organisation beitreten oder eine neue Organisation gr\xFCnden."),this.h()},l(b){h=i(b,"P",{});var w=o(h);_=s(w,"Um ein Modell mit der \xD6ffentlichkeit zu teilen, ben\xF6tigen Sie ein Konto auf "),u=i(w,"A",{href:!0,rel:!0});var H=o(u);c=s(H,"huggingface.co"),H.forEach(n),v=s(w,". Sie k\xF6nnen auch einer bestehenden Organisation beitreten oder eine neue Organisation gr\xFCnden."),w.forEach(n),this.h()},h(){p(u,"href","https://huggingface.co/join"),p(u,"rel","nofollow")},m(b,w){a(b,h,w),t(h,_),t(h,u),t(u,c),t(h,v)},d(b){b&&n(h)}}}function zs(C){let h,_,u,c,v,b,w,H;return w=new V({props:{code:`pt_model = DistilBertForSequenceClassification.from_pretrained("path/to/awesome-name-you-picked", from_tf=True)
pt_model.save_pretrained("path/to/awesome-name-you-picked")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model = DistilBertForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;path/to/awesome-name-you-picked&quot;</span>, from_tf=<span class="hljs-literal">True</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model.save_pretrained(<span class="hljs-string">&quot;path/to/awesome-name-you-picked&quot;</span>)`}}),{c(){h=r("p"),_=l("Geben Sie "),u=r("code"),c=l("from_tf=True"),v=l(" an, um einen Pr\xFCfpunkt von TensorFlow nach PyTorch zu konvertieren:"),b=d(),S(w.$$.fragment)},l(E){h=i(E,"P",{});var P=o(h);_=s(P,"Geben Sie "),u=i(P,"CODE",{});var A=o(u);c=s(A,"from_tf=True"),A.forEach(n),v=s(P," an, um einen Pr\xFCfpunkt von TensorFlow nach PyTorch zu konvertieren:"),P.forEach(n),b=m(E),z(w.$$.fragment,E)},m(E,P){a(E,h,P),t(h,_),t(h,u),t(u,c),t(h,v),a(E,b,P),y(w,E,P),H=!0},p:ct,i(E){H||(M(w.$$.fragment,E),H=!0)},o(E){T(w.$$.fragment,E),H=!1},d(E){E&&n(h),E&&n(b),D(w,E)}}}function ys(C){let h,_;return h=new gt({props:{$$slots:{default:[zs]},$$scope:{ctx:C}}}),{c(){S(h.$$.fragment)},l(u){z(h.$$.fragment,u)},m(u,c){y(h,u,c),_=!0},p(u,c){const v={};c&2&&(v.$$scope={dirty:c,ctx:u}),h.$set(v)},i(u){_||(M(h.$$.fragment,u),_=!0)},o(u){T(h.$$.fragment,u),_=!1},d(u){D(h,u)}}}function Ms(C){let h,_,u,c,v,b,w,H,E,P,A,W,K;return w=new V({props:{code:'tf_model = TFDistilBertForSequenceClassification.from_pretrained("path/to/awesome-name-you-picked", from_pt=True)',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model = TFDistilBertForSequenceClassification.from_pretrained(<span class="hljs-string">&quot;path/to/awesome-name-you-picked&quot;</span>, from_pt=<span class="hljs-literal">True</span>)'}}),W=new V({props:{code:'tf_model.save_pretrained("path/to/awesome-name-you-picked")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model.save_pretrained(<span class="hljs-string">&quot;path/to/awesome-name-you-picked&quot;</span>)'}}),{c(){h=r("p"),_=l("Geben Sie "),u=r("code"),c=l("from_pt=True"),v=l(" an, um einen Pr\xFCfpunkt von PyTorch nach TensorFlow zu konvertieren:"),b=d(),S(w.$$.fragment),H=d(),E=r("p"),P=l("Dann k\xF6nnen Sie Ihr neues TensorFlow-Modell mit seinem neuen Checkpoint speichern:"),A=d(),S(W.$$.fragment)},l($){h=i($,"P",{});var R=o(h);_=s(R,"Geben Sie "),u=i(R,"CODE",{});var G=o(u);c=s(G,"from_pt=True"),G.forEach(n),v=s(R," an, um einen Pr\xFCfpunkt von PyTorch nach TensorFlow zu konvertieren:"),R.forEach(n),b=m($),z(w.$$.fragment,$),H=m($),E=i($,"P",{});var q=o(E);P=s(q,"Dann k\xF6nnen Sie Ihr neues TensorFlow-Modell mit seinem neuen Checkpoint speichern:"),q.forEach(n),A=m($),z(W.$$.fragment,$)},m($,R){a($,h,R),t(h,_),t(h,u),t(u,c),t(h,v),a($,b,R),y(w,$,R),a($,H,R),a($,E,R),t(E,P),a($,A,R),y(W,$,R),K=!0},p:ct,i($){K||(M(w.$$.fragment,$),M(W.$$.fragment,$),K=!0)},o($){T(w.$$.fragment,$),T(W.$$.fragment,$),K=!1},d($){$&&n(h),$&&n(b),D(w,$),$&&n(H),$&&n(E),$&&n(A),D(W,$)}}}function Ts(C){let h,_;return h=new gt({props:{$$slots:{default:[Ms]},$$scope:{ctx:C}}}),{c(){S(h.$$.fragment)},l(u){z(h.$$.fragment,u)},m(u,c){y(h,u,c),_=!0},p(u,c){const v={};c&2&&(v.$$scope={dirty:c,ctx:u}),h.$set(v)},i(u){_||(M(h.$$.fragment,u),_=!0)},o(u){T(h.$$.fragment,u),_=!1},d(u){D(h,u)}}}function Ds(C){let h,_,u,c,v;return c=new V({props:{code:`flax_model = FlaxDistilBertForSequenceClassification.from_pretrained(
    "path/to/awesome-name-you-picked", from_pt=True
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>flax_model = FlaxDistilBertForSequenceClassification.from_pretrained(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;path/to/awesome-name-you-picked&quot;</span>, from_pt=<span class="hljs-literal">True</span>
<span class="hljs-meta">... </span>)`}}),{c(){h=r("p"),_=l("Wenn ein Modell in Flax verf\xFCgbar ist, k\xF6nnen Sie auch einen Kontrollpunkt von PyTorch nach Flax konvertieren:"),u=d(),S(c.$$.fragment)},l(b){h=i(b,"P",{});var w=o(h);_=s(w,"Wenn ein Modell in Flax verf\xFCgbar ist, k\xF6nnen Sie auch einen Kontrollpunkt von PyTorch nach Flax konvertieren:"),w.forEach(n),u=m(b),z(c.$$.fragment,b)},m(b,w){a(b,h,w),t(h,_),a(b,u,w),y(c,b,w),v=!0},p:ct,i(b){v||(M(c.$$.fragment,b),v=!0)},o(b){T(c.$$.fragment,b),v=!1},d(b){b&&n(h),b&&n(u),D(c,b)}}}function Is(C){let h,_;return h=new gt({props:{$$slots:{default:[Ds]},$$scope:{ctx:C}}}),{c(){S(h.$$.fragment)},l(u){z(h.$$.fragment,u)},m(u,c){y(h,u,c),_=!0},p(u,c){const v={};c&2&&(v.$$scope={dirty:c,ctx:u}),h.$set(v)},i(u){_||(M(h.$$.fragment,u),_=!0)},o(u){T(h.$$.fragment,u),_=!1},d(u){D(h,u)}}}function Ps(C){let h,_,u,c,v,b,w,H,E,P,A,W,K,$,R,G,q,X,Q,B,le,re,ee,ie,Z,J,j,N,oe,L,se,O,x,k,F,ue,Y,ne;return h=new Es({props:{id:"Z1-XMy-GNLQ"}}),X=new V({props:{code:'training_args = TrainingArguments(output_dir="my-awesome-model", push_to_hub=True)',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>training_args = TrainingArguments(output_dir=<span class="hljs-string">&quot;my-awesome-model&quot;</span>, push_to_hub=<span class="hljs-literal">True</span>)'}}),J=new V({props:{code:`trainer = Trainer(
    model=model,
    args=training_args,
    train_dataset=small_train_dataset,
    eval_dataset=small_eval_dataset,
    compute_metrics=compute_metrics,
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>trainer = Trainer(
<span class="hljs-meta">... </span>    model=model,
<span class="hljs-meta">... </span>    args=training_args,
<span class="hljs-meta">... </span>    train_dataset=small_train_dataset,
<span class="hljs-meta">... </span>    eval_dataset=small_eval_dataset,
<span class="hljs-meta">... </span>    compute_metrics=compute_metrics,
<span class="hljs-meta">... </span>)`}}),Y=new V({props:{code:"trainer.push_to_hub()",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>trainer.push_to_hub()'}}),{c(){S(h.$$.fragment),_=d(),u=r("p"),c=l("Die Weitergabe eines Modells an den Hub ist so einfach wie das Hinzuf\xFCgen eines zus\xE4tzlichen Parameters oder R\xFCckrufs. Erinnern Sie sich an das "),v=r("a"),b=l("Feinabstimmungs-Tutorial"),w=l(", in der Klasse "),H=r("code"),E=l("TrainingArguments"),P=l(" geben Sie Hyperparameter und zus\xE4tzliche Trainingsoptionen an. Eine dieser Trainingsoptionen beinhaltet die M\xF6glichkeit, ein Modell direkt an den Hub zu pushen. Setzen Sie "),A=r("code"),W=l("push_to_hub=True"),K=l(" in Ihrer "),$=r("code"),R=l("TrainingArguments"),G=l(":"),q=d(),S(X.$$.fragment),Q=d(),B=r("p"),le=l("\xDCbergeben Sie Ihre Trainingsargumente wie gewohnt an "),re=r("code"),ee=l("Trainer"),ie=l(":"),Z=d(),S(J.$$.fragment),j=d(),N=r("p"),oe=l("Nach der Feinabstimmung Ihres Modells rufen Sie "),L=r("code"),se=l("push_to_hub()"),O=l(" auf "),x=r("code"),k=l("Trainer"),F=l(" auf, um das trainierte Modell an den Hub zu \xFCbertragen. Transformers f\xFCgt sogar automatisch Trainings-Hyperparameter, Trainingsergebnisse und Framework-Versionen zu Ihrer Modellkarte hinzu!"),ue=d(),S(Y.$$.fragment),this.h()},l(g){z(h.$$.fragment,g),_=m(g),u=i(g,"P",{});var I=o(u);c=s(I,"Die Weitergabe eines Modells an den Hub ist so einfach wie das Hinzuf\xFCgen eines zus\xE4tzlichen Parameters oder R\xFCckrufs. Erinnern Sie sich an das "),v=i(I,"A",{href:!0});var fe=o(v);b=s(fe,"Feinabstimmungs-Tutorial"),fe.forEach(n),w=s(I,", in der Klasse "),H=i(I,"CODE",{});var he=o(H);E=s(he,"TrainingArguments"),he.forEach(n),P=s(I," geben Sie Hyperparameter und zus\xE4tzliche Trainingsoptionen an. Eine dieser Trainingsoptionen beinhaltet die M\xF6glichkeit, ein Modell direkt an den Hub zu pushen. Setzen Sie "),A=i(I,"CODE",{});var U=o(A);W=s(U,"push_to_hub=True"),U.forEach(n),K=s(I," in Ihrer "),$=i(I,"CODE",{});var _e=o($);R=s(_e,"TrainingArguments"),_e.forEach(n),G=s(I,":"),I.forEach(n),q=m(g),z(X.$$.fragment,g),Q=m(g),B=i(g,"P",{});var te=o(B);le=s(te,"\xDCbergeben Sie Ihre Trainingsargumente wie gewohnt an "),re=i(te,"CODE",{});var _n=o(re);ee=s(_n,"Trainer"),_n.forEach(n),ie=s(te,":"),te.forEach(n),Z=m(g),z(J.$$.fragment,g),j=m(g),N=i(g,"P",{});var de=o(N);oe=s(de,"Nach der Feinabstimmung Ihres Modells rufen Sie "),L=i(de,"CODE",{});var Se=o(L);se=s(Se,"push_to_hub()"),Se.forEach(n),O=s(de," auf "),x=i(de,"CODE",{});var $n=o(x);k=s($n,"Trainer"),$n.forEach(n),F=s(de," auf, um das trainierte Modell an den Hub zu \xFCbertragen. Transformers f\xFCgt sogar automatisch Trainings-Hyperparameter, Trainingsergebnisse und Framework-Versionen zu Ihrer Modellkarte hinzu!"),de.forEach(n),ue=m(g),z(Y.$$.fragment,g),this.h()},h(){p(v,"href","training")},m(g,I){y(h,g,I),a(g,_,I),a(g,u,I),t(u,c),t(u,v),t(v,b),t(u,w),t(u,H),t(H,E),t(u,P),t(u,A),t(A,W),t(u,K),t(u,$),t($,R),t(u,G),a(g,q,I),y(X,g,I),a(g,Q,I),a(g,B,I),t(B,le),t(B,re),t(re,ee),t(B,ie),a(g,Z,I),y(J,g,I),a(g,j,I),a(g,N,I),t(N,oe),t(N,L),t(L,se),t(N,O),t(N,x),t(x,k),t(N,F),a(g,ue,I),y(Y,g,I),ne=!0},p:ct,i(g){ne||(M(h.$$.fragment,g),M(X.$$.fragment,g),M(J.$$.fragment,g),M(Y.$$.fragment,g),ne=!0)},o(g){T(h.$$.fragment,g),T(X.$$.fragment,g),T(J.$$.fragment,g),T(Y.$$.fragment,g),ne=!1},d(g){D(h,g),g&&n(_),g&&n(u),g&&n(q),D(X,g),g&&n(Q),g&&n(B),g&&n(Z),D(J,g),g&&n(j),g&&n(N),g&&n(ue),D(Y,g)}}}function Hs(C){let h,_;return h=new gt({props:{$$slots:{default:[Ps]},$$scope:{ctx:C}}}),{c(){S(h.$$.fragment)},l(u){z(h.$$.fragment,u)},m(u,c){y(h,u,c),_=!0},p(u,c){const v={};c&2&&(v.$$scope={dirty:c,ctx:u}),h.$set(v)},i(u){_||(M(h.$$.fragment,u),_=!0)},o(u){T(h.$$.fragment,u),_=!1},d(u){D(h,u)}}}function Fs(C){let h,_,u,c,v,b,w,H,E,P,A,W,K,$,R,G,q,X,Q,B,le,re,ee,ie,Z,J,j,N,oe,L,se,O,x;return ee=new V({props:{code:`from transformers.keras.callbacks import PushToHubCallback

push_to_hub_callback = PushToHubCallback(
    output_dir="./your_model_save_path", tokenizer=tokenizer, hub_model_id="your-username/my-awesome-model"
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers.keras.callbacks <span class="hljs-keyword">import</span> PushToHubCallback

<span class="hljs-meta">&gt;&gt;&gt; </span>push_to_hub_callback = PushToHubCallback(
<span class="hljs-meta">... </span>    output_dir=<span class="hljs-string">&quot;./your_model_save_path&quot;</span>, tokenizer=tokenizer, hub_model_id=<span class="hljs-string">&quot;your-username/my-awesome-model&quot;</span>
<span class="hljs-meta">... </span>)`}}),O=new V({props:{code:"model.fit(tf_train_dataset, validation_data=tf_validation_dataset, epochs=3, callbacks=push_to_hub_callback)",highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>model.fit(tf_train_dataset, validation_data=tf_validation_dataset, epochs=<span class="hljs-number">3</span>, callbacks=push_to_hub_callback)'}}),{c(){h=r("p"),_=l("Geben Sie ein Modell mit "),u=r("code"),c=l("PushToHubCallback"),v=l(" an den Hub weiter. In der "),b=r("code"),w=l("PushToHubCallback"),H=l(" Funktion, f\xFCgen Sie hinzu:"),E=d(),P=r("ul"),A=r("li"),W=l("Ein Ausgabeverzeichnis f\xFCr Ihr Modell."),K=d(),$=r("li"),R=l("Einen Tokenizer."),G=d(),q=r("li"),X=l("Die "),Q=r("code"),B=l("hub_model_id"),le=l(", die Ihr Hub-Benutzername und Modellname ist."),re=d(),S(ee.$$.fragment),ie=d(),Z=r("p"),J=l("F\xFCgen Sie den Callback zu "),j=r("a"),N=r("code"),oe=l("fit"),L=l(" hinzu, und \u{1F917} Transformers wird das trainierte Modell an den Hub weiterleiten:"),se=d(),S(O.$$.fragment),this.h()},l(k){h=i(k,"P",{});var F=o(h);_=s(F,"Geben Sie ein Modell mit "),u=i(F,"CODE",{});var ue=o(u);c=s(ue,"PushToHubCallback"),ue.forEach(n),v=s(F," an den Hub weiter. In der "),b=i(F,"CODE",{});var Y=o(b);w=s(Y,"PushToHubCallback"),Y.forEach(n),H=s(F," Funktion, f\xFCgen Sie hinzu:"),F.forEach(n),E=m(k),P=i(k,"UL",{});var ne=o(P);A=i(ne,"LI",{});var g=o(A);W=s(g,"Ein Ausgabeverzeichnis f\xFCr Ihr Modell."),g.forEach(n),K=m(ne),$=i(ne,"LI",{});var I=o($);R=s(I,"Einen Tokenizer."),I.forEach(n),G=m(ne),q=i(ne,"LI",{});var fe=o(q);X=s(fe,"Die "),Q=i(fe,"CODE",{});var he=o(Q);B=s(he,"hub_model_id"),he.forEach(n),le=s(fe,", die Ihr Hub-Benutzername und Modellname ist."),fe.forEach(n),ne.forEach(n),re=m(k),z(ee.$$.fragment,k),ie=m(k),Z=i(k,"P",{});var U=o(Z);J=s(U,"F\xFCgen Sie den Callback zu "),j=i(U,"A",{href:!0,rel:!0});var _e=o(j);N=i(_e,"CODE",{});var te=o(N);oe=s(te,"fit"),te.forEach(n),_e.forEach(n),L=s(U," hinzu, und \u{1F917} Transformers wird das trainierte Modell an den Hub weiterleiten:"),U.forEach(n),se=m(k),z(O.$$.fragment,k),this.h()},h(){p(j,"href","https://keras.io/api/models/model_training_apis/"),p(j,"rel","nofollow")},m(k,F){a(k,h,F),t(h,_),t(h,u),t(u,c),t(h,v),t(h,b),t(b,w),t(h,H),a(k,E,F),a(k,P,F),t(P,A),t(A,W),t(P,K),t(P,$),t($,R),t(P,G),t(P,q),t(q,X),t(q,Q),t(Q,B),t(q,le),a(k,re,F),y(ee,k,F),a(k,ie,F),a(k,Z,F),t(Z,J),t(Z,j),t(j,N),t(N,oe),t(Z,L),a(k,se,F),y(O,k,F),x=!0},p:ct,i(k){x||(M(ee.$$.fragment,k),M(O.$$.fragment,k),x=!0)},o(k){T(ee.$$.fragment,k),T(O.$$.fragment,k),x=!1},d(k){k&&n(h),k&&n(E),k&&n(P),k&&n(re),D(ee,k),k&&n(ie),k&&n(Z),k&&n(se),D(O,k)}}}function As(C){let h,_;return h=new gt({props:{$$slots:{default:[Fs]},$$scope:{ctx:C}}}),{c(){S(h.$$.fragment)},l(u){z(h.$$.fragment,u)},m(u,c){y(h,u,c),_=!0},p(u,c){const v={};c&2&&(v.$$scope={dirty:c,ctx:u}),h.$set(v)},i(u){_||(M(h.$$.fragment,u),_=!0)},o(u){T(h.$$.fragment,u),_=!1},d(u){D(h,u)}}}function js(C){let h,_,u,c,v,b,w,H,E,P,A,W,K,$,R,G,q,X,Q,B,le,re,ee,ie,Z,J,j,N,oe,L,se,O,x,k,F,ue,Y,ne,g,I,fe,he,U,_e,te,_n,de,Se,$n,Dr,_t,bn,Ir,$t,Le,bt,vn,Pr,vt,kn,wn,il,kt,$e,ze,Bn,Ue,Hr,On,Fr,wt,ye,Ar,Wn,jr,Rr,Et,Ve,St,Me,Cr,Ke,qn,Br,Or,zt,Ze,yt,me,Wr,Nn,qr,Nr,Je,xr,Gr,Mt,Ye,Tt,be,Te,xn,Xe,Lr,Gn,Ur,Dt,En,Vr,It,De,Kr,Sn,Zr,Jr,Pt,Ie,Ht,ve,Pe,Ln,Qe,Yr,Un,Xr,Ft,He,At,ke,Fe,Vn,en,Qr,nn,ei,Kn,ni,ti,jt,Ae,ri,Zn,ii,li,Rt,zn,si,Ct,tn,Bt,pe,oi,Jn,ai,ui,Yn,fi,hi,Ot,rn,Wt,je,di,Xn,mi,pi,qt,ln,Nt,yn,ci,xt,sn,Gt,Mn,gi,Lt,on,Ut,Re,_i,Qn,$i,bi,Vt,Ce,vi,an,ki,wi,Kt,we,Be,et,un,Ei,nt,Si,Zt,Oe,zi,fn,yi,Mi,Jt,Tn,Dn,ll,Yt,In,Ti,Xt,ae,hn,Di,tt,Ii,Pi,Hi,rt,Fi,Ai,it,ji,Ri,lt,Ci,Qt,ce,Bi,st,Oi,Wi,ot,qi,Ni,er,Pn,Hn,sl,nr,Ee,We,at,dn,xi,ut,Gi,tr,qe,Li,ft,Ui,Vi,rr,Ne,ht,Ki,Zi,mn,Ji,dt,Yi,Xi,ir,ge,Qi,pn,el,nl,cn,tl,rl,lr;return b=new Ge({}),L=new ws({props:{$$slots:{default:[Ss]},$$scope:{ctx:C}}}),F=new Ge({}),Le=new V({props:{code:`model = AutoModel.from_pretrained(
    "julien-c/EsperBERTo-small", revision="v2.0.1"  # tag name, or branch name, or commit hash
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>model = AutoModel.from_pretrained(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;julien-c/EsperBERTo-small&quot;</span>, revision=<span class="hljs-string">&quot;v2.0.1&quot;</span>  <span class="hljs-comment"># tag name, or branch name, or commit hash</span>
<span class="hljs-meta">... </span>)`}}),Ue=new Ge({}),Ve=new V({props:{code:"huggingface-cli login",highlighted:"huggingface-cli login"}}),Ze=new V({props:{code:"pip install huggingface_hub",highlighted:"pip install huggingface_hub"}}),Ye=new V({props:{code:`from huggingface_hub import notebook_login

notebook_login()`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> notebook_login

<span class="hljs-meta">&gt;&gt;&gt; </span>notebook_login()`}}),Xe=new Ge({}),Ie=new gs({props:{pytorch:!0,tensorflow:!0,jax:!0,$$slots:{jax:[Is],tensorflow:[Ts],pytorch:[ys]},$$scope:{ctx:C}}}),Qe=new Ge({}),He=new gs({props:{pytorch:!0,tensorflow:!0,jax:!1,$$slots:{tensorflow:[As],pytorch:[Hs]},$$scope:{ctx:C}}}),en=new Ge({}),tn=new V({props:{code:'pt_model.push_to_hub("my-awesome-model")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model.push_to_hub(<span class="hljs-string">&quot;my-awesome-model&quot;</span>)'}}),rn=new V({props:{code:`from transformers import AutoModel

model = AutoModel.from_pretrained("your_username/my-awesome-model")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModel

<span class="hljs-meta">&gt;&gt;&gt; </span>model = AutoModel.from_pretrained(<span class="hljs-string">&quot;your_username/my-awesome-model&quot;</span>)`}}),ln=new V({props:{code:'pt_model.push_to_hub("my-awesome-org/my-awesome-model")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>pt_model.push_to_hub(<span class="hljs-string">&quot;my-awesome-org/my-awesome-model&quot;</span>)'}}),sn=new V({props:{code:'tokenizer.push_to_hub("my-awesome-model")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tokenizer.push_to_hub(<span class="hljs-string">&quot;my-awesome-model&quot;</span>)'}}),on=new V({props:{code:'tf_model.push_to_hub("my-awesome-model")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>tf_model.push_to_hub(<span class="hljs-string">&quot;my-awesome-model&quot;</span>)'}}),un=new Ge({}),dn=new Ge({}),{c(){h=r("meta"),_=d(),u=r("h1"),c=r("a"),v=r("span"),S(b.$$.fragment),w=d(),H=r("span"),E=l("Ein Modell teilen"),P=d(),A=r("p"),W=l("Die letzten beiden Tutorials haben gezeigt, wie man ein Modell mit PyTorch, Keras und \u{1F917} Accelerate f\xFCr verteilte Setups feinabstimmen kann. Der n\xE4chste Schritt besteht darin, Ihr Modell mit der Community zu teilen! Bei Hugging Face glauben wir an den offenen Austausch von Wissen und Ressourcen, um k\xFCnstliche Intelligenz f\xFCr alle zu demokratisieren. Wir ermutigen Sie, Ihr Modell mit der Community zu teilen, um anderen zu helfen, Zeit und Ressourcen zu sparen."),K=d(),$=r("p"),R=l("In diesem Tutorial lernen Sie zwei Methoden kennen, wie Sie ein trainiertes oder verfeinertes Modell auf dem "),G=r("a"),q=l("Model Hub"),X=l(" teilen k\xF6nnen:"),Q=d(),B=r("ul"),le=r("li"),re=l("Programmgesteuertes \xDCbertragen Ihrer Dateien auf den Hub."),ee=d(),ie=r("li"),Z=l("Ziehen Sie Ihre Dateien per Drag-and-Drop \xFCber die Weboberfl\xE4che in den Hub."),J=d(),j=r("iframe"),oe=d(),S(L.$$.fragment),se=d(),O=r("h2"),x=r("a"),k=r("span"),S(F.$$.fragment),ue=d(),Y=r("span"),ne=l("Repository-Funktionen"),g=d(),I=r("p"),fe=l("Jedes Repository im Model Hub verh\xE4lt sich wie ein typisches GitHub-Repository. Unsere Repositorys bieten Versionierung, Commit-Historie und die M\xF6glichkeit, Unterschiede zu visualisieren."),he=d(),U=r("p"),_e=l("Die integrierte Versionierung des Model Hub basiert auf Git und "),te=r("a"),_n=l("git-lfs"),de=l(". Mit anderen Worten: Sie k\xF6nnen ein Modell als ein Repository behandeln, was eine bessere Zugriffskontrolle und Skalierbarkeit erm\xF6glicht. Die Versionskontrolle erm\xF6glicht "),Se=r("em"),$n=l("Revisionen"),Dr=l(", eine Methode zum Anheften einer bestimmten Version eines Modells mit einem Commit-Hash, Tag oder Branch."),_t=d(),bn=r("p"),Ir=l("Folglich k\xF6nnen Sie eine bestimmte Modellversion mit dem Parameter \u201CRevision\u201D laden:"),$t=d(),S(Le.$$.fragment),bt=d(),vn=r("p"),Pr=l("Dateien lassen sich auch in einem Repository leicht bearbeiten, und Sie k\xF6nnen die Commit-Historie sowie die Unterschiede einsehen:"),vt=d(),kn=r("p"),wn=r("img"),kt=d(),$e=r("h2"),ze=r("a"),Bn=r("span"),S(Ue.$$.fragment),Hr=d(),On=r("span"),Fr=l("Einrichtung"),wt=d(),ye=r("p"),Ar=l("Bevor Sie ein Modell f\xFCr den Hub freigeben, ben\xF6tigen Sie Ihre Hugging Face-Anmeldedaten. Wenn Sie Zugang zu einem Terminal haben, f\xFChren Sie den folgenden Befehl in der virtuellen Umgebung aus, in der \u{1F917} Transformers installiert ist. Dadurch werden Ihre Zugangsdaten in Ihrem Hugging Face-Cache-Ordner (standardm\xE4\xDFig "),Wn=r("code"),jr=l("~/.cache/"),Rr=l(") gespeichert:"),Et=d(),S(Ve.$$.fragment),St=d(),Me=r("p"),Cr=l("Wenn Sie ein Notebook wie Jupyter oder Colaboratory verwenden, stellen Sie sicher, dass Sie die "),Ke=r("a"),qn=r("code"),Br=l("huggingface_hub"),Or=l(" Bibliothek installiert haben. Diese Bibliothek erm\xF6glicht Ihnen die programmatische Interaktion mit dem Hub."),zt=d(),S(Ze.$$.fragment),yt=d(),me=r("p"),Wr=l("Verwenden Sie dann "),Nn=r("code"),qr=l("notebook_login"),Nr=l(", um sich beim Hub anzumelden, und folgen Sie dem Link "),Je=r("a"),xr=l("hier"),Gr=l(", um ein Token f\xFCr die Anmeldung zu generieren:"),Mt=d(),S(Ye.$$.fragment),Tt=d(),be=r("h2"),Te=r("a"),xn=r("span"),S(Xe.$$.fragment),Lr=d(),Gn=r("span"),Ur=l("Ein Modell f\xFCr alle Frameworks konvertieren"),Dt=d(),En=r("p"),Vr=l("Um sicherzustellen, dass Ihr Modell von jemandem verwendet werden kann, der mit einem anderen Framework arbeitet, empfehlen wir Ihnen, Ihr Modell sowohl mit PyTorch- als auch mit TensorFlow-Checkpoints zu konvertieren und hochzuladen. W\xE4hrend Benutzer immer noch in der Lage sind, Ihr Modell von einem anderen Framework zu laden, wenn Sie diesen Schritt \xFCberspringen, wird es langsamer sein, weil \u{1F917} Transformers den Checkpoint on-the-fly konvertieren m\xFCssen."),It=d(),De=r("p"),Kr=l("Die Konvertierung eines Checkpoints f\xFCr ein anderes Framework ist einfach. Stellen Sie sicher, dass Sie PyTorch und TensorFlow installiert haben (siehe "),Sn=r("a"),Zr=l("hier"),Jr=l(" f\xFCr Installationsanweisungen), und finden Sie dann das spezifische Modell f\xFCr Ihre Aufgabe in dem anderen Framework."),Pt=d(),S(Ie.$$.fragment),Ht=d(),ve=r("h2"),Pe=r("a"),Ln=r("span"),S(Qe.$$.fragment),Yr=d(),Un=r("span"),Xr=l("Ein Modell w\xE4hrend des Trainings hochladen"),Ft=d(),S(He.$$.fragment),At=d(),ke=r("h2"),Fe=r("a"),Vn=r("span"),S(en.$$.fragment),Qr=d(),nn=r("span"),ei=l("Verwenden Sie die Funktion "),Kn=r("code"),ni=l("push_to_hub"),ti=l("."),jt=d(),Ae=r("p"),ri=l("Sie k\xF6nnen "),Zn=r("code"),ii=l("push_to_hub"),li=l(" auch direkt f\xFCr Ihr Modell aufrufen, um es in den Hub hochzuladen."),Rt=d(),zn=r("p"),si=l("Geben Sie den Namen Ihres Modells in \u201Cpush_to_hub\u201D an:"),Ct=d(),S(tn.$$.fragment),Bt=d(),pe=r("p"),oi=l("Dadurch wird ein Repository unter Ihrem Benutzernamen mit dem Modellnamen "),Jn=r("code"),ai=l("my-awesome-model"),ui=l(" erstellt. Benutzer k\xF6nnen nun Ihr Modell mit der Funktion "),Yn=r("code"),fi=l("from_pretrained"),hi=l(" laden:"),Ot=d(),S(rn.$$.fragment),Wt=d(),je=r("p"),di=l("Wenn Sie zu einer Organisation geh\xF6ren und Ihr Modell stattdessen unter dem Namen der Organisation pushen wollen, f\xFCgen Sie diesen einfach zur "),Xn=r("code"),mi=l("repo_id"),pi=l(" hinzu:"),qt=d(),S(ln.$$.fragment),Nt=d(),yn=r("p"),ci=l("Die Funktion \u201Cpush_to_hub\u201D kann auch verwendet werden, um andere Dateien zu einem Modell-Repository hinzuzuf\xFCgen. Zum Beispiel kann man einen Tokenizer zu einem Modell-Repository hinzuf\xFCgen:"),xt=d(),S(sn.$$.fragment),Gt=d(),Mn=r("p"),gi=l("Oder vielleicht m\xF6chten Sie die TensorFlow-Version Ihres fein abgestimmten PyTorch-Modells hinzuf\xFCgen:"),Lt=d(),S(on.$$.fragment),Ut=d(),Re=r("p"),_i=l("Wenn Sie nun zu Ihrem Hugging Face-Profil navigieren, sollten Sie Ihr neu erstelltes Modell-Repository sehen. Wenn Sie auf die Registerkarte "),Qn=r("strong"),$i=l("Dateien"),bi=l(" klicken, werden alle Dateien angezeigt, die Sie in das Repository hochgeladen haben."),Vt=d(),Ce=r("p"),vi=l("Weitere Einzelheiten zum Erstellen und Hochladen von Dateien in ein Repository finden Sie in der Hub-Dokumentation "),an=r("a"),ki=l("hier"),wi=l("."),Kt=d(),we=r("h2"),Be=r("a"),et=r("span"),S(un.$$.fragment),Ei=d(),nt=r("span"),Si=l("Hochladen mit der Weboberfl\xE4che"),Zt=d(),Oe=r("p"),zi=l("Benutzer, die einen no-code Ansatz bevorzugen, k\xF6nnen ein Modell \xFCber das Webinterface des Hubs hochladen. Besuchen Sie "),fn=r("a"),yi=l("huggingface.co/new"),Mi=l(" um ein neues Repository zu erstellen:"),Jt=d(),Tn=r("p"),Dn=r("img"),Yt=d(),In=r("p"),Ti=l("F\xFCgen Sie von hier aus einige Informationen \xFCber Ihr Modell hinzu:"),Xt=d(),ae=r("ul"),hn=r("li"),Di=l("W\xE4hlen Sie den "),tt=r("strong"),Ii=l("Besitzer"),Pi=l(" des Repositorys. Dies k\xF6nnen Sie selbst oder eine der Organisationen sein, denen Sie angeh\xF6ren."),Hi=d(),rt=r("li"),Fi=l("W\xE4hlen Sie einen Namen f\xFCr Ihr Modell, der auch der Name des Repositorys sein wird."),Ai=d(),it=r("li"),ji=l("W\xE4hlen Sie, ob Ihr Modell \xF6ffentlich oder privat ist."),Ri=d(),lt=r("li"),Ci=l("Geben Sie die Lizenzverwendung f\xFCr Ihr Modell an."),Qt=d(),ce=r("p"),Bi=l("Klicken Sie nun auf die Registerkarte "),st=r("strong"),Oi=l("Dateien"),Wi=l(" und klicken Sie auf die Schaltfl\xE4che "),ot=r("strong"),qi=l("Datei hinzuf\xFCgen"),Ni=l(", um eine neue Datei in Ihr Repository hochzuladen. Ziehen Sie dann eine Datei per Drag-and-Drop hoch und f\xFCgen Sie eine \xDCbergabemeldung hinzu."),er=d(),Pn=r("p"),Hn=r("img"),nr=d(),Ee=r("h2"),We=r("a"),at=r("span"),S(dn.$$.fragment),xi=d(),ut=r("span"),Gi=l("Hinzuf\xFCgen einer Modellkarte"),tr=d(),qe=r("p"),Li=l("Um sicherzustellen, dass die Benutzer die F\xE4higkeiten, Grenzen, m\xF6glichen Verzerrungen und ethischen Aspekte Ihres Modells verstehen, f\xFCgen Sie bitte eine Modellkarte zu Ihrem Repository hinzu. Die Modellkarte wird in der Datei "),ft=r("code"),Ui=l("README.md"),Vi=l(" definiert. Sie k\xF6nnen eine Modellkarte hinzuf\xFCgen, indem Sie:"),rr=d(),Ne=r("ul"),ht=r("li"),Ki=l("Manuelles Erstellen und Hochladen einer \u201CREADME.md\u201D-Datei."),Zi=d(),mn=r("li"),Ji=l("Klicken Sie auf die Schaltfl\xE4che "),dt=r("strong"),Yi=l("Modellkarte bearbeiten"),Xi=l(" in Ihrem Modell-Repository."),ir=d(),ge=r("p"),Qi=l("Werfen Sie einen Blick auf die DistilBert "),pn=r("a"),el=l("model card"),nl=l(" als gutes Beispiel f\xFCr die Art von Informationen, die eine Modellkarte enthalten sollte. Weitere Details \xFCber andere Optionen, die Sie in der Datei \u201CREADME.md\u201D einstellen k\xF6nnen, wie z.B. den Kohlenstoff-Fu\xDFabdruck eines Modells oder Beispiele f\xFCr Widgets, finden Sie in der Dokumentation "),cn=r("a"),tl=l("hier"),rl=l("."),this.h()},l(e){const f=vs('[data-svelte="svelte-1phssyn"]',document.head);h=i(f,"META",{name:!0,content:!0}),f.forEach(n),_=m(e),u=i(e,"H1",{class:!0});var gn=o(u);c=i(gn,"A",{id:!0,class:!0,href:!0});var mt=o(c);v=i(mt,"SPAN",{});var pt=o(v);z(b.$$.fragment,pt),pt.forEach(n),mt.forEach(n),w=m(gn),H=i(gn,"SPAN",{});var ol=o(H);E=s(ol,"Ein Modell teilen"),ol.forEach(n),gn.forEach(n),P=m(e),A=i(e,"P",{});var al=o(A);W=s(al,"Die letzten beiden Tutorials haben gezeigt, wie man ein Modell mit PyTorch, Keras und \u{1F917} Accelerate f\xFCr verteilte Setups feinabstimmen kann. Der n\xE4chste Schritt besteht darin, Ihr Modell mit der Community zu teilen! Bei Hugging Face glauben wir an den offenen Austausch von Wissen und Ressourcen, um k\xFCnstliche Intelligenz f\xFCr alle zu demokratisieren. Wir ermutigen Sie, Ihr Modell mit der Community zu teilen, um anderen zu helfen, Zeit und Ressourcen zu sparen."),al.forEach(n),K=m(e),$=i(e,"P",{});var sr=o($);R=s(sr,"In diesem Tutorial lernen Sie zwei Methoden kennen, wie Sie ein trainiertes oder verfeinertes Modell auf dem "),G=i(sr,"A",{href:!0,rel:!0});var ul=o(G);q=s(ul,"Model Hub"),ul.forEach(n),X=s(sr," teilen k\xF6nnen:"),sr.forEach(n),Q=m(e),B=i(e,"UL",{});var or=o(B);le=i(or,"LI",{});var fl=o(le);re=s(fl,"Programmgesteuertes \xDCbertragen Ihrer Dateien auf den Hub."),fl.forEach(n),ee=m(or),ie=i(or,"LI",{});var hl=o(ie);Z=s(hl,"Ziehen Sie Ihre Dateien per Drag-and-Drop \xFCber die Weboberfl\xE4che in den Hub."),hl.forEach(n),or.forEach(n),J=m(e),j=i(e,"IFRAME",{width:!0,height:!0,src:!0,title:!0,frameborder:!0,allow:!0}),o(j).forEach(n),oe=m(e),z(L.$$.fragment,e),se=m(e),O=i(e,"H2",{class:!0});var ar=o(O);x=i(ar,"A",{id:!0,class:!0,href:!0});var dl=o(x);k=i(dl,"SPAN",{});var ml=o(k);z(F.$$.fragment,ml),ml.forEach(n),dl.forEach(n),ue=m(ar),Y=i(ar,"SPAN",{});var pl=o(Y);ne=s(pl,"Repository-Funktionen"),pl.forEach(n),ar.forEach(n),g=m(e),I=i(e,"P",{});var cl=o(I);fe=s(cl,"Jedes Repository im Model Hub verh\xE4lt sich wie ein typisches GitHub-Repository. Unsere Repositorys bieten Versionierung, Commit-Historie und die M\xF6glichkeit, Unterschiede zu visualisieren."),cl.forEach(n),he=m(e),U=i(e,"P",{});var Fn=o(U);_e=s(Fn,"Die integrierte Versionierung des Model Hub basiert auf Git und "),te=i(Fn,"A",{href:!0,rel:!0});var gl=o(te);_n=s(gl,"git-lfs"),gl.forEach(n),de=s(Fn,". Mit anderen Worten: Sie k\xF6nnen ein Modell als ein Repository behandeln, was eine bessere Zugriffskontrolle und Skalierbarkeit erm\xF6glicht. Die Versionskontrolle erm\xF6glicht "),Se=i(Fn,"EM",{});var _l=o(Se);$n=s(_l,"Revisionen"),_l.forEach(n),Dr=s(Fn,", eine Methode zum Anheften einer bestimmten Version eines Modells mit einem Commit-Hash, Tag oder Branch."),Fn.forEach(n),_t=m(e),bn=i(e,"P",{});var $l=o(bn);Ir=s($l,"Folglich k\xF6nnen Sie eine bestimmte Modellversion mit dem Parameter \u201CRevision\u201D laden:"),$l.forEach(n),$t=m(e),z(Le.$$.fragment,e),bt=m(e),vn=i(e,"P",{});var bl=o(vn);Pr=s(bl,"Dateien lassen sich auch in einem Repository leicht bearbeiten, und Sie k\xF6nnen die Commit-Historie sowie die Unterschiede einsehen:"),bl.forEach(n),vt=m(e),kn=i(e,"P",{});var vl=o(kn);wn=i(vl,"IMG",{src:!0,alt:!0}),vl.forEach(n),kt=m(e),$e=i(e,"H2",{class:!0});var ur=o($e);ze=i(ur,"A",{id:!0,class:!0,href:!0});var kl=o(ze);Bn=i(kl,"SPAN",{});var wl=o(Bn);z(Ue.$$.fragment,wl),wl.forEach(n),kl.forEach(n),Hr=m(ur),On=i(ur,"SPAN",{});var El=o(On);Fr=s(El,"Einrichtung"),El.forEach(n),ur.forEach(n),wt=m(e),ye=i(e,"P",{});var fr=o(ye);Ar=s(fr,"Bevor Sie ein Modell f\xFCr den Hub freigeben, ben\xF6tigen Sie Ihre Hugging Face-Anmeldedaten. Wenn Sie Zugang zu einem Terminal haben, f\xFChren Sie den folgenden Befehl in der virtuellen Umgebung aus, in der \u{1F917} Transformers installiert ist. Dadurch werden Ihre Zugangsdaten in Ihrem Hugging Face-Cache-Ordner (standardm\xE4\xDFig "),Wn=i(fr,"CODE",{});var Sl=o(Wn);jr=s(Sl,"~/.cache/"),Sl.forEach(n),Rr=s(fr,") gespeichert:"),fr.forEach(n),Et=m(e),z(Ve.$$.fragment,e),St=m(e),Me=i(e,"P",{});var hr=o(Me);Cr=s(hr,"Wenn Sie ein Notebook wie Jupyter oder Colaboratory verwenden, stellen Sie sicher, dass Sie die "),Ke=i(hr,"A",{href:!0,rel:!0});var zl=o(Ke);qn=i(zl,"CODE",{});var yl=o(qn);Br=s(yl,"huggingface_hub"),yl.forEach(n),zl.forEach(n),Or=s(hr," Bibliothek installiert haben. Diese Bibliothek erm\xF6glicht Ihnen die programmatische Interaktion mit dem Hub."),hr.forEach(n),zt=m(e),z(Ze.$$.fragment,e),yt=m(e),me=i(e,"P",{});var An=o(me);Wr=s(An,"Verwenden Sie dann "),Nn=i(An,"CODE",{});var Ml=o(Nn);qr=s(Ml,"notebook_login"),Ml.forEach(n),Nr=s(An,", um sich beim Hub anzumelden, und folgen Sie dem Link "),Je=i(An,"A",{href:!0,rel:!0});var Tl=o(Je);xr=s(Tl,"hier"),Tl.forEach(n),Gr=s(An,", um ein Token f\xFCr die Anmeldung zu generieren:"),An.forEach(n),Mt=m(e),z(Ye.$$.fragment,e),Tt=m(e),be=i(e,"H2",{class:!0});var dr=o(be);Te=i(dr,"A",{id:!0,class:!0,href:!0});var Dl=o(Te);xn=i(Dl,"SPAN",{});var Il=o(xn);z(Xe.$$.fragment,Il),Il.forEach(n),Dl.forEach(n),Lr=m(dr),Gn=i(dr,"SPAN",{});var Pl=o(Gn);Ur=s(Pl,"Ein Modell f\xFCr alle Frameworks konvertieren"),Pl.forEach(n),dr.forEach(n),Dt=m(e),En=i(e,"P",{});var Hl=o(En);Vr=s(Hl,"Um sicherzustellen, dass Ihr Modell von jemandem verwendet werden kann, der mit einem anderen Framework arbeitet, empfehlen wir Ihnen, Ihr Modell sowohl mit PyTorch- als auch mit TensorFlow-Checkpoints zu konvertieren und hochzuladen. W\xE4hrend Benutzer immer noch in der Lage sind, Ihr Modell von einem anderen Framework zu laden, wenn Sie diesen Schritt \xFCberspringen, wird es langsamer sein, weil \u{1F917} Transformers den Checkpoint on-the-fly konvertieren m\xFCssen."),Hl.forEach(n),It=m(e),De=i(e,"P",{});var mr=o(De);Kr=s(mr,"Die Konvertierung eines Checkpoints f\xFCr ein anderes Framework ist einfach. Stellen Sie sicher, dass Sie PyTorch und TensorFlow installiert haben (siehe "),Sn=i(mr,"A",{href:!0});var Fl=o(Sn);Zr=s(Fl,"hier"),Fl.forEach(n),Jr=s(mr," f\xFCr Installationsanweisungen), und finden Sie dann das spezifische Modell f\xFCr Ihre Aufgabe in dem anderen Framework."),mr.forEach(n),Pt=m(e),z(Ie.$$.fragment,e),Ht=m(e),ve=i(e,"H2",{class:!0});var pr=o(ve);Pe=i(pr,"A",{id:!0,class:!0,href:!0});var Al=o(Pe);Ln=i(Al,"SPAN",{});var jl=o(Ln);z(Qe.$$.fragment,jl),jl.forEach(n),Al.forEach(n),Yr=m(pr),Un=i(pr,"SPAN",{});var Rl=o(Un);Xr=s(Rl,"Ein Modell w\xE4hrend des Trainings hochladen"),Rl.forEach(n),pr.forEach(n),Ft=m(e),z(He.$$.fragment,e),At=m(e),ke=i(e,"H2",{class:!0});var cr=o(ke);Fe=i(cr,"A",{id:!0,class:!0,href:!0});var Cl=o(Fe);Vn=i(Cl,"SPAN",{});var Bl=o(Vn);z(en.$$.fragment,Bl),Bl.forEach(n),Cl.forEach(n),Qr=m(cr),nn=i(cr,"SPAN",{});var gr=o(nn);ei=s(gr,"Verwenden Sie die Funktion "),Kn=i(gr,"CODE",{});var Ol=o(Kn);ni=s(Ol,"push_to_hub"),Ol.forEach(n),ti=s(gr,"."),gr.forEach(n),cr.forEach(n),jt=m(e),Ae=i(e,"P",{});var _r=o(Ae);ri=s(_r,"Sie k\xF6nnen "),Zn=i(_r,"CODE",{});var Wl=o(Zn);ii=s(Wl,"push_to_hub"),Wl.forEach(n),li=s(_r," auch direkt f\xFCr Ihr Modell aufrufen, um es in den Hub hochzuladen."),_r.forEach(n),Rt=m(e),zn=i(e,"P",{});var ql=o(zn);si=s(ql,"Geben Sie den Namen Ihres Modells in \u201Cpush_to_hub\u201D an:"),ql.forEach(n),Ct=m(e),z(tn.$$.fragment,e),Bt=m(e),pe=i(e,"P",{});var jn=o(pe);oi=s(jn,"Dadurch wird ein Repository unter Ihrem Benutzernamen mit dem Modellnamen "),Jn=i(jn,"CODE",{});var Nl=o(Jn);ai=s(Nl,"my-awesome-model"),Nl.forEach(n),ui=s(jn," erstellt. Benutzer k\xF6nnen nun Ihr Modell mit der Funktion "),Yn=i(jn,"CODE",{});var xl=o(Yn);fi=s(xl,"from_pretrained"),xl.forEach(n),hi=s(jn," laden:"),jn.forEach(n),Ot=m(e),z(rn.$$.fragment,e),Wt=m(e),je=i(e,"P",{});var $r=o(je);di=s($r,"Wenn Sie zu einer Organisation geh\xF6ren und Ihr Modell stattdessen unter dem Namen der Organisation pushen wollen, f\xFCgen Sie diesen einfach zur "),Xn=i($r,"CODE",{});var Gl=o(Xn);mi=s(Gl,"repo_id"),Gl.forEach(n),pi=s($r," hinzu:"),$r.forEach(n),qt=m(e),z(ln.$$.fragment,e),Nt=m(e),yn=i(e,"P",{});var Ll=o(yn);ci=s(Ll,"Die Funktion \u201Cpush_to_hub\u201D kann auch verwendet werden, um andere Dateien zu einem Modell-Repository hinzuzuf\xFCgen. Zum Beispiel kann man einen Tokenizer zu einem Modell-Repository hinzuf\xFCgen:"),Ll.forEach(n),xt=m(e),z(sn.$$.fragment,e),Gt=m(e),Mn=i(e,"P",{});var Ul=o(Mn);gi=s(Ul,"Oder vielleicht m\xF6chten Sie die TensorFlow-Version Ihres fein abgestimmten PyTorch-Modells hinzuf\xFCgen:"),Ul.forEach(n),Lt=m(e),z(on.$$.fragment,e),Ut=m(e),Re=i(e,"P",{});var br=o(Re);_i=s(br,"Wenn Sie nun zu Ihrem Hugging Face-Profil navigieren, sollten Sie Ihr neu erstelltes Modell-Repository sehen. Wenn Sie auf die Registerkarte "),Qn=i(br,"STRONG",{});var Vl=o(Qn);$i=s(Vl,"Dateien"),Vl.forEach(n),bi=s(br," klicken, werden alle Dateien angezeigt, die Sie in das Repository hochgeladen haben."),br.forEach(n),Vt=m(e),Ce=i(e,"P",{});var vr=o(Ce);vi=s(vr,"Weitere Einzelheiten zum Erstellen und Hochladen von Dateien in ein Repository finden Sie in der Hub-Dokumentation "),an=i(vr,"A",{href:!0,rel:!0});var Kl=o(an);ki=s(Kl,"hier"),Kl.forEach(n),wi=s(vr,"."),vr.forEach(n),Kt=m(e),we=i(e,"H2",{class:!0});var kr=o(we);Be=i(kr,"A",{id:!0,class:!0,href:!0});var Zl=o(Be);et=i(Zl,"SPAN",{});var Jl=o(et);z(un.$$.fragment,Jl),Jl.forEach(n),Zl.forEach(n),Ei=m(kr),nt=i(kr,"SPAN",{});var Yl=o(nt);Si=s(Yl,"Hochladen mit der Weboberfl\xE4che"),Yl.forEach(n),kr.forEach(n),Zt=m(e),Oe=i(e,"P",{});var wr=o(Oe);zi=s(wr,"Benutzer, die einen no-code Ansatz bevorzugen, k\xF6nnen ein Modell \xFCber das Webinterface des Hubs hochladen. Besuchen Sie "),fn=i(wr,"A",{href:!0,rel:!0});var Xl=o(fn);yi=s(Xl,"huggingface.co/new"),Xl.forEach(n),Mi=s(wr," um ein neues Repository zu erstellen:"),wr.forEach(n),Jt=m(e),Tn=i(e,"P",{});var Ql=o(Tn);Dn=i(Ql,"IMG",{src:!0,alt:!0}),Ql.forEach(n),Yt=m(e),In=i(e,"P",{});var es=o(In);Ti=s(es,"F\xFCgen Sie von hier aus einige Informationen \xFCber Ihr Modell hinzu:"),es.forEach(n),Xt=m(e),ae=i(e,"UL",{});var xe=o(ae);hn=i(xe,"LI",{});var Er=o(hn);Di=s(Er,"W\xE4hlen Sie den "),tt=i(Er,"STRONG",{});var ns=o(tt);Ii=s(ns,"Besitzer"),ns.forEach(n),Pi=s(Er," des Repositorys. Dies k\xF6nnen Sie selbst oder eine der Organisationen sein, denen Sie angeh\xF6ren."),Er.forEach(n),Hi=m(xe),rt=i(xe,"LI",{});var ts=o(rt);Fi=s(ts,"W\xE4hlen Sie einen Namen f\xFCr Ihr Modell, der auch der Name des Repositorys sein wird."),ts.forEach(n),Ai=m(xe),it=i(xe,"LI",{});var rs=o(it);ji=s(rs,"W\xE4hlen Sie, ob Ihr Modell \xF6ffentlich oder privat ist."),rs.forEach(n),Ri=m(xe),lt=i(xe,"LI",{});var is=o(lt);Ci=s(is,"Geben Sie die Lizenzverwendung f\xFCr Ihr Modell an."),is.forEach(n),xe.forEach(n),Qt=m(e),ce=i(e,"P",{});var Rn=o(ce);Bi=s(Rn,"Klicken Sie nun auf die Registerkarte "),st=i(Rn,"STRONG",{});var ls=o(st);Oi=s(ls,"Dateien"),ls.forEach(n),Wi=s(Rn," und klicken Sie auf die Schaltfl\xE4che "),ot=i(Rn,"STRONG",{});var ss=o(ot);qi=s(ss,"Datei hinzuf\xFCgen"),ss.forEach(n),Ni=s(Rn,", um eine neue Datei in Ihr Repository hochzuladen. Ziehen Sie dann eine Datei per Drag-and-Drop hoch und f\xFCgen Sie eine \xDCbergabemeldung hinzu."),Rn.forEach(n),er=m(e),Pn=i(e,"P",{});var os=o(Pn);Hn=i(os,"IMG",{src:!0,alt:!0}),os.forEach(n),nr=m(e),Ee=i(e,"H2",{class:!0});var Sr=o(Ee);We=i(Sr,"A",{id:!0,class:!0,href:!0});var as=o(We);at=i(as,"SPAN",{});var us=o(at);z(dn.$$.fragment,us),us.forEach(n),as.forEach(n),xi=m(Sr),ut=i(Sr,"SPAN",{});var fs=o(ut);Gi=s(fs,"Hinzuf\xFCgen einer Modellkarte"),fs.forEach(n),Sr.forEach(n),tr=m(e),qe=i(e,"P",{});var zr=o(qe);Li=s(zr,"Um sicherzustellen, dass die Benutzer die F\xE4higkeiten, Grenzen, m\xF6glichen Verzerrungen und ethischen Aspekte Ihres Modells verstehen, f\xFCgen Sie bitte eine Modellkarte zu Ihrem Repository hinzu. Die Modellkarte wird in der Datei "),ft=i(zr,"CODE",{});var hs=o(ft);Ui=s(hs,"README.md"),hs.forEach(n),Vi=s(zr," definiert. Sie k\xF6nnen eine Modellkarte hinzuf\xFCgen, indem Sie:"),zr.forEach(n),rr=m(e),Ne=i(e,"UL",{});var yr=o(Ne);ht=i(yr,"LI",{});var ds=o(ht);Ki=s(ds,"Manuelles Erstellen und Hochladen einer \u201CREADME.md\u201D-Datei."),ds.forEach(n),Zi=m(yr),mn=i(yr,"LI",{});var Mr=o(mn);Ji=s(Mr,"Klicken Sie auf die Schaltfl\xE4che "),dt=i(Mr,"STRONG",{});var ms=o(dt);Yi=s(ms,"Modellkarte bearbeiten"),ms.forEach(n),Xi=s(Mr," in Ihrem Modell-Repository."),Mr.forEach(n),yr.forEach(n),ir=m(e),ge=i(e,"P",{});var Cn=o(ge);Qi=s(Cn,"Werfen Sie einen Blick auf die DistilBert "),pn=i(Cn,"A",{href:!0,rel:!0});var ps=o(pn);el=s(ps,"model card"),ps.forEach(n),nl=s(Cn," als gutes Beispiel f\xFCr die Art von Informationen, die eine Modellkarte enthalten sollte. Weitere Details \xFCber andere Optionen, die Sie in der Datei \u201CREADME.md\u201D einstellen k\xF6nnen, wie z.B. den Kohlenstoff-Fu\xDFabdruck eines Modells oder Beispiele f\xFCr Widgets, finden Sie in der Dokumentation "),cn=i(Cn,"A",{href:!0,rel:!0});var cs=o(cn);tl=s(cs,"hier"),cs.forEach(n),rl=s(Cn,"."),Cn.forEach(n),this.h()},h(){p(h,"name","hf:doc:metadata"),p(h,"content",JSON.stringify(Rs)),p(c,"id","ein-modell-teilen"),p(c,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(c,"href","#ein-modell-teilen"),p(u,"class","relative group"),p(G,"href","https://huggingface.co/models"),p(G,"rel","nofollow"),p(j,"width","560"),p(j,"height","315"),Tr(j.src,N="https://www.youtube.com/embed/XvSGPZFEjDY")||p(j,"src",N),p(j,"title","YouTube video player"),p(j,"frameborder","0"),p(j,"allow",`accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope;
picture-in-picture`),j.allowFullscreen=!0,p(x,"id","repositoryfunktionen"),p(x,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(x,"href","#repositoryfunktionen"),p(O,"class","relative group"),p(te,"href","https://git-lfs.github.com/"),p(te,"rel","nofollow"),Tr(wn.src,il="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/vis_diff.png")||p(wn,"src",il),p(wn,"alt","vis_diff"),p(ze,"id","einrichtung"),p(ze,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(ze,"href","#einrichtung"),p($e,"class","relative group"),p(Ke,"href","https://huggingface.co/docs/hub/adding-a-library"),p(Ke,"rel","nofollow"),p(Je,"href","https://huggingface.co/settings/token"),p(Je,"rel","nofollow"),p(Te,"id","ein-modell-fr-alle-frameworks-konvertieren"),p(Te,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(Te,"href","#ein-modell-fr-alle-frameworks-konvertieren"),p(be,"class","relative group"),p(Sn,"href","installation"),p(Pe,"id","ein-modell-whrend-des-trainings-hochladen"),p(Pe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(Pe,"href","#ein-modell-whrend-des-trainings-hochladen"),p(ve,"class","relative group"),p(Fe,"id","verwenden-sie-die-funktion-pushtohub"),p(Fe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(Fe,"href","#verwenden-sie-die-funktion-pushtohub"),p(ke,"class","relative group"),p(an,"href","https://huggingface.co/docs/hub/how-to-upstream"),p(an,"rel","nofollow"),p(Be,"id","hochladen-mit-der-weboberflche"),p(Be,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(Be,"href","#hochladen-mit-der-weboberflche"),p(we,"class","relative group"),p(fn,"href","https://huggingface.co/new"),p(fn,"rel","nofollow"),Tr(Dn.src,ll="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/new_model_repo.png")||p(Dn,"src",ll),p(Dn,"alt","new_model_repo"),Tr(Hn.src,sl="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/upload_file.png")||p(Hn,"src",sl),p(Hn,"alt","upload_file"),p(We,"id","hinzufgen-einer-modellkarte"),p(We,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(We,"href","#hinzufgen-einer-modellkarte"),p(Ee,"class","relative group"),p(pn,"href","https://huggingface.co/distilbert-base-uncased"),p(pn,"rel","nofollow"),p(cn,"href","https://huggingface.co/docs/hub/models-cards"),p(cn,"rel","nofollow")},m(e,f){t(document.head,h),a(e,_,f),a(e,u,f),t(u,c),t(c,v),y(b,v,null),t(u,w),t(u,H),t(H,E),a(e,P,f),a(e,A,f),t(A,W),a(e,K,f),a(e,$,f),t($,R),t($,G),t(G,q),t($,X),a(e,Q,f),a(e,B,f),t(B,le),t(le,re),t(B,ee),t(B,ie),t(ie,Z),a(e,J,f),a(e,j,f),a(e,oe,f),y(L,e,f),a(e,se,f),a(e,O,f),t(O,x),t(x,k),y(F,k,null),t(O,ue),t(O,Y),t(Y,ne),a(e,g,f),a(e,I,f),t(I,fe),a(e,he,f),a(e,U,f),t(U,_e),t(U,te),t(te,_n),t(U,de),t(U,Se),t(Se,$n),t(U,Dr),a(e,_t,f),a(e,bn,f),t(bn,Ir),a(e,$t,f),y(Le,e,f),a(e,bt,f),a(e,vn,f),t(vn,Pr),a(e,vt,f),a(e,kn,f),t(kn,wn),a(e,kt,f),a(e,$e,f),t($e,ze),t(ze,Bn),y(Ue,Bn,null),t($e,Hr),t($e,On),t(On,Fr),a(e,wt,f),a(e,ye,f),t(ye,Ar),t(ye,Wn),t(Wn,jr),t(ye,Rr),a(e,Et,f),y(Ve,e,f),a(e,St,f),a(e,Me,f),t(Me,Cr),t(Me,Ke),t(Ke,qn),t(qn,Br),t(Me,Or),a(e,zt,f),y(Ze,e,f),a(e,yt,f),a(e,me,f),t(me,Wr),t(me,Nn),t(Nn,qr),t(me,Nr),t(me,Je),t(Je,xr),t(me,Gr),a(e,Mt,f),y(Ye,e,f),a(e,Tt,f),a(e,be,f),t(be,Te),t(Te,xn),y(Xe,xn,null),t(be,Lr),t(be,Gn),t(Gn,Ur),a(e,Dt,f),a(e,En,f),t(En,Vr),a(e,It,f),a(e,De,f),t(De,Kr),t(De,Sn),t(Sn,Zr),t(De,Jr),a(e,Pt,f),y(Ie,e,f),a(e,Ht,f),a(e,ve,f),t(ve,Pe),t(Pe,Ln),y(Qe,Ln,null),t(ve,Yr),t(ve,Un),t(Un,Xr),a(e,Ft,f),y(He,e,f),a(e,At,f),a(e,ke,f),t(ke,Fe),t(Fe,Vn),y(en,Vn,null),t(ke,Qr),t(ke,nn),t(nn,ei),t(nn,Kn),t(Kn,ni),t(nn,ti),a(e,jt,f),a(e,Ae,f),t(Ae,ri),t(Ae,Zn),t(Zn,ii),t(Ae,li),a(e,Rt,f),a(e,zn,f),t(zn,si),a(e,Ct,f),y(tn,e,f),a(e,Bt,f),a(e,pe,f),t(pe,oi),t(pe,Jn),t(Jn,ai),t(pe,ui),t(pe,Yn),t(Yn,fi),t(pe,hi),a(e,Ot,f),y(rn,e,f),a(e,Wt,f),a(e,je,f),t(je,di),t(je,Xn),t(Xn,mi),t(je,pi),a(e,qt,f),y(ln,e,f),a(e,Nt,f),a(e,yn,f),t(yn,ci),a(e,xt,f),y(sn,e,f),a(e,Gt,f),a(e,Mn,f),t(Mn,gi),a(e,Lt,f),y(on,e,f),a(e,Ut,f),a(e,Re,f),t(Re,_i),t(Re,Qn),t(Qn,$i),t(Re,bi),a(e,Vt,f),a(e,Ce,f),t(Ce,vi),t(Ce,an),t(an,ki),t(Ce,wi),a(e,Kt,f),a(e,we,f),t(we,Be),t(Be,et),y(un,et,null),t(we,Ei),t(we,nt),t(nt,Si),a(e,Zt,f),a(e,Oe,f),t(Oe,zi),t(Oe,fn),t(fn,yi),t(Oe,Mi),a(e,Jt,f),a(e,Tn,f),t(Tn,Dn),a(e,Yt,f),a(e,In,f),t(In,Ti),a(e,Xt,f),a(e,ae,f),t(ae,hn),t(hn,Di),t(hn,tt),t(tt,Ii),t(hn,Pi),t(ae,Hi),t(ae,rt),t(rt,Fi),t(ae,Ai),t(ae,it),t(it,ji),t(ae,Ri),t(ae,lt),t(lt,Ci),a(e,Qt,f),a(e,ce,f),t(ce,Bi),t(ce,st),t(st,Oi),t(ce,Wi),t(ce,ot),t(ot,qi),t(ce,Ni),a(e,er,f),a(e,Pn,f),t(Pn,Hn),a(e,nr,f),a(e,Ee,f),t(Ee,We),t(We,at),y(dn,at,null),t(Ee,xi),t(Ee,ut),t(ut,Gi),a(e,tr,f),a(e,qe,f),t(qe,Li),t(qe,ft),t(ft,Ui),t(qe,Vi),a(e,rr,f),a(e,Ne,f),t(Ne,ht),t(ht,Ki),t(Ne,Zi),t(Ne,mn),t(mn,Ji),t(mn,dt),t(dt,Yi),t(mn,Xi),a(e,ir,f),a(e,ge,f),t(ge,Qi),t(ge,pn),t(pn,el),t(ge,nl),t(ge,cn),t(cn,tl),t(ge,rl),lr=!0},p(e,[f]){const gn={};f&2&&(gn.$$scope={dirty:f,ctx:e}),L.$set(gn);const mt={};f&2&&(mt.$$scope={dirty:f,ctx:e}),Ie.$set(mt);const pt={};f&2&&(pt.$$scope={dirty:f,ctx:e}),He.$set(pt)},i(e){lr||(M(b.$$.fragment,e),M(L.$$.fragment,e),M(F.$$.fragment,e),M(Le.$$.fragment,e),M(Ue.$$.fragment,e),M(Ve.$$.fragment,e),M(Ze.$$.fragment,e),M(Ye.$$.fragment,e),M(Xe.$$.fragment,e),M(Ie.$$.fragment,e),M(Qe.$$.fragment,e),M(He.$$.fragment,e),M(en.$$.fragment,e),M(tn.$$.fragment,e),M(rn.$$.fragment,e),M(ln.$$.fragment,e),M(sn.$$.fragment,e),M(on.$$.fragment,e),M(un.$$.fragment,e),M(dn.$$.fragment,e),lr=!0)},o(e){T(b.$$.fragment,e),T(L.$$.fragment,e),T(F.$$.fragment,e),T(Le.$$.fragment,e),T(Ue.$$.fragment,e),T(Ve.$$.fragment,e),T(Ze.$$.fragment,e),T(Ye.$$.fragment,e),T(Xe.$$.fragment,e),T(Ie.$$.fragment,e),T(Qe.$$.fragment,e),T(He.$$.fragment,e),T(en.$$.fragment,e),T(tn.$$.fragment,e),T(rn.$$.fragment,e),T(ln.$$.fragment,e),T(sn.$$.fragment,e),T(on.$$.fragment,e),T(un.$$.fragment,e),T(dn.$$.fragment,e),lr=!1},d(e){n(h),e&&n(_),e&&n(u),D(b),e&&n(P),e&&n(A),e&&n(K),e&&n($),e&&n(Q),e&&n(B),e&&n(J),e&&n(j),e&&n(oe),D(L,e),e&&n(se),e&&n(O),D(F),e&&n(g),e&&n(I),e&&n(he),e&&n(U),e&&n(_t),e&&n(bn),e&&n($t),D(Le,e),e&&n(bt),e&&n(vn),e&&n(vt),e&&n(kn),e&&n(kt),e&&n($e),D(Ue),e&&n(wt),e&&n(ye),e&&n(Et),D(Ve,e),e&&n(St),e&&n(Me),e&&n(zt),D(Ze,e),e&&n(yt),e&&n(me),e&&n(Mt),D(Ye,e),e&&n(Tt),e&&n(be),D(Xe),e&&n(Dt),e&&n(En),e&&n(It),e&&n(De),e&&n(Pt),D(Ie,e),e&&n(Ht),e&&n(ve),D(Qe),e&&n(Ft),D(He,e),e&&n(At),e&&n(ke),D(en),e&&n(jt),e&&n(Ae),e&&n(Rt),e&&n(zn),e&&n(Ct),D(tn,e),e&&n(Bt),e&&n(pe),e&&n(Ot),D(rn,e),e&&n(Wt),e&&n(je),e&&n(qt),D(ln,e),e&&n(Nt),e&&n(yn),e&&n(xt),D(sn,e),e&&n(Gt),e&&n(Mn),e&&n(Lt),D(on,e),e&&n(Ut),e&&n(Re),e&&n(Vt),e&&n(Ce),e&&n(Kt),e&&n(we),D(un),e&&n(Zt),e&&n(Oe),e&&n(Jt),e&&n(Tn),e&&n(Yt),e&&n(In),e&&n(Xt),e&&n(ae),e&&n(Qt),e&&n(ce),e&&n(er),e&&n(Pn),e&&n(nr),e&&n(Ee),D(dn),e&&n(tr),e&&n(qe),e&&n(rr),e&&n(Ne),e&&n(ir),e&&n(ge)}}}const Rs={local:"ein-modell-teilen",sections:[{local:"repositoryfunktionen",title:"Repository-Funktionen"},{local:"einrichtung",title:"Einrichtung"},{local:"ein-modell-fr-alle-frameworks-konvertieren",title:"Ein Modell f\xFCr alle Frameworks konvertieren"},{local:"ein-modell-whrend-des-trainings-hochladen",title:"Ein Modell w\xE4hrend des Trainings hochladen"},{local:"verwenden-sie-die-funktion-pushtohub",title:"Verwenden Sie die Funktion `push_to_hub`."},{local:"hochladen-mit-der-weboberflche",title:"Hochladen mit der Weboberfl\xE4che"},{local:"hinzufgen-einer-modellkarte",title:"Hinzuf\xFCgen einer Modellkarte"}],title:"Ein Modell teilen"};function Cs(C){return ks(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Gs extends _s{constructor(h){super();$s(this,h,Cs,js,bs,{})}}export{Gs as default,Rs as metadata};
