import{S as Ol,i as Il,s as Tl,e as s,k as c,w as q,t as n,M as Yl,c as l,d as a,m as d,a as o,x as G,h as r,b as h,G as t,g as p,y as Q,L as Fl,q as B,o as U,B as W,v as Hl}from"../chunks/vendor-hf-doc-builder.js";import{I as $e}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Nl}from"../chunks/CodeBlock-hf-doc-builder.js";function Rl(Ms){let w,ct,b,z,Ae,J,Jt,De,Kt,dt,P,Vt,K,Xt,Zt,ft,fe,ea,ut,f,ke,j,ta,V,aa,sa,Ce,la,oa,na,xe,X,ra,Z,ia,pa,ha,Me,ze,ca,da,Pe,$,fa,Se,ua,ma,Le,va,_a,ya,Ne,A,ga,ee,Ea,wa,Oe,ba,ja,$a,Ie,te,Aa,Te,Da,ka,mt,ue,Ca,vt,v,Ye,ae,xa,Ma,Fe,se,za,Pa,He,le,Sa,_t,S,La,oe,Na,Oa,yt,D,L,Re,ne,Ia,qe,Ta,gt,N,Ya,Ge,Fa,Ha,Et,re,wt,O,Ra,Qe,qa,Ga,bt,k,I,Be,ie,Qa,Ue,Ba,jt,_,Ua,We,Wa,Ja,Je,Ka,Va,$t,C,T,Ke,pe,Xa,Ve,Za,At,y,es,Xe,ts,as,Ze,ss,ls,Dt,Y,os,et,ns,rs,kt,x,F,tt,he,is,at,ps,Ct,H,hs,me,cs,ds,xt,g,fs,st,us,ms,lt,vs,_s,Mt,M,R,ot,ce,ys,nt,gs,zt,u,Es,rt,ws,bs,it,js,$s,pt,As,Ds,ht,ks,Cs,Pt,ve,xs,St,de,Lt;return J=new $e({}),ne=new $e({}),re=new Nl({props:{code:"",highlighted:`<span class="hljs-attr">pretty_name:</span> <span class="hljs-string">SQuAD</span>
<span class="hljs-attr">language:</span>
<span class="hljs-bullet">-</span> <span class="hljs-string">en</span>
<span class="hljs-string">...</span>
<span class="hljs-attr">dataset_info:</span>
  <span class="hljs-attr">features:</span>
  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">id</span>
    <span class="hljs-attr">dtype:</span> <span class="hljs-string">string</span>
  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">title</span>
    <span class="hljs-attr">dtype:</span> <span class="hljs-string">string</span>
  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">context</span>
    <span class="hljs-attr">dtype:</span> <span class="hljs-string">string</span>
  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">question</span>
    <span class="hljs-attr">dtype:</span> <span class="hljs-string">string</span>
  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">answers</span>
    <span class="hljs-attr">sequence:</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">text</span>
      <span class="hljs-attr">dtype:</span> <span class="hljs-string">string</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">answer_start</span>
      <span class="hljs-attr">dtype:</span> <span class="hljs-string">int32</span>
  <span class="hljs-attr">splits:</span>
  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">train</span>
    <span class="hljs-attr">num_bytes:</span> <span class="hljs-number">79346360</span>
    <span class="hljs-attr">num_examples:</span> <span class="hljs-number">87599</span>
  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">validation</span>
    <span class="hljs-attr">num_bytes:</span> <span class="hljs-number">10473040</span>
    <span class="hljs-attr">num_examples:</span> <span class="hljs-number">10570</span>
  <span class="hljs-attr">download_size:</span> <span class="hljs-number">35142551</span>
  <span class="hljs-attr">dataset_size:</span> <span class="hljs-number">89819400</span>`}}),ie=new $e({}),pe=new $e({}),he=new $e({}),ce=new $e({}),de=new Nl({props:{code:`dataset_info:
- config_name: cola
  features:
    ...
  splits:
    ...
  download_size: ...
  dataset_size: ...
- config_name: sst2
  features:
    ...
  splits:
    ...
  download_size: ...
  dataset_size: ...`,highlighted:`<span class="hljs-attr">dataset_info:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">config_name:</span> <span class="hljs-string">cola</span>
  <span class="hljs-attr">features:</span>
    <span class="hljs-string">...</span>
  <span class="hljs-attr">splits:</span>
    <span class="hljs-string">...</span>
  <span class="hljs-attr">download_size:</span> <span class="hljs-string">...</span>
  <span class="hljs-attr">dataset_size:</span> <span class="hljs-string">...</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">config_name:</span> <span class="hljs-string">sst2</span>
  <span class="hljs-attr">features:</span>
    <span class="hljs-string">...</span>
  <span class="hljs-attr">splits:</span>
    <span class="hljs-string">...</span>
  <span class="hljs-attr">download_size:</span> <span class="hljs-string">...</span>
  <span class="hljs-attr">dataset_size:</span> <span class="hljs-string">...</span>`}}),{c(){w=s("meta"),ct=c(),b=s("h1"),z=s("a"),Ae=s("span"),q(J.$$.fragment),Jt=c(),De=s("span"),Kt=n("Create a dataset card"),dt=c(),P=s("p"),Vt=n(`Each dataset should have a dataset card to promote responsible usage and inform users of any potential biases within the dataset.
This idea was inspired by the Model Cards proposed by `),K=s("a"),Xt=n("Mitchell, 2018"),Zt=n(`.
Dataset cards help users understand a dataset\u2019s contents, the context for using the dataset, how it was created, and any other considerations a user should be aware of.`),ft=c(),fe=s("p"),ea=n("This guide shows you how to create a dataset card."),ut=c(),f=s("ol"),ke=s("li"),j=s("p"),ta=n("Create a new dataset card by copying this "),V=s("a"),aa=n("template"),sa=n(" to a "),Ce=s("code"),la=n("README.md"),oa=n(" file in your repository."),na=c(),xe=s("li"),X=s("p"),ra=n("Generate structured tags to help users discover your dataset on the Hub. Create the tags with the "),Z=s("a"),ia=n("online Datasets Tagging app"),pa=n("."),ha=c(),Me=s("li"),ze=s("p"),ca=n("Select the appropriate tags for your dataset from the dropdown menus."),da=c(),Pe=s("li"),$=s("p"),fa=n("Copy the YAML tags under "),Se=s("strong"),ua=n("Finalized tag set"),ma=n(" and paste the tags at the top of your "),Le=s("code"),va=n("README.md"),_a=n(" file."),ya=c(),Ne=s("li"),A=s("p"),ga=n("Fill out the dataset card sections to the best of your ability. Take a look at the "),ee=s("a"),Ea=n("Dataset Card Creation Guide"),wa=n(" for more detailed information about what to include in each section of the card. For fields you are unable to complete, you can write "),Oe=s("strong"),ba=n("[More Information Needed]"),ja=n("."),$a=c(),Ie=s("li"),te=s("p"),Aa=n("Once you\u2019re done filling out the dataset card, commit the changes to the "),Te=s("code"),Da=n("README.md"),ka=n(" file and you should see the completed dataset card on your repository."),mt=c(),ue=s("p"),Ca=n("Feel free to take a look at these dataset card examples to help you get started:"),vt=c(),v=s("ul"),Ye=s("li"),ae=s("a"),xa=n("SNLI"),Ma=c(),Fe=s("li"),se=s("a"),za=n("CNN / DailyMail"),Pa=c(),He=s("li"),le=s("a"),Sa=n("Allocin\xE9"),_t=c(),S=s("p"),La=n("You can also check out the (similar) documentation about "),oe=s("a"),Na=n("dataset cards on the Hub side"),Oa=n("."),yt=c(),D=s("h2"),L=s("a"),Re=s("span"),q(ne.$$.fragment),Ia=c(),qe=s("span"),Ta=n("More YAML tags"),gt=c(),N=s("p"),Ya=n("You can use the "),Ge=s("code"),Fa=n("dataset_info"),Ha=n(" YAML fields to define additional metadata for the dataset. Here is an example for SQuAD:"),Et=c(),q(re.$$.fragment),wt=c(),O=s("p"),Ra=n("These metadata used to be included in the "),Qe=s("code"),qa=n("dataset_infos.json"),Ga=n(" file, which is now deprecated."),bt=c(),k=s("h3"),I=s("a"),Be=s("span"),q(ie.$$.fragment),Qa=c(),Ue=s("span"),Ba=n("Feature types"),jt=c(),_=s("p"),Ua=n("Using the "),We=s("code"),Wa=n("features"),Ja=n(` field you can explicitly define the feature types of your dataset.
This is especially useful when type inference is not obvious.
For example if there\u2019s only one non-empty example in a 1TB dataset, the type inference is not able to infer the type of each column without going through the full dataset.
In this case, specifying the `),Je=s("code"),Ka=n("features"),Va=n(" field makes type inference much easier."),$t=c(),C=s("h3"),T=s("a"),Ke=s("span"),q(pe.$$.fragment),Xa=c(),Ve=s("span"),Za=n("Split sizes"),At=c(),y=s("p"),es=n("Specifying the split sizes with "),Xe=s("code"),ts=n("num_examples"),as=n(` enables TQDM bars (otherwise it doesn\u2019t know how many examples are left).
It also enables integrity verifications: if the dataset doesn\u2019t have the right number of `),Ze=s("code"),ss=n("num_examples"),ls=n(", an error is returned."),Dt=c(),Y=s("p"),os=n("Additionally you can add "),et=s("code"),ns=n("num_bytes"),rs=n(" to specify how big each split is."),kt=c(),x=s("h3"),F=s("a"),tt=s("span"),q(he.$$.fragment),is=c(),at=s("span"),ps=n("Dataset size"),Ct=c(),H=s("p"),hs=n("When "),me=s("a"),cs=n("load_dataset()"),ds=n(" is called, it first downloads the dataset raw data files, and then it prepares the dataset in Arrow format."),xt=c(),g=s("p"),fs=n("You can specify how many bytes are required to download the raw data files with "),st=s("code"),us=n("dataset_size"),ms=n(", and use "),lt=s("code"),vs=n("dataset_size"),_s=n(" for the size of the dataset in Arrow format."),Mt=c(),M=s("h3"),R=s("a"),ot=s("span"),q(ce.$$.fragment),ys=c(),nt=s("span"),gs=n("Multiple configurations"),zt=c(),u=s("p"),Es=n("Certain datasets like "),rt=s("code"),ws=n("glue"),bs=n(" have several configurations ("),it=s("code"),js=n("cola"),$s=n(", "),pt=s("code"),As=n("sst2"),Ds=n(", etc.) that can be loaded using "),ht=s("code"),ks=n('load_dataset("glue", "cola")'),Cs=n(" for example."),Pt=c(),ve=s("p"),xs=n(`Each configuration can have different features, splits and sizes.
You can specify those fields per configuration using a YAML list:`),St=c(),q(de.$$.fragment),this.h()},l(e){const i=Yl('[data-svelte="svelte-1phssyn"]',document.head);w=l(i,"META",{name:!0,content:!0}),i.forEach(a),ct=d(e),b=l(e,"H1",{class:!0});var Nt=o(b);z=l(Nt,"A",{id:!0,class:!0,href:!0});var zs=o(z);Ae=l(zs,"SPAN",{});var Ps=o(Ae);G(J.$$.fragment,Ps),Ps.forEach(a),zs.forEach(a),Jt=d(Nt),De=l(Nt,"SPAN",{});var Ss=o(De);Kt=r(Ss,"Create a dataset card"),Ss.forEach(a),Nt.forEach(a),dt=d(e),P=l(e,"P",{});var Ot=o(P);Vt=r(Ot,`Each dataset should have a dataset card to promote responsible usage and inform users of any potential biases within the dataset.
This idea was inspired by the Model Cards proposed by `),K=l(Ot,"A",{href:!0,rel:!0});var Ls=o(K);Xt=r(Ls,"Mitchell, 2018"),Ls.forEach(a),Zt=r(Ot,`.
Dataset cards help users understand a dataset\u2019s contents, the context for using the dataset, how it was created, and any other considerations a user should be aware of.`),Ot.forEach(a),ft=d(e),fe=l(e,"P",{});var Ns=o(fe);ea=r(Ns,"This guide shows you how to create a dataset card."),Ns.forEach(a),ut=d(e),f=l(e,"OL",{});var m=o(f);ke=l(m,"LI",{});var Os=o(ke);j=l(Os,"P",{});var _e=o(j);ta=r(_e,"Create a new dataset card by copying this "),V=l(_e,"A",{href:!0,rel:!0});var Is=o(V);aa=r(Is,"template"),Is.forEach(a),sa=r(_e," to a "),Ce=l(_e,"CODE",{});var Ts=o(Ce);la=r(Ts,"README.md"),Ts.forEach(a),oa=r(_e," file in your repository."),_e.forEach(a),Os.forEach(a),na=d(m),xe=l(m,"LI",{});var Ys=o(xe);X=l(Ys,"P",{});var It=o(X);ra=r(It,"Generate structured tags to help users discover your dataset on the Hub. Create the tags with the "),Z=l(It,"A",{href:!0,rel:!0});var Fs=o(Z);ia=r(Fs,"online Datasets Tagging app"),Fs.forEach(a),pa=r(It,"."),It.forEach(a),Ys.forEach(a),ha=d(m),Me=l(m,"LI",{});var Hs=o(Me);ze=l(Hs,"P",{});var Rs=o(ze);ca=r(Rs,"Select the appropriate tags for your dataset from the dropdown menus."),Rs.forEach(a),Hs.forEach(a),da=d(m),Pe=l(m,"LI",{});var qs=o(Pe);$=l(qs,"P",{});var ye=o($);fa=r(ye,"Copy the YAML tags under "),Se=l(ye,"STRONG",{});var Gs=o(Se);ua=r(Gs,"Finalized tag set"),Gs.forEach(a),ma=r(ye," and paste the tags at the top of your "),Le=l(ye,"CODE",{});var Qs=o(Le);va=r(Qs,"README.md"),Qs.forEach(a),_a=r(ye," file."),ye.forEach(a),qs.forEach(a),ya=d(m),Ne=l(m,"LI",{});var Bs=o(Ne);A=l(Bs,"P",{});var ge=o(A);ga=r(ge,"Fill out the dataset card sections to the best of your ability. Take a look at the "),ee=l(ge,"A",{href:!0,rel:!0});var Us=o(ee);Ea=r(Us,"Dataset Card Creation Guide"),Us.forEach(a),wa=r(ge," for more detailed information about what to include in each section of the card. For fields you are unable to complete, you can write "),Oe=l(ge,"STRONG",{});var Ws=o(Oe);ba=r(Ws,"[More Information Needed]"),Ws.forEach(a),ja=r(ge,"."),ge.forEach(a),Bs.forEach(a),$a=d(m),Ie=l(m,"LI",{});var Js=o(Ie);te=l(Js,"P",{});var Tt=o(te);Aa=r(Tt,"Once you\u2019re done filling out the dataset card, commit the changes to the "),Te=l(Tt,"CODE",{});var Ks=o(Te);Da=r(Ks,"README.md"),Ks.forEach(a),ka=r(Tt," file and you should see the completed dataset card on your repository."),Tt.forEach(a),Js.forEach(a),m.forEach(a),mt=d(e),ue=l(e,"P",{});var Vs=o(ue);Ca=r(Vs,"Feel free to take a look at these dataset card examples to help you get started:"),Vs.forEach(a),vt=d(e),v=l(e,"UL",{});var Ee=o(v);Ye=l(Ee,"LI",{});var Xs=o(Ye);ae=l(Xs,"A",{href:!0,rel:!0});var Zs=o(ae);xa=r(Zs,"SNLI"),Zs.forEach(a),Xs.forEach(a),Ma=d(Ee),Fe=l(Ee,"LI",{});var el=o(Fe);se=l(el,"A",{href:!0,rel:!0});var tl=o(se);za=r(tl,"CNN / DailyMail"),tl.forEach(a),el.forEach(a),Pa=d(Ee),He=l(Ee,"LI",{});var al=o(He);le=l(al,"A",{href:!0,rel:!0});var sl=o(le);Sa=r(sl,"Allocin\xE9"),sl.forEach(a),al.forEach(a),Ee.forEach(a),_t=d(e),S=l(e,"P",{});var Yt=o(S);La=r(Yt,"You can also check out the (similar) documentation about "),oe=l(Yt,"A",{href:!0,rel:!0});var ll=o(oe);Na=r(ll,"dataset cards on the Hub side"),ll.forEach(a),Oa=r(Yt,"."),Yt.forEach(a),yt=d(e),D=l(e,"H2",{class:!0});var Ft=o(D);L=l(Ft,"A",{id:!0,class:!0,href:!0});var ol=o(L);Re=l(ol,"SPAN",{});var nl=o(Re);G(ne.$$.fragment,nl),nl.forEach(a),ol.forEach(a),Ia=d(Ft),qe=l(Ft,"SPAN",{});var rl=o(qe);Ta=r(rl,"More YAML tags"),rl.forEach(a),Ft.forEach(a),gt=d(e),N=l(e,"P",{});var Ht=o(N);Ya=r(Ht,"You can use the "),Ge=l(Ht,"CODE",{});var il=o(Ge);Fa=r(il,"dataset_info"),il.forEach(a),Ha=r(Ht," YAML fields to define additional metadata for the dataset. Here is an example for SQuAD:"),Ht.forEach(a),Et=d(e),G(re.$$.fragment,e),wt=d(e),O=l(e,"P",{});var Rt=o(O);Ra=r(Rt,"These metadata used to be included in the "),Qe=l(Rt,"CODE",{});var pl=o(Qe);qa=r(pl,"dataset_infos.json"),pl.forEach(a),Ga=r(Rt," file, which is now deprecated."),Rt.forEach(a),bt=d(e),k=l(e,"H3",{class:!0});var qt=o(k);I=l(qt,"A",{id:!0,class:!0,href:!0});var hl=o(I);Be=l(hl,"SPAN",{});var cl=o(Be);G(ie.$$.fragment,cl),cl.forEach(a),hl.forEach(a),Qa=d(qt),Ue=l(qt,"SPAN",{});var dl=o(Ue);Ba=r(dl,"Feature types"),dl.forEach(a),qt.forEach(a),jt=d(e),_=l(e,"P",{});var we=o(_);Ua=r(we,"Using the "),We=l(we,"CODE",{});var fl=o(We);Wa=r(fl,"features"),fl.forEach(a),Ja=r(we,` field you can explicitly define the feature types of your dataset.
This is especially useful when type inference is not obvious.
For example if there\u2019s only one non-empty example in a 1TB dataset, the type inference is not able to infer the type of each column without going through the full dataset.
In this case, specifying the `),Je=l(we,"CODE",{});var ul=o(Je);Ka=r(ul,"features"),ul.forEach(a),Va=r(we," field makes type inference much easier."),we.forEach(a),$t=d(e),C=l(e,"H3",{class:!0});var Gt=o(C);T=l(Gt,"A",{id:!0,class:!0,href:!0});var ml=o(T);Ke=l(ml,"SPAN",{});var vl=o(Ke);G(pe.$$.fragment,vl),vl.forEach(a),ml.forEach(a),Xa=d(Gt),Ve=l(Gt,"SPAN",{});var _l=o(Ve);Za=r(_l,"Split sizes"),_l.forEach(a),Gt.forEach(a),At=d(e),y=l(e,"P",{});var be=o(y);es=r(be,"Specifying the split sizes with "),Xe=l(be,"CODE",{});var yl=o(Xe);ts=r(yl,"num_examples"),yl.forEach(a),as=r(be,` enables TQDM bars (otherwise it doesn\u2019t know how many examples are left).
It also enables integrity verifications: if the dataset doesn\u2019t have the right number of `),Ze=l(be,"CODE",{});var gl=o(Ze);ss=r(gl,"num_examples"),gl.forEach(a),ls=r(be,", an error is returned."),be.forEach(a),Dt=d(e),Y=l(e,"P",{});var Qt=o(Y);os=r(Qt,"Additionally you can add "),et=l(Qt,"CODE",{});var El=o(et);ns=r(El,"num_bytes"),El.forEach(a),rs=r(Qt," to specify how big each split is."),Qt.forEach(a),kt=d(e),x=l(e,"H3",{class:!0});var Bt=o(x);F=l(Bt,"A",{id:!0,class:!0,href:!0});var wl=o(F);tt=l(wl,"SPAN",{});var bl=o(tt);G(he.$$.fragment,bl),bl.forEach(a),wl.forEach(a),is=d(Bt),at=l(Bt,"SPAN",{});var jl=o(at);ps=r(jl,"Dataset size"),jl.forEach(a),Bt.forEach(a),Ct=d(e),H=l(e,"P",{});var Ut=o(H);hs=r(Ut,"When "),me=l(Ut,"A",{href:!0});var $l=o(me);cs=r($l,"load_dataset()"),$l.forEach(a),ds=r(Ut," is called, it first downloads the dataset raw data files, and then it prepares the dataset in Arrow format."),Ut.forEach(a),xt=d(e),g=l(e,"P",{});var je=o(g);fs=r(je,"You can specify how many bytes are required to download the raw data files with "),st=l(je,"CODE",{});var Al=o(st);us=r(Al,"dataset_size"),Al.forEach(a),ms=r(je,", and use "),lt=l(je,"CODE",{});var Dl=o(lt);vs=r(Dl,"dataset_size"),Dl.forEach(a),_s=r(je," for the size of the dataset in Arrow format."),je.forEach(a),Mt=d(e),M=l(e,"H3",{class:!0});var Wt=o(M);R=l(Wt,"A",{id:!0,class:!0,href:!0});var kl=o(R);ot=l(kl,"SPAN",{});var Cl=o(ot);G(ce.$$.fragment,Cl),Cl.forEach(a),kl.forEach(a),ys=d(Wt),nt=l(Wt,"SPAN",{});var xl=o(nt);gs=r(xl,"Multiple configurations"),xl.forEach(a),Wt.forEach(a),zt=d(e),u=l(e,"P",{});var E=o(u);Es=r(E,"Certain datasets like "),rt=l(E,"CODE",{});var Ml=o(rt);ws=r(Ml,"glue"),Ml.forEach(a),bs=r(E," have several configurations ("),it=l(E,"CODE",{});var zl=o(it);js=r(zl,"cola"),zl.forEach(a),$s=r(E,", "),pt=l(E,"CODE",{});var Pl=o(pt);As=r(Pl,"sst2"),Pl.forEach(a),Ds=r(E,", etc.) that can be loaded using "),ht=l(E,"CODE",{});var Sl=o(ht);ks=r(Sl,'load_dataset("glue", "cola")'),Sl.forEach(a),Cs=r(E," for example."),E.forEach(a),Pt=d(e),ve=l(e,"P",{});var Ll=o(ve);xs=r(Ll,`Each configuration can have different features, splits and sizes.
You can specify those fields per configuration using a YAML list:`),Ll.forEach(a),St=d(e),G(de.$$.fragment,e),this.h()},h(){h(w,"name","hf:doc:metadata"),h(w,"content",JSON.stringify(ql)),h(z,"id","create-a-dataset-card"),h(z,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(z,"href","#create-a-dataset-card"),h(b,"class","relative group"),h(K,"href","https://arxiv.org/abs/1810.03993"),h(K,"rel","nofollow"),h(V,"href","https://raw.githubusercontent.com/huggingface/datasets/main/templates/README.md"),h(V,"rel","nofollow"),h(Z,"href","https://huggingface.co/spaces/huggingface/datasets-tagging"),h(Z,"rel","nofollow"),h(ee,"href","https://github.com/huggingface/datasets/blob/main/templates/README_guide.md"),h(ee,"rel","nofollow"),h(ae,"href","https://huggingface.co/datasets/snli"),h(ae,"rel","nofollow"),h(se,"href","https://huggingface.co/datasets/cnn_dailymail"),h(se,"rel","nofollow"),h(le,"href","https://huggingface.co/datasets/allocine"),h(le,"rel","nofollow"),h(oe,"href","https://huggingface.co/docs/hub/datasets-cards"),h(oe,"rel","nofollow"),h(L,"id","more-yaml-tags"),h(L,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(L,"href","#more-yaml-tags"),h(D,"class","relative group"),h(I,"id","feature-types"),h(I,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(I,"href","#feature-types"),h(k,"class","relative group"),h(T,"id","split-sizes"),h(T,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(T,"href","#split-sizes"),h(C,"class","relative group"),h(F,"id","dataset-size"),h(F,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(F,"href","#dataset-size"),h(x,"class","relative group"),h(me,"href","/docs/datasets/v2.7.0/en/package_reference/loading_methods#datasets.load_dataset"),h(R,"id","multiple-configurations"),h(R,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(R,"href","#multiple-configurations"),h(M,"class","relative group")},m(e,i){t(document.head,w),p(e,ct,i),p(e,b,i),t(b,z),t(z,Ae),Q(J,Ae,null),t(b,Jt),t(b,De),t(De,Kt),p(e,dt,i),p(e,P,i),t(P,Vt),t(P,K),t(K,Xt),t(P,Zt),p(e,ft,i),p(e,fe,i),t(fe,ea),p(e,ut,i),p(e,f,i),t(f,ke),t(ke,j),t(j,ta),t(j,V),t(V,aa),t(j,sa),t(j,Ce),t(Ce,la),t(j,oa),t(f,na),t(f,xe),t(xe,X),t(X,ra),t(X,Z),t(Z,ia),t(X,pa),t(f,ha),t(f,Me),t(Me,ze),t(ze,ca),t(f,da),t(f,Pe),t(Pe,$),t($,fa),t($,Se),t(Se,ua),t($,ma),t($,Le),t(Le,va),t($,_a),t(f,ya),t(f,Ne),t(Ne,A),t(A,ga),t(A,ee),t(ee,Ea),t(A,wa),t(A,Oe),t(Oe,ba),t(A,ja),t(f,$a),t(f,Ie),t(Ie,te),t(te,Aa),t(te,Te),t(Te,Da),t(te,ka),p(e,mt,i),p(e,ue,i),t(ue,Ca),p(e,vt,i),p(e,v,i),t(v,Ye),t(Ye,ae),t(ae,xa),t(v,Ma),t(v,Fe),t(Fe,se),t(se,za),t(v,Pa),t(v,He),t(He,le),t(le,Sa),p(e,_t,i),p(e,S,i),t(S,La),t(S,oe),t(oe,Na),t(S,Oa),p(e,yt,i),p(e,D,i),t(D,L),t(L,Re),Q(ne,Re,null),t(D,Ia),t(D,qe),t(qe,Ta),p(e,gt,i),p(e,N,i),t(N,Ya),t(N,Ge),t(Ge,Fa),t(N,Ha),p(e,Et,i),Q(re,e,i),p(e,wt,i),p(e,O,i),t(O,Ra),t(O,Qe),t(Qe,qa),t(O,Ga),p(e,bt,i),p(e,k,i),t(k,I),t(I,Be),Q(ie,Be,null),t(k,Qa),t(k,Ue),t(Ue,Ba),p(e,jt,i),p(e,_,i),t(_,Ua),t(_,We),t(We,Wa),t(_,Ja),t(_,Je),t(Je,Ka),t(_,Va),p(e,$t,i),p(e,C,i),t(C,T),t(T,Ke),Q(pe,Ke,null),t(C,Xa),t(C,Ve),t(Ve,Za),p(e,At,i),p(e,y,i),t(y,es),t(y,Xe),t(Xe,ts),t(y,as),t(y,Ze),t(Ze,ss),t(y,ls),p(e,Dt,i),p(e,Y,i),t(Y,os),t(Y,et),t(et,ns),t(Y,rs),p(e,kt,i),p(e,x,i),t(x,F),t(F,tt),Q(he,tt,null),t(x,is),t(x,at),t(at,ps),p(e,Ct,i),p(e,H,i),t(H,hs),t(H,me),t(me,cs),t(H,ds),p(e,xt,i),p(e,g,i),t(g,fs),t(g,st),t(st,us),t(g,ms),t(g,lt),t(lt,vs),t(g,_s),p(e,Mt,i),p(e,M,i),t(M,R),t(R,ot),Q(ce,ot,null),t(M,ys),t(M,nt),t(nt,gs),p(e,zt,i),p(e,u,i),t(u,Es),t(u,rt),t(rt,ws),t(u,bs),t(u,it),t(it,js),t(u,$s),t(u,pt),t(pt,As),t(u,Ds),t(u,ht),t(ht,ks),t(u,Cs),p(e,Pt,i),p(e,ve,i),t(ve,xs),p(e,St,i),Q(de,e,i),Lt=!0},p:Fl,i(e){Lt||(B(J.$$.fragment,e),B(ne.$$.fragment,e),B(re.$$.fragment,e),B(ie.$$.fragment,e),B(pe.$$.fragment,e),B(he.$$.fragment,e),B(ce.$$.fragment,e),B(de.$$.fragment,e),Lt=!0)},o(e){U(J.$$.fragment,e),U(ne.$$.fragment,e),U(re.$$.fragment,e),U(ie.$$.fragment,e),U(pe.$$.fragment,e),U(he.$$.fragment,e),U(ce.$$.fragment,e),U(de.$$.fragment,e),Lt=!1},d(e){a(w),e&&a(ct),e&&a(b),W(J),e&&a(dt),e&&a(P),e&&a(ft),e&&a(fe),e&&a(ut),e&&a(f),e&&a(mt),e&&a(ue),e&&a(vt),e&&a(v),e&&a(_t),e&&a(S),e&&a(yt),e&&a(D),W(ne),e&&a(gt),e&&a(N),e&&a(Et),W(re,e),e&&a(wt),e&&a(O),e&&a(bt),e&&a(k),W(ie),e&&a(jt),e&&a(_),e&&a($t),e&&a(C),W(pe),e&&a(At),e&&a(y),e&&a(Dt),e&&a(Y),e&&a(kt),e&&a(x),W(he),e&&a(Ct),e&&a(H),e&&a(xt),e&&a(g),e&&a(Mt),e&&a(M),W(ce),e&&a(zt),e&&a(u),e&&a(Pt),e&&a(ve),e&&a(St),W(de,e)}}}const ql={local:"create-a-dataset-card",sections:[{local:"more-yaml-tags",sections:[{local:"feature-types",title:"Feature types"},{local:"split-sizes",title:"Split sizes"},{local:"dataset-size",title:"Dataset size"},{local:"multiple-configurations",title:"Multiple configurations"}],title:"More YAML tags"}],title:"Create a dataset card"};function Gl(Ms){return Hl(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Wl extends Ol{constructor(w){super();Il(this,w,Gl,Rl,Tl,{})}}export{Wl as default,ql as metadata};
